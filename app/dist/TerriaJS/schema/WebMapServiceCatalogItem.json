{
  "type": "object",
  "defaultProperties": [
    "name",
    "type",
    "url"
  ],
  "properties": {
    "layers": {
      "type": "string",
      "title": "Layers",
      "description": "The WMS layers to include.  To specify multiple layers, separate them\rwith a commas."
    },
    "linkedWcsUrl": {
      "type": "string",
      "title": "Linked wcs URL",
      "description": "The URL of a WCS that enables clip-and-ship for this WMS item. This\rproerty is part of an experimental feature and may be subject to change."
    },
    "linkedWcsCoverage": {
      "type": "string",
      "title": "Linked wcs coverage",
      "description": "The coverage name for linked WCS for clip-and-ship. This proerty is part\rof an experimental feature and may be subject to change."
    },
    "styles": {
      "type": "string",
      "title": "Styles",
      "description": "The comma-separated list of styles to request, one per layer list in WebMapServiceCatalogItem's layers."
    },
    "parameters": {
      "type": "object",
      "title": "Parameters",
      "description": "The additional parameters to pass to the WMS server when requesting images.\rAll parameter names must be entered in lowercase in order to be consistent with references in TerrisJS code.\rIf this property is undefined, WebMapServiceCatalogItem.defaultParameters is used."
    },
    "tilingScheme": {
      "type": "object",
      "title": "Tiling scheme",
      "description": "The tiling scheme to pass to the WMS server when requesting images.\rIf this property is undefiend, the default tiling scheme of the provider is used."
    },
    "getFeatureInfoFormats": {
      "type": "array",
      "title": "Get feature info formats",
      "description": "The formats in which to try WMS GetFeatureInfo requests.  If this property is undefined, the `WebMapServiceImageryProvider` defaults\rare used.",
      "format": "tabs",
      "items": {
        "type": "enum"
      }
    },
    "populateIntervalsFromTimeDimension": {
      "type": "boolean",
      "title": "Populate intervals from time dimension",
      "description": "A value indicating whether a time dimension, if it exists in GetCapabilities, should be used to populate\rthe ImageryLayerCatalogItem's intervals.  If the ImageryLayerCatalogItem's intervals property is set explicitly\ron this catalog item, the value of this property is ignored.",
      "format": "checkbox"
    },
    "minScaleDenominator": {
      "type": "number",
      "title": "Min scale denominator",
      "description": "The denominator of the largest scale (smallest denominator) for which tiles should be requested.  For example, if this value is 1000, then tiles representing\ra scale larger than 1:1000 (i.e. numerically smaller denominator, when zooming in closer) will not be requested.  Instead, tiles of the largest-available scale, as specified by this property,\rwill be used and will simply get blurier as the user zooms in closer."
    },
    "maxRefreshIntervals": {
      "type": "number",
      "title": "Max refresh intervals",
      "description": "The maximum number of intervals that can be created by a single\rdate range, when specified in the form time/time/periodicity.\reg. 2015-04-27T16:15:00/2015-04-27T18:45:00/PT15M has 11 intervals"
    },
    "isGeoServer": {
      "type": "boolean",
      "title": "Is geo server",
      "description": "Gets or sets whether this WMS has been identified as being provided by a GeoServer.",
      "format": "checkbox"
    },
    "isEsri": {
      "type": "boolean",
      "title": "Is esri",
      "description": "Gets or sets whether this WMS has been identified as being provided by an Esri ArcGIS MapServer. No assumption is made about where an ArcGIS MapServer endpoint also exists.",
      "format": "checkbox"
    },
    "isNcWMS": {
      "type": "boolean",
      "title": "Is nc w m s",
      "description": "Gets or sets whether this WMS has been identified as being provided by ncWMS.",
      "format": "checkbox"
    },
    "supportsColorScaleRange": {
      "type": "boolean",
      "title": "Supports color scale range",
      "description": "Gets or sets whether this WMS server has been identified as supporting the COLORSCALERANGE parameter.",
      "format": "checkbox"
    },
    "displayDuration": {
      "type": "number",
      "title": "Display duration",
      "description": "Gets or sets how many seconds time-series data with a start date but no end date should last, in seconds."
    },
    "disableUserChanges": {
      "type": "boolean",
      "title": "Disable user changes",
      "description": "A value indicating whether the user's ability to change the display properties of this\rcatalog item is disabled.  For example, if true, WebMapServiceCatalogItem's styles should not be\rchangeable through the user interface.",
      "format": "checkbox"
    },
    "availableStyles": {
      "type": "object",
      "title": "Available styles",
      "description": "The available styles for each selected layer in WebMapServiceCatalogItem's layers.  If undefined,\rthis property is automatically populated from the WMS GetCapabilities on load.  This property is an object that has a\rproperty named for each layer.  The value of the property is an array where each element in the array is a style supported\rby the layer.  The style has `name`, `title`, `abstract`, and `legendUrl` properties."
    },
    "colorScaleMinimum": {
      "type": "number",
      "title": "Color scale minimum",
      "description": "The minumum of the color scale range.  Because COLORSCALERANGE is a non-standard\rproperty supported by ncWMS servers, this property is ignored unless WebMapServiceCatalogItem's supportsColorScaleRange\ris true.  WebMapServiceCatalogItem's colorScaleMaximum must be set as well."
    },
    "colorScaleMaximum": {
      "type": "number",
      "title": "Color scale maximum",
      "description": "The maximum of the color scale range.  Because COLORSCALERANGE is a non-standard\rproperty supported by ncWMS servers, this property is ignored unless WebMapServiceCatalogItem's supportsColorScaleRange\ris true.  WebMapServiceCatalogItem's colorScaleMinimum must be set as well."
    },
    "availableDimensions": {
      "type": "object",
      "title": "Available dimensions",
      "description": "The list of additional dimensions (e.g. elevation) and their possible values available from the\rWMS server.  If undefined, this property is automatically populated from the WMS GetCapabilities on load.\rThis property is an object that has a property named for each layer.  The value of the property is an array\rof dimensions available for this layer.  A dimension has the fields shown in the example below.  See the\rWMS 1.3.0 specification, section C.2, for a description of the fields.  All fields are optional except\r`name` and `options`."
    },
    "dimensions": {
      "type": "object",
      "title": "Dimensions",
      "description": "The selected values for dimensions available for this WMS layer.  The value of this property is\ran object where each key is the name of a dimension and each value is the value to use for that dimension.\rNote that WMS does not allow dimensions to be explicitly specified per layer.  So the selected dimension values are\rapplied to all layers with a corresponding dimension."
    },
    "tokenUrl": {
      "type": "string",
      "title": "Token URL",
      "description": "The URL to use for requesting tokens. Typically, this is set to `/esri-token-auth` to use\rthe ArcGIS token mechanism built into terriajs-server."
    },
    "tokenParameterName": {
      "type": "string",
      "title": "Token parameter name",
      "description": "The name of the URL query parameter used to provide the token\rto the server. This property is ignored if WebMapServiceCatalogItem's tokenUrl is undefined."
    },
    "tokenInvalidHttpCodes": {
      "type": "array",
      "title": "Token invalid http codes",
      "description": "The set of HTTP status codes that indicate that a token is invalid.\rThis property is ignored if WebMapServiceCatalogItem's tokenUrl is undefined.",
      "format": "tabs",
      "items": {
        "type": "number"
      }
    }
  },
  "allOf": [
    {
      "$ref": "CatalogItem.json"
    },
    {
      "$ref": "ImageryLayerCatalogItem.json"
    },
    {
      "$ref": "CatalogMember.json"
    }
  ]
}