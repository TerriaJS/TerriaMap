{
    "docs": [
        {
            "location": "/", 
            "text": "TerriaJS\n is an open-source framework for web-based geospatial catalog explorers.\n\n\n\n\nGetting Started\n: Quick start guide to building your first TerriaJS application.\n\n\nCustomizing\n: Configure and tweak a TerriaJS application, including skinning and setting up the catalog.\n\n\nConnecting to Data\n: Connect TerriaJS to your servers and data.\n\n\nDeploying\n: Deploy a TerriaJS application in simple and advanced scenarios.\n\n\nContributing\n: Add new features to TerriaJS, be part of the TerriaJS development team, set up a development environment, write tests, and perform code reviews.\n\n\n\n\nLooking for help using a TerriaJS-based site? Try the \nNationalMap user documentation\n.\n\n\nThis documentation is maintained at \ngithub.com/TerriaJS/TerriaJS/tree/master/doc\n.\n\n\nIt can be viewed at \ndocs.terria.io\n.", 
            "title": "Home"
        }, 
        {
            "location": "/getting-started/", 
            "text": "The easiest way to get started with TerriaJS is to use \nTerriaMap\n.  TerriaMap is a full-featured application built on TerriaJS, ready to be customized with your own branding and catalog.  It is also a great starting point for more in-depth customization.\n\n\nThis guide explains how to build and run TerriaMap locally.  See \nDeploying\n to learn how to deploy it for use by others.\n\n\nYou may also be interested in how to \nmake your own map without writing any code\n.\n\n\nQuick Start\n\n\nIf you've done this sort of thing before, you'll find it easy to clone and build TerriaMap with these quick instructions:\n\n\ngit clone https://github.com/TerriaJS/TerriaMap.git\n\ncd TerriaMap\n\nnpm install \n npm run gulp \n npm start\n\n# Open at http://localhost:3001\n\n\n\n\nIf you run into trouble or want more explanation, read on.\n\n\nPrerequisites\n\n\nTerriaJS can be built and run on almost any macOS, Linux, or Windows system.  The following are required to build TerriaJS:\n\n\n\n\nThe Bash command shell. On macOS or Linux you almost certainly already have this. On Windows, you can easily get it by installing \nGit for Windows\n. In the instructions below, we assume you're using a Bash command prompt.\n\n\nNode.js\n v6.0 or later.  v7.x and v8.x are also known to work.  You can check your node version by running \nnode --version\n on the command-line.\n\n\nnpm\n v3.0 or later.  v4.x and v5.x are also known to work.  npm is usually installed automatically alongside the above.  You can check your npm version by running \nnpm --version\n.\n\n\n\n\nThe following components are optional:\n\n\n\n\nGDAL\n - Used for the conversion service that transforms Esri Shapefiles and other more obscure formats into GeoJSON for display in TerriaJS.  This is \nnot\n required for formats that TerriaJS supports directly, including KML, GeoJSON, etc.\n\n\n\n\nCloning TerriaMap\n\n\nThe latest version of TerriaMap is on \nGitHub\n, and the preferred way to get it is by using \ngit\n:\n\n\ngit clone https://github.com/TerriaJS/TerriaMap.git\n\ncd TerriaMap\n\n\n\n\nIf you're unable to use git, you can also \ndownload a ZIP file\n and extract it somewhere on your system.  We recommend using git, though, because it makes it much easier to update to later versions in the future.\n\n\nInstalling Dependencies\n\n\nAll of the dependencies required to build and run TerriaMap, other than the prerequisites listed above, are installed using \nnpm\n:\n\n\nnpm install\n\n\n\n\nThe dependencies are installed in the \nnode_modules\n subdirectory.  No global changes are made to your system.\n\n\nBuilding TerriaMap\n\n\nDo a standard build of TerriaMap with:\n\n\nnpm run gulp\n\n\n\n\nOr, you can create a minified release build with:\n\n\nnpm run gulp release\n\n\n\n\nTo watch for changes and automatically do an incremental build when any are detected, use:\n\n\nnpm run gulp watch\n\n\n\n\nnpm run gulp\n simply runs \ngulp\n, so you can use that directly if you prefer (run \nnpm install -g gulp\n to install it globally).\n\n\nThe full set of \ngulp\n tasks can be found on the \nDevelopment Environment\n page.\n\n\nRunning TerriaMap\n\n\nTerriaMap includes a simple Node.js-based web server, called \nterriajs-server\n.  To start it, run:\n\n\nnpm start\n\n\n\n\nThen, open a web browser on \nhttp://localhost:3001\n to use TerriaMap.\n\n\nKeeping up with Updates\n\n\nIf you're building an application by using TerriaMap as a starting point, you will want to keep in sync as TerriaMap is improved and updated to use new versions of TerriaJS.  Forking the TerriaMap repo and using git to keep it in sync is outside the scope of this document, but GitHub has a \nnice explanation\n.\n\n\nAfter pulling new changes, you will need to run \nnpm install\n again to pick up any changed dependencies and then build TerriaMap.  If you have problems building or running, it is sometimes helpful to remove and reinstall the dependencies from npm:\n\n\nrm -rf node_modules\nnpm install\n\n\n\n\nNext Steps\n\n\nNow that you have a working local build of TerriaMap, you may want to \ncustomize it\n or \ndeploy it\n for others to use.", 
            "title": "Getting Started"
        }, 
        {
            "location": "/getting-started/#quick-start", 
            "text": "If you've done this sort of thing before, you'll find it easy to clone and build TerriaMap with these quick instructions:  git clone https://github.com/TerriaJS/TerriaMap.git\n\ncd TerriaMap\n\nnpm install   npm run gulp   npm start\n\n# Open at http://localhost:3001  If you run into trouble or want more explanation, read on.", 
            "title": "Quick Start"
        }, 
        {
            "location": "/getting-started/#prerequisites", 
            "text": "TerriaJS can be built and run on almost any macOS, Linux, or Windows system.  The following are required to build TerriaJS:   The Bash command shell. On macOS or Linux you almost certainly already have this. On Windows, you can easily get it by installing  Git for Windows . In the instructions below, we assume you're using a Bash command prompt.  Node.js  v6.0 or later.  v7.x and v8.x are also known to work.  You can check your node version by running  node --version  on the command-line.  npm  v3.0 or later.  v4.x and v5.x are also known to work.  npm is usually installed automatically alongside the above.  You can check your npm version by running  npm --version .   The following components are optional:   GDAL  - Used for the conversion service that transforms Esri Shapefiles and other more obscure formats into GeoJSON for display in TerriaJS.  This is  not  required for formats that TerriaJS supports directly, including KML, GeoJSON, etc.", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/getting-started/#cloning-terriamap", 
            "text": "The latest version of TerriaMap is on  GitHub , and the preferred way to get it is by using  git :  git clone https://github.com/TerriaJS/TerriaMap.git\n\ncd TerriaMap  If you're unable to use git, you can also  download a ZIP file  and extract it somewhere on your system.  We recommend using git, though, because it makes it much easier to update to later versions in the future.", 
            "title": "Cloning TerriaMap"
        }, 
        {
            "location": "/getting-started/#installing-dependencies", 
            "text": "All of the dependencies required to build and run TerriaMap, other than the prerequisites listed above, are installed using  npm :  npm install  The dependencies are installed in the  node_modules  subdirectory.  No global changes are made to your system.", 
            "title": "Installing Dependencies"
        }, 
        {
            "location": "/getting-started/#building-terriamap", 
            "text": "Do a standard build of TerriaMap with:  npm run gulp  Or, you can create a minified release build with:  npm run gulp release  To watch for changes and automatically do an incremental build when any are detected, use:  npm run gulp watch  npm run gulp  simply runs  gulp , so you can use that directly if you prefer (run  npm install -g gulp  to install it globally).  The full set of  gulp  tasks can be found on the  Development Environment  page.", 
            "title": "Building TerriaMap"
        }, 
        {
            "location": "/getting-started/#running-terriamap", 
            "text": "TerriaMap includes a simple Node.js-based web server, called  terriajs-server .  To start it, run:  npm start  Then, open a web browser on  http://localhost:3001  to use TerriaMap.", 
            "title": "Running TerriaMap"
        }, 
        {
            "location": "/getting-started/#keeping-up-with-updates", 
            "text": "If you're building an application by using TerriaMap as a starting point, you will want to keep in sync as TerriaMap is improved and updated to use new versions of TerriaJS.  Forking the TerriaMap repo and using git to keep it in sync is outside the scope of this document, but GitHub has a  nice explanation .  After pulling new changes, you will need to run  npm install  again to pick up any changed dependencies and then build TerriaMap.  If you have problems building or running, it is sometimes helpful to remove and reinstall the dependencies from npm:  rm -rf node_modules\nnpm install", 
            "title": "Keeping up with Updates"
        }, 
        {
            "location": "/getting-started/#next-steps", 
            "text": "Now that you have a working local build of TerriaMap, you may want to  customize it  or  deploy it  for others to use.", 
            "title": "Next Steps"
        }, 
        {
            "location": "/customizing/", 
            "text": "TerriaJS can be extensively customized, often without writing any code.  The catalog and many aspects of the look and feel are controlled by JSON configuration files.\n\n\nThis section explains the various ways to customize a TerriaJS application.  It assumes you have already completed the \nGetting Started\n section and have a working Terria Map.\n\n\n\n\nClient-side Config\n: Configure which catalog (init) files to load, the application name and support email address, the branding at the top of the application, disclaimers, keys for Bing Maps and Google Analytics, and more.\n\n\nInitialization Files\n: TerriaJS init files describe the catalog that will be presented to the user, the initial map view, and more.  Init files let you connect TerriaJS to your servers and data.\n\n\nServer-side Config\n: Configure which domains the server will proxy for (to avoid \nCross-Origin Resource Sharing (CORS) problems\n), persistence of sharing data, and more.\n\n\nSkinning\n: Customize the look and feel of a TerriaJS application.", 
            "title": "Overview"
        }, 
        {
            "location": "/customizing/client-side-config/", 
            "text": "The file \nwwwroot/config.json\n in TerriaMap contains client-side configuration parameters.\n\n\nIt has this structure:\n\n\n{\n    \ninitializationUrls\n : [\n        \nmyinitfile\n,\n        \nanotherinitfile\n\n    ],\n    \nparameters\n: {\n        \nbingMapsKey\n: \n...\n,\n        ...\n    }\n}\n\n\n\n\nintializationUrls\n\n\nEach string in the array specifies a single \ninitialization file\n (catalog) to be loaded by TerriaJS.  The init files are loaded in the order they're specified.\n\n\nIf a string ends with \n.json\n, it is assumed to be a complete relative or absolute URL to an init file.  The file may be on an entirely separate web server, but in that case it must be accessible for \nCross-Origin Resource Sharing (CORS)\n.  It may also be generated by a service rather than being a simple static file.  If the URL is relative, it is relative to the config file.\n\n\nIf the string does not end with \n.json\n, such as \n\"foo\"\n, it refers to an init file on the same web server at \ninit/foo.json\n.  In a TerriaMap directory on your computer, it can be found at \nwwwroot/init/foo.json\n.\n\n\nparameters\n\n\nSpecifies various options for configuring TerriaJS:\n\n\n\n\n\n\n\n\nOption\n\n\nMeaning\n\n\n\n\n\n\n\n\n\n\n\"appName\"\n\n\nTerriaJS uses this name whenever it needs to display the name of the application.\n\n\n\n\n\n\n\"autoPlay\"\n\n\ntrue to start playing time-dynamic datasets on load, or false to start them paused.\n\n\n\n\n\n\n\"bingMapsKey\"\n\n\nA \nBing Maps API key\n used for requesting Bing Maps base maps and using the Bing Maps geocoder for searching. It is your responsibility to request a key and comply with all terms and conditions.\n\n\n\n\n\n\n\"brandBarElements\": [ ]\n\n\nAn array of strings of HTML that fill up the top left logo space.\n\n\n\n\n\n\n\"defaultMaximumShownFeatureInfos\"\n\n\nThe maximum number of \"feature info\" boxes that can be displayed when clicking a point. (Default: 100)\n\n\n\n\n\n\n\"disclaimer\": {\n\"text\": \"\",\n\"url\": \"\"\n}\n\n\nThis text will be displayed prominently at the bottom of the map, with a clickable link to the URL.\n\n\n\n\n\n\n\"feedbackUrl\"\n\n\nURL of the service used to send feedback.  If not specified, the \"Give Feedback\" button will not appear.\n\n\n\n\n\n\n\"googleAnalyticsKey\"\n\n\nA Google API key for \nGoogle Analytics\n.  If specified, TerriaJS will send various events about how it's used to Google Analytics.\n\n\n\n\n\n\n\"googleAnalyticsOptions\"\n\n\nAdditional options that will be passed to the Google Analytics call.\n\n\n\n\n\n\n\"printDisclaimer\": {\n\"text\": \"\",\n\"url\": \"\"\n}\n\n\nSame as \ndisclaimer\n, except only shown in printed views.\n\n\n\n\n\n\n\"supportEmail\"\n\n\nThe email address shown when things go wrong.\n\n\n\n\n\n\n\"mobileDefaultViewerMode\"\n\n\nA string specifying the default view mode to load when running on a mobile platform. Options are: \n\"3DTerrain\"\n, \n\"3DSmooth\"\n, \n\"2D\"\n. (Default: \n\"2D\"\n)\n\n\n\n\n\n\n\"initFragmentPaths\"\n\n\nAn array of base paths to use to try to use to resolve init fragments in the URL.  For example, if this property is \n[ \"init/\", \"http://example.com/init/\"]\n, then a URL with \n#test\n will first try to load \ninit/test.json\n and, if that fails, next try to load \nhttp://example.com/init/test.json\n.  If not specified, this property defaults to \n[ \"init/\" ]\n.\n\n\n\n\n\n\n\"disableMyLocation\"\n\n\nTrue to disable the \"Centre map at your current location\" button.\n\n\n\n\n\n\n\"disableSplitter\"\n\n\nTrue to disable the use of the splitter control.\n\n\n\n\n\n\n\"tabbedCatalog\"\n\n\nTrue to create a separate explorer panel tab for each top-level catalog group to list its items in.\n\n\n\n\n\n\n\"interceptBrowserPrint\"\n\n\nTrue (the default) to intercept the browser's print feature and use a custom one accessible through the Share panel.\n\n\n\n\n\n\n\"useCesiumIonTerrain\"\n\n\nTrue to use Cesium World Terrain from Cesium ion. False to use terrain from the URL specified with the \n\"cesiumTerrainUrl\"\n property. If this property is false and \n\"cesiumTerrainUrl\"\n is not specified, the 3D view will use a smooth ellipsoid instead of a terrain surface. Defaults to true.\n\n\n\n\n\n\n\"useCesiumIonBingImagery\"\n\n\nTrue to use Bing Maps from Cesium ion (Cesium World Imagery). By default, Ion will be used, unless the \nbingMapsKey\n property is specified, in which case that will be used instead. To disable the Bing Maps layers entirely, set this property to false and set \nbingMapsKey\n to null.\n\n\n\n\n\n\n\"cesiumIonAccessToken\"\n\n\nThe access token to use with Cesium ion. If \n\"useCesiumIonTerrain\"\n is true and this property is not specified, the Cesium default Ion key will be used. It is a violation of the Ion terms of use to use the default key in a deployed application.\n\n\n\n\n\n\n\"cesiumTerrainUrl\"\n\n\nThe URL to use for Cesium terrain in the 3D model. This property is ignored if \n\"useCesiumIonTerrain\"\n is set to true.\n\n\n\n\n\n\n\n\nAdvanced options\n\n\nThese options only need to be changed in unusual deployments. They define the URLs that are accessed for certain additional services, so must be changed if deploying as a static site, for instance.\n\n\n\n\n\n\n\n\nOption\n\n\nMeaning\n\n\nDefault\n\n\n\n\n\n\n\n\n\n\n\"conversionServiceBaseUrl\"\n\n\nURL of OGR2OGR conversion service (part of TerriaJS-Server).\n\n\nconvert/\n\n\n\n\n\n\n\"corsProxyBaseUrl\"\n\n\nURL of CORS proxy service (part of TerriaJS-Server)\n\n\nproxy/\n\n\n\n\n\n\n\"proj4ServiceBaseUrl\"\n\n\nURL of Proj4 projection lookup service (part of TerriaJS-Server)\n\n\nproj4/\n\n\n\n\n\n\n\"proxyableDomainsUrl\"\n\n\nURL of list of domains which the CORS proxy service will allow to be proxied.\n\n\nproxyabledomains/\n\n\n\n\n\n\n\"regionMappingDefinitionsUrl\"\n\n\nURL of the JSON file that defines region mapping for CSV files.\n\n\ndata/regionMapping.json", 
            "title": "Client-side Config"
        }, 
        {
            "location": "/customizing/client-side-config/#intializationurls", 
            "text": "Each string in the array specifies a single  initialization file  (catalog) to be loaded by TerriaJS.  The init files are loaded in the order they're specified.  If a string ends with  .json , it is assumed to be a complete relative or absolute URL to an init file.  The file may be on an entirely separate web server, but in that case it must be accessible for  Cross-Origin Resource Sharing (CORS) .  It may also be generated by a service rather than being a simple static file.  If the URL is relative, it is relative to the config file.  If the string does not end with  .json , such as  \"foo\" , it refers to an init file on the same web server at  init/foo.json .  In a TerriaMap directory on your computer, it can be found at  wwwroot/init/foo.json .", 
            "title": "intializationUrls"
        }, 
        {
            "location": "/customizing/client-side-config/#parameters", 
            "text": "Specifies various options for configuring TerriaJS:     Option  Meaning      \"appName\"  TerriaJS uses this name whenever it needs to display the name of the application.    \"autoPlay\"  true to start playing time-dynamic datasets on load, or false to start them paused.    \"bingMapsKey\"  A  Bing Maps API key  used for requesting Bing Maps base maps and using the Bing Maps geocoder for searching. It is your responsibility to request a key and comply with all terms and conditions.    \"brandBarElements\": [ ]  An array of strings of HTML that fill up the top left logo space.    \"defaultMaximumShownFeatureInfos\"  The maximum number of \"feature info\" boxes that can be displayed when clicking a point. (Default: 100)    \"disclaimer\": { \"text\": \"\", \"url\": \"\" }  This text will be displayed prominently at the bottom of the map, with a clickable link to the URL.    \"feedbackUrl\"  URL of the service used to send feedback.  If not specified, the \"Give Feedback\" button will not appear.    \"googleAnalyticsKey\"  A Google API key for  Google Analytics .  If specified, TerriaJS will send various events about how it's used to Google Analytics.    \"googleAnalyticsOptions\"  Additional options that will be passed to the Google Analytics call.    \"printDisclaimer\": { \"text\": \"\", \"url\": \"\" }  Same as  disclaimer , except only shown in printed views.    \"supportEmail\"  The email address shown when things go wrong.    \"mobileDefaultViewerMode\"  A string specifying the default view mode to load when running on a mobile platform. Options are:  \"3DTerrain\" ,  \"3DSmooth\" ,  \"2D\" . (Default:  \"2D\" )    \"initFragmentPaths\"  An array of base paths to use to try to use to resolve init fragments in the URL.  For example, if this property is  [ \"init/\", \"http://example.com/init/\"] , then a URL with  #test  will first try to load  init/test.json  and, if that fails, next try to load  http://example.com/init/test.json .  If not specified, this property defaults to  [ \"init/\" ] .    \"disableMyLocation\"  True to disable the \"Centre map at your current location\" button.    \"disableSplitter\"  True to disable the use of the splitter control.    \"tabbedCatalog\"  True to create a separate explorer panel tab for each top-level catalog group to list its items in.    \"interceptBrowserPrint\"  True (the default) to intercept the browser's print feature and use a custom one accessible through the Share panel.    \"useCesiumIonTerrain\"  True to use Cesium World Terrain from Cesium ion. False to use terrain from the URL specified with the  \"cesiumTerrainUrl\"  property. If this property is false and  \"cesiumTerrainUrl\"  is not specified, the 3D view will use a smooth ellipsoid instead of a terrain surface. Defaults to true.    \"useCesiumIonBingImagery\"  True to use Bing Maps from Cesium ion (Cesium World Imagery). By default, Ion will be used, unless the  bingMapsKey  property is specified, in which case that will be used instead. To disable the Bing Maps layers entirely, set this property to false and set  bingMapsKey  to null.    \"cesiumIonAccessToken\"  The access token to use with Cesium ion. If  \"useCesiumIonTerrain\"  is true and this property is not specified, the Cesium default Ion key will be used. It is a violation of the Ion terms of use to use the default key in a deployed application.    \"cesiumTerrainUrl\"  The URL to use for Cesium terrain in the 3D model. This property is ignored if  \"useCesiumIonTerrain\"  is set to true.", 
            "title": "parameters"
        }, 
        {
            "location": "/customizing/client-side-config/#advanced-options", 
            "text": "These options only need to be changed in unusual deployments. They define the URLs that are accessed for certain additional services, so must be changed if deploying as a static site, for instance.     Option  Meaning  Default      \"conversionServiceBaseUrl\"  URL of OGR2OGR conversion service (part of TerriaJS-Server).  convert/    \"corsProxyBaseUrl\"  URL of CORS proxy service (part of TerriaJS-Server)  proxy/    \"proj4ServiceBaseUrl\"  URL of Proj4 projection lookup service (part of TerriaJS-Server)  proj4/    \"proxyableDomainsUrl\"  URL of list of domains which the CORS proxy service will allow to be proxied.  proxyabledomains/    \"regionMappingDefinitionsUrl\"  URL of the JSON file that defines region mapping for CSV files.  data/regionMapping.json", 
            "title": "Advanced options"
        }, 
        {
            "location": "/customizing/initialization-files/", 
            "text": "A catalog in TerriaJS is defined in one or more \"initialization files\" (or init files).  In a default TerriaMap installation, the main init file is found in \nwwwroot/init/terria.json\n.\n\n\nAn init file is a \nJSON file\n with this basic structure:\n\n\n{\n    \ncatalog\n: [\n        {\n            \ntype\n: \ngroup\n,\n            \nname\n: \nMy group\n,\n            \nitems\n: [\n            ...\n            ]\n        },\n        ...\n    ],\n    \nhomeCamera\n: {\n        \nnorth\n: -8,\n        \neast\n: 158,\n        \nsouth\n: -45,\n        \nwest\n: 109\n    },\n    \ninitialCamera\n: { ... },\n    \ncorsDomains\n: [ \nmyserver.gov.au\n ]\n}\n\n\n\n\nKey points:\n\n\n\n\ncatalog\n is an array.\n\n\nEvery element of that array must have a \ntype\n (corresponding to a value recognised by TerriaJS) and a \nname\n.\n\n\nThe three major categories of catalog member types are:\n\n\nCatalog Group\n: A group (folder) of items.  Different group types allow the contents to be manually specified or to be automatically determined by querying various types of server.\n\n\nCatalog Item\n: Actual geospatial or chart data from a file or service, in various formats.\n\n\nCatalog Function\n: A parameterized service, such as a Web Processing Service (WPS).  The user supplies the parameters and gets back some result.\n\n\n\n\n\n\n\n\nMost of the other properties of each layer depend on the specific type.  See the links above for details of each type.\n\n\nUsing a catalog file\n\n\nThere are four ways to load a catalog file into a TerriaJS application:\n\n\n\n\nStore it in Terria Map's \nwwwroot/init\n directory, and refer to it in the \ninitializationUrls\n section of the \nconfig.json\n file. It is loaded automatically when you visit the webpage.  This is how \nwwwroot/init/terria.json\n is loaded in the default TerriaMap setup.\n\n\nStore it in Terria Maps's \nwwwroot/init\n directory, without adding it to config.json. Add the catalog file name (without \n.json\n) to the URL after \n#\n. For instance, \nexample.com/terria#mycatalog\n. See \nControlling with URL Parameters\n for more information. This method is useful when developing a catalog that is not quite ready for public access, but it is helpful to show it to interested stakeholders.\n\n\nStore it anywhere on the web (on a \nCORS-enabled\n server). Add the complete URL (including \n.json\n) to the URL, after \n#\n. For instance, \nhttp://nationalmap.gov.au/#http://example.com/mycatalog.json\n. This method is useful when developing services for a TerriaJS instance which you don't directly control, and for rapidly previewing changes which you can also share with people.\n\n\nStore it locally, then drag and drop it into the Terria Map window.\n\n\n\n\nAll catalog files, however loaded, are merged together in TerriaJS. Any two items with the same name and place in the tree are combined. This means that if two catalog files each define a group called \"Water\", there will be only one \"Water\" group in Terria, containing the two sets of group members merged together.\n\n\nEditing catalog files\n\n\nCatalog files can be edited three ways:\n\n\n\n\nUsing a desktop text editor. Be very careful to ensure that your file is valid JSON. This is more restrictive format than simple JavaScript, for instance. You can use \nhttp://jsonlint.com/\n.\n\n\nUsing a JSON-specific editor, such as \nhttp://www.jsoneditoronline.org/\n. This has the advantage that your file will be valid JSON.\n\n\nUsing the TerriaJS Catalog Editor, currently available in a preview version at \nhttp://terria.io/DataSourceEditor/\n. This editor is not yet considered reliable, and may cause data corruption.\n\n\n\n\nCatalog file properties\n\n\ncorsDomains\n\n\nBy default, TerriaJS proxies all requests within the proxy whitelist specified in the \nServer-side Config\n, making the assumption that the servers do not support CORS. You can add hosts that are known to support CORS to this property to avoid proxying them.\n\n\n\"corsDomains\": [ \"myserver.gov.au\" ]\n\n\nSee \nCross-Origin Resource Sharing\n for more information.\n\n\nhomeCamera\n and \ninitialCamera\n\n\nMaps have two camera positions, \nhomeCamera\n and \ninitialCamera\n. They are specified identically. All the examples here use \nhomeCamera\n, but apply equally to both.\n\n\n\n\ninitialCamera\n: the location when the map first displays\n\n\nhomeCamera\n: where the camera goes when you click the \"home\" button between the zoom-in and zoom-out buttons.\n\n\n\n\nOption 1: \nnorth\n, \nsouth\n, \neast\n, \nwest\n\n\nThe bounding box method uses \nnorth\n, \neast\n,\nsouth\n, and \nwest\n, in lat/lng decimal degrees.  The camera will be positioned in the center point of those bounds, looking toward the Earth's center, zoomed back enough to see to the edges of the bounds.\n\n\nThis is the only mode supported in 2D mode (Leaflet). Therefore, you should always include a bounding box, even if you also use another mode.\n\n\nhomeCamera\n: {\n    \nnorth\n: -8,\n    \neast\n: 158,\n    \nsouth\n: -45,\n    \nwest\n: 109\n}\n\n\n\n\nOption 2: \nposition\n, \ndirection\n and \nup\n\n\nThis overrides Option 1.\n\n\nYou can specify \nposition\n, \ndirection\n, and \nup\n (as well as\n\nnorth\n, \neast\n,\nsouth\n, and \nwest\n). \nposition\n, \ndirection\n and \nup\n\nneed \nx\n, \ny\n and \nz\n keys specifying locations in\n\nECEF\n metre coordinates, which\nmeans the origin is the centre of the Earth, positive Z points to\nthe north pole, positive X points toward\n\n\"Null Island\"\n where the\nequator intersects with 0 degrees longitude, and positive Y points at\n(0, 90E) -- which is in the Indian Ocean south of the Bay of Bengal.\n\n\n\n\nposition\n: where the camera is\n\n\ndirection\n: where the camera is looking\n\n\nup\n: which way is \"up\", which determines how the camera is rotated\n\n\n\n\nFor most purposes positioning this way is difficult for normal\nhumans. To see an example, move the camera to some location, click the \"share\" button (and choose to not use the\nURL shortner), then URL-decode the URL you get.\n\n\nhomeCamera\n: {\n    \nwest\n: 105.51019777628066,\n    \nsouth\n: -39.61110094535454,\n    \neast\n: 161.48980219597954,\n    \nnorth\n: -9.09249015267353,\n    \nposition\n: {\n        \nx\n: -6685409.955422118,\n        \ny\n: 7044952.140379313,\n        \nz\n: -4828130.30167422\n    },\n    \ndirection\n: {\n        \nx\n: 0.6155666547559182,\n        \ny\n: -0.6486719065674744,\n        \nz\n: 0.4475516184561574\n    },\n    \nup\n: {\n        \nx\n: -0.30807420442344124,\n        \ny\n: 0.3246424737331665,\n        \nz\n: 0.8942580996654569\n    }\n}\n\n\n\n\nOption 3: \npositionHeading\n (like an aircraft)\n\n\nSetting \npositionHeading\n is useful for when you're showing a view from an aircraft or\nsatellite, and overrides Options 1 and 2.\n\n\nIt has the following attributes:\n\n\n\n\ncameraLongitude\n: longitude of camera\n\n\ncameraLatitude\n: latitude of camera\n\n\ncameraHeight\n: height of camera above earth's surface, probably in metres\n\n\nheading\n: in degrees clockwise from north (90 is east)\n\n\npitch\n: how much the camera is tilted, in degrees down from horizontal (-90 is straight down)\n\n\nroll\n: how much the camera is rotated left or right, in degrees\n\n\n\n\nhomeCamera\n: {\n    \npositionHeading\n: {\n        \ncameraLongitude\n: 145,\n        \ncameraLatitude\n: -37,\n        \ncameraHeight\n: 1000,\n        \nheading\n: 0,\n        \npitch\n: -70,\n        \nroll\n: 0,\n    }\n}\n\n\n\n\nOption 4: \nlookAt\n (a feature)\n\n\nlookAt\n is probably the most useful one for showing a feature on the\nmap, and overrides Options 1, 2, and 3.\n\n\nIt has these attributes:\n\n\n\n\ntargetLongitude\n: The longitude to look at\n\n\ntargetLatitude\n: The latitude to look at\n\n\ntargetHeight\n: in meters above the WGS84 ellipsoid (positive is up)\n\n\nheading\n: in degrees clockwise from north\n\n\npitch\n: in degrees down from horizontal (so negative values mean you're looking at the sky)\n\n\nrange\n: in meters from the thing you're looking at\n\n\n\n\nhomeCamera\n: {\n    \nlookAt\n: {\n        \ntargetLongitude\n: 145,\n        \ntargetLatitude\n: 37,\n        \ntargetHeight\n: 0,\n        \nheading\n: 0,\n        \npitch\n: -90,\n        \nrange\n: 1000,\n    }\n}", 
            "title": "Initialization Files"
        }, 
        {
            "location": "/customizing/initialization-files/#using-a-catalog-file", 
            "text": "There are four ways to load a catalog file into a TerriaJS application:   Store it in Terria Map's  wwwroot/init  directory, and refer to it in the  initializationUrls  section of the  config.json  file. It is loaded automatically when you visit the webpage.  This is how  wwwroot/init/terria.json  is loaded in the default TerriaMap setup.  Store it in Terria Maps's  wwwroot/init  directory, without adding it to config.json. Add the catalog file name (without  .json ) to the URL after  # . For instance,  example.com/terria#mycatalog . See  Controlling with URL Parameters  for more information. This method is useful when developing a catalog that is not quite ready for public access, but it is helpful to show it to interested stakeholders.  Store it anywhere on the web (on a  CORS-enabled  server). Add the complete URL (including  .json ) to the URL, after  # . For instance,  http://nationalmap.gov.au/#http://example.com/mycatalog.json . This method is useful when developing services for a TerriaJS instance which you don't directly control, and for rapidly previewing changes which you can also share with people.  Store it locally, then drag and drop it into the Terria Map window.   All catalog files, however loaded, are merged together in TerriaJS. Any two items with the same name and place in the tree are combined. This means that if two catalog files each define a group called \"Water\", there will be only one \"Water\" group in Terria, containing the two sets of group members merged together.", 
            "title": "Using a catalog file"
        }, 
        {
            "location": "/customizing/initialization-files/#editing-catalog-files", 
            "text": "Catalog files can be edited three ways:   Using a desktop text editor. Be very careful to ensure that your file is valid JSON. This is more restrictive format than simple JavaScript, for instance. You can use  http://jsonlint.com/ .  Using a JSON-specific editor, such as  http://www.jsoneditoronline.org/ . This has the advantage that your file will be valid JSON.  Using the TerriaJS Catalog Editor, currently available in a preview version at  http://terria.io/DataSourceEditor/ . This editor is not yet considered reliable, and may cause data corruption.", 
            "title": "Editing catalog files"
        }, 
        {
            "location": "/customizing/initialization-files/#catalog-file-properties", 
            "text": "", 
            "title": "Catalog file properties"
        }, 
        {
            "location": "/customizing/initialization-files/#corsdomains", 
            "text": "By default, TerriaJS proxies all requests within the proxy whitelist specified in the  Server-side Config , making the assumption that the servers do not support CORS. You can add hosts that are known to support CORS to this property to avoid proxying them.  \"corsDomains\": [ \"myserver.gov.au\" ]  See  Cross-Origin Resource Sharing  for more information.", 
            "title": "corsDomains"
        }, 
        {
            "location": "/customizing/initialization-files/#homecamera-and-initialcamera", 
            "text": "Maps have two camera positions,  homeCamera  and  initialCamera . They are specified identically. All the examples here use  homeCamera , but apply equally to both.   initialCamera : the location when the map first displays  homeCamera : where the camera goes when you click the \"home\" button between the zoom-in and zoom-out buttons.", 
            "title": "homeCamera and initialCamera"
        }, 
        {
            "location": "/customizing/initialization-files/#option-1-north-south-east-west", 
            "text": "The bounding box method uses  north ,  east , south , and  west , in lat/lng decimal degrees.  The camera will be positioned in the center point of those bounds, looking toward the Earth's center, zoomed back enough to see to the edges of the bounds.  This is the only mode supported in 2D mode (Leaflet). Therefore, you should always include a bounding box, even if you also use another mode.  homeCamera : {\n     north : -8,\n     east : 158,\n     south : -45,\n     west : 109\n}", 
            "title": "Option 1: north, south, east, west"
        }, 
        {
            "location": "/customizing/initialization-files/#option-2-position-direction-and-up", 
            "text": "This overrides Option 1.  You can specify  position ,  direction , and  up  (as well as north ,  east , south , and  west ).  position ,  direction  and  up \nneed  x ,  y  and  z  keys specifying locations in ECEF  metre coordinates, which\nmeans the origin is the centre of the Earth, positive Z points to\nthe north pole, positive X points toward \"Null Island\"  where the\nequator intersects with 0 degrees longitude, and positive Y points at\n(0, 90E) -- which is in the Indian Ocean south of the Bay of Bengal.   position : where the camera is  direction : where the camera is looking  up : which way is \"up\", which determines how the camera is rotated   For most purposes positioning this way is difficult for normal\nhumans. To see an example, move the camera to some location, click the \"share\" button (and choose to not use the\nURL shortner), then URL-decode the URL you get.  homeCamera : {\n     west : 105.51019777628066,\n     south : -39.61110094535454,\n     east : 161.48980219597954,\n     north : -9.09249015267353,\n     position : {\n         x : -6685409.955422118,\n         y : 7044952.140379313,\n         z : -4828130.30167422\n    },\n     direction : {\n         x : 0.6155666547559182,\n         y : -0.6486719065674744,\n         z : 0.4475516184561574\n    },\n     up : {\n         x : -0.30807420442344124,\n         y : 0.3246424737331665,\n         z : 0.8942580996654569\n    }\n}", 
            "title": "Option 2: position, direction and up"
        }, 
        {
            "location": "/customizing/initialization-files/#option-3-positionheading-like-an-aircraft", 
            "text": "Setting  positionHeading  is useful for when you're showing a view from an aircraft or\nsatellite, and overrides Options 1 and 2.  It has the following attributes:   cameraLongitude : longitude of camera  cameraLatitude : latitude of camera  cameraHeight : height of camera above earth's surface, probably in metres  heading : in degrees clockwise from north (90 is east)  pitch : how much the camera is tilted, in degrees down from horizontal (-90 is straight down)  roll : how much the camera is rotated left or right, in degrees   homeCamera : {\n     positionHeading : {\n         cameraLongitude : 145,\n         cameraLatitude : -37,\n         cameraHeight : 1000,\n         heading : 0,\n         pitch : -70,\n         roll : 0,\n    }\n}", 
            "title": "Option 3: positionHeading (like an aircraft)"
        }, 
        {
            "location": "/customizing/initialization-files/#option-4-lookat-a-feature", 
            "text": "lookAt  is probably the most useful one for showing a feature on the\nmap, and overrides Options 1, 2, and 3.  It has these attributes:   targetLongitude : The longitude to look at  targetLatitude : The latitude to look at  targetHeight : in meters above the WGS84 ellipsoid (positive is up)  heading : in degrees clockwise from north  pitch : in degrees down from horizontal (so negative values mean you're looking at the sky)  range : in meters from the thing you're looking at   homeCamera : {\n     lookAt : {\n         targetLongitude : 145,\n         targetLatitude : 37,\n         targetHeight : 0,\n         heading : 0,\n         pitch : -90,\n         range : 1000,\n    }\n}", 
            "title": "Option 4: lookAt (a feature)"
        }, 
        {
            "location": "/customizing/server-side-config/", 
            "text": "Coming soon!\n\n\nIn the meantime, see \nhttps://github.com/TerriaJS/terriajs-server\n.", 
            "title": "Server-side Config"
        }, 
        {
            "location": "/customizing/skinning/", 
            "text": "Once you have TerriaMap up and running, you will want to make some changes to logos, labels, and colors to give your application a distinct appearance.\n\n\nHere are some TerriaMap files you may want to tweak.\n\n\nwwwroot/index.html\n\n\nChange the \ntitle\n and the \nmeta\n elements (e.g. \ndescription\n, \ncopyright\n) to reflect your application.  You may also want to change the favicon.\n\n\nwwwroot/config.json\n\n\nChange the \nappName\n, \nbrandBarElements\n, etc.  See \nClient-side Config\n for more information.\n\n\nlib/Styles/variables.scss\n\n\nUncomment and tweak the SASS variables to set the main colors and fonts used throughout the application.  You will need to \nrebuild TerriaMap\n after changing this file.\n\n\nlib/Views/global.scss\n\n\nIn this file, you can override any of TerriaJS's CSS.  It contains some commented-out examples of some things you might like to change.  You can also use your browser's DOM inspector to look at elements in the TerriaJS UI and which CSS classes they use, and then override those classes as desired in this file.  You will need to \nrebuild TerriaMap\n after changing this file.\n\n\nlib/Views/UserInterface.jsx\n\n\nThis file creates the main user interface, using \nReact\n.  In this file you can add extra menu items across the top of the screen, or add extra buttons to the navigation controls area on the right side of the screen.\n\n\nFor example, here's a version that includes an extra menu that links to terria.io, and adds the measure tool to the navigation area:\n\n\nimport React from 'react';\n\nimport version from '../../version';\n\nimport StandardUserInterface from 'terriajs/lib/ReactViews/StandardUserInterface/StandardUserInterface.jsx';\nimport MenuItem from 'terriajs/lib/ReactViews/StandardUserInterface/customizable/MenuItem';\nimport RelatedMaps from './RelatedMaps';\nimport { Menu, Nav } from 'terriajs/lib/ReactViews/StandardUserInterface/customizable/Groups';\nimport MeasureTool from 'terriajs/lib/ReactViews/Map/Navigation/MeasureTool';\n\nimport './global.scss';\n\nexport default function UserInterface(props) {\n    return (\n        \nStandardUserInterface {... props} version={version}\n\n            \nMenu\n\n                \nRelatedMaps viewState={props.viewState} /\n\n                \nMenuItem caption=\nAbout\n href=\nabout.html\n key=\nabout-link\n/\n\n                \nMenuItem caption=\nTerriaJS\n href=\nhttp://terria.io\n key=\nterria-link\n/\n\n            \n/Menu\n\n            \nNav\n\n                \nMeasureTool terria={props.viewState.terria} key=\nmeasure-tool\n/\n\n            \n/Nav\n\n        \n/StandardUserInterface\n\n    );\n}\n\n\n\n\nYou will need to \nrebuild TerriaMap\n after changing this file.\n\n\nindex.js\n\n\nIt's not usually necessary to change this file, but it is the main entry point for TerriaMap, so you can add any extra initialization that your application needs here.  You will need to \nrebuild TerriaMap\n after changing this file.", 
            "title": "Skinning"
        }, 
        {
            "location": "/connecting-to-data/", 
            "text": "This section explains how to get your own catalogs and data into a TerriaJS application.\n\n\nBefore beginning, it is very important to understand \nCross-Origin Resource Sharing\n.  Web browsers impose restrictions on how we're allowed to access data across hosts (e.g. accessing data on \ndata.gov.au\n from a web site running at \nnationalmap.gov.au\n).  Understanding these issues will avoid a lot of frustration while trying to add your data to a TerriaJS application.\n\n\nTerriaJS can interface with three broad types if data:\n\n\n\n\nCatalog Group\n: A group (folder) of items.  Different group types allow the contents to be manually specified or to be automatically determined by querying various types of server.  TerriaJS can use many different types of servers to populate a group, including CKAN, CSW, WMS, and more.  For example, if you define a catalog group that points at a Web Map Service (WMS) server, TerriaJS will query the WMS \nGetCapabilities\n when the group is opened and fill the group with all of the layers advertised by the WMS server.\n\n\nCatalog Item\n: Actual geospatial or chart data from a file or service, in various formats.  TerriaJS supports WMS, KML, GeoJSON, ArcGIS MapServer, and many more files and services as catalog items.\n\n\nCatalog Function\n: A parameterized service, such as a Web Processing Service (WPS).  The user supplies the parameters and gets back some result.", 
            "title": "Overview"
        }, 
        {
            "location": "/connecting-to-data/cross-origin-resource-sharing/", 
            "text": "To ensure that TerriaJS is able to access your data, you must add all servers you intend to access to \ndevserverconfig.json\n's \nallowProxyFor\n list. This \"whitelist\" authorizes the proxy to work with those servers.\n\n\nFailing to do this may result in an error like this:\n\n\n...the server does not support CORS. If this is your server, verify that CORS is enabled and enable it if it is not. If you do not control the server, please contact the administrator of the server and ask them to enable CORS. Or ... ask us to add this server to the list of non-CORS-supporting servers that may be proxied.\n\n\nNext, you should add servers that \ndo\n support Cross-Origin Resource Sharing (CORS) to the \ncorsDomains\n list in your \ninitialization file\n. Servers in this list are contacted directly instead of going through the proxy... except:\n\n\n\n\nin Internet Explorer 9\n\n\nif an HTTPS web page is accessing an HTTP server (this way we avoid a mixed content warning from the browser).\n\n\n\n\nIf your server does \nnot\n support CORS, then you still need to add it to the \nallowProxyFor\n whitelist, but do not add it to the \ncorsDomains\n list. It will then be proxied.\n\n\nSometimes we deliberately exclude CORS-supporting servers from the \ncorsDomains\n list; the proxy caches its data, so we leverage its caching to improve performance.\n\n\nIn both lists, a server name \nfoo.org\n will be interpreted as \n*.foo.org\n. The port must match exactly. It's not very smart, so if you specify port 80 that won't match a server without a port specified, and vice-versa.\n\n\nThe downside to a permissive whitelist is that you'll proxy for more servers, and people could use your proxy to make their (malicious?) traffic look like it's coming from your server instead of from theirs.\n\n\nMore Detailed Explanation\n\n\nAs a general rule, web browsers do not allow web sites running on one host (e.g. \nnationalmap.gov.au\n) from accessing data running on another host (e.g. \ndata.gov.au\n) unless the data server (\ndata.gov.au\n in our example) explicitly enables a feature called Cross-Origin Resource Sharing (CORS) by including a special HTTP header in its response.  Unfortunately, many servers still do not support CORS.  If you control the server you're trying to access data on, enabling CORS is almost certainly a good idea, and you can read more about how to do it at \nenable-cors.org\n.\n\n\nTerriaJS has a trick to allow it to access data from a server even if that server doesn't support CORS: it uses a proxy server built into \nterriajs-server\n, which is included with TerriaMap.  The idea is simple: we avoid the need for cross-origin support from servers by running a proxy on the same host that runs our app.  That proxy can make requests to \nother\n servers on our application's behalf.  This works because cross-origin restrictions are a security feature of web browsers, not web servers.  The proxy makes it look to the browser like the data comes from the same origin.  There's nothing dodgy about this.  The risks that browsers are defending against by imposing cross-origin restrictions are not present in this scenario.\n\n\nHowever, by running a proxy server, our TerriaMap server potentially opens itself up to risks.  We don't want people to be able to bounce arbitrary requests through our proxy, because that could be used to make (malicious?) traffic look like it is coming from your server instead of from the real source.  This is why \nterriajs-server\n uses a whitelist of servers that it is willing to proxy for.  The \nallowProxyFor\n property in \ndevserverconfig.json\n specifies the whitelist.  If the server is asked to proxy for any server not in the whitelist, the request will be rejected.", 
            "title": "Cross-Origin Resource Sharing"
        }, 
        {
            "location": "/connecting-to-data/cross-origin-resource-sharing/#more-detailed-explanation", 
            "text": "As a general rule, web browsers do not allow web sites running on one host (e.g.  nationalmap.gov.au ) from accessing data running on another host (e.g.  data.gov.au ) unless the data server ( data.gov.au  in our example) explicitly enables a feature called Cross-Origin Resource Sharing (CORS) by including a special HTTP header in its response.  Unfortunately, many servers still do not support CORS.  If you control the server you're trying to access data on, enabling CORS is almost certainly a good idea, and you can read more about how to do it at  enable-cors.org .  TerriaJS has a trick to allow it to access data from a server even if that server doesn't support CORS: it uses a proxy server built into  terriajs-server , which is included with TerriaMap.  The idea is simple: we avoid the need for cross-origin support from servers by running a proxy on the same host that runs our app.  That proxy can make requests to  other  servers on our application's behalf.  This works because cross-origin restrictions are a security feature of web browsers, not web servers.  The proxy makes it look to the browser like the data comes from the same origin.  There's nothing dodgy about this.  The risks that browsers are defending against by imposing cross-origin restrictions are not present in this scenario.  However, by running a proxy server, our TerriaMap server potentially opens itself up to risks.  We don't want people to be able to bounce arbitrary requests through our proxy, because that could be used to make (malicious?) traffic look like it is coming from your server instead of from the real source.  This is why  terriajs-server  uses a whitelist of servers that it is willing to proxy for.  The  allowProxyFor  property in  devserverconfig.json  specifies the whitelist.  If the server is asked to proxy for any server not in the whitelist, the request will be rejected.", 
            "title": "More Detailed Explanation"
        }, 
        {
            "location": "/connecting-to-data/catalog-groups/", 
            "text": "A Catalog Group is a folder in the TerriaJS catalog that contains \nCatalog Items\n, \nCatalog Functions\n, and other groups.  The Type column in the table below indicates the \n\"type\"\n property to use in the \nInitialization File\n.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\n\n\n\n\n\n\n\n\nABS ITT\n\n\nabs-itt-dataset-list\n\n\n\n\n\n\nCKAN\n\n\nckan\n\n\n\n\n\n\nCatalog Service for the Web (CSW)\n\n\ncsw\n\n\n\n\n\n\nArcGIS Server\n\n\nesri-group\n\n\n\n\n\n\nArcGIS FeatureServer\n\n\nesri-featureServer-group\n\n\n\n\n\n\nArcGIS MapServer\n\n\nesri-mapServer-group\n\n\n\n\n\n\nGroup (Manual)\n\n\ngroup\n\n\n\n\n\n\nSocrata\n\n\nsocrata\n\n\n\n\n\n\nWeb Feature Service (WFS)\n\n\nwfs-getCapabilities\n\n\n\n\n\n\nWFS Features\n\n\nwfs-features-group\n\n\n\n\n\n\nWeb Map Service (WMS)\n\n\nwms-getCapabilities\n\n\n\n\n\n\nWeb Processing Service (WPS)\n\n\nwps-getCapabilities", 
            "title": "Catalog Groups"
        }, 
        {
            "location": "/connecting-to-data/catalog-items/", 
            "text": "A Catalog Item is a dataset or service that can be enabled for display on the map or in a chart.  The Type column in the table below indicates the \n\"type\"\n property to use in the \nInitialization File\n.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\n\n\n\n\n\n\n\n\nArcGIS FeatureServer\n\n\nesri-featureServer\n\n\n\n\n\n\nArcGIS MapServer\n\n\nesri-mapServer\n\n\n\n\n\n\nBing Maps\n\n\nbing-maps\n\n\n\n\n\n\nCarto Map\n\n\ncarto\n\n\n\n\n\n\nCesium 3D Tiles\n\n\n3d-tiles\n\n\n\n\n\n\nCesium Ion Imagery\n\n\nion-imagery\n\n\n\n\n\n\nCesium Language (CZML)\n\n\nczml\n\n\n\n\n\n\nCesium Terrain\n\n\ncesium-terrain\n\n\n\n\n\n\nCKAN Resource\n\n\nckan-resource\n\n\n\n\n\n\nComposite\n\n\ncomposite\n\n\n\n\n\n\nComma-Separated Values (CSV)\n\n\ncsv\n\n\n\n\n\n\nFormat Conversion Service (based on OGR)\n\n\nogr\n\n\n\n\n\n\nGeoJSON\n\n\ngeojson\n\n\n\n\n\n\nGPX\n\n\ngpx\n\n\n\n\n\n\nKeyhole Markup Language (KML)\n\n\nkml\n\n\n\n\n\n\nMAGDA Distribution\n\n\nmagda-distribution\n\n\n\n\n\n\nMapBox Map\n\n\nmapbox-map\n\n\n\n\n\n\nOpenStreetMap\n\n\nopen-street-map\n\n\n\n\n\n\nSDMX-JSON\n\n\nsdmx-json\n\n\n\n\n\n\nSensor Observation Service (SOS)\n\n\nsos\n\n\n\n\n\n\nURL Template\n\n\nurl-template\n\n\n\n\n\n\nWeb Feature Service (WFS)\n\n\nwfs\n\n\n\n\n\n\nWeb Map Service (WMS)\n\n\nwms", 
            "title": "Catalog Items"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/overview/", 
            "text": "Customizing your Data's Appearance\n\n\nYou can customize your data's appearance by using a small \njson\n configuration file to\ndescribe the settings you want to use.  Without such guidance, TerriaJS chooses\ndefault settings, eg. the size of the points, the color scale, how to cluster values in the\nlegend, and how to display feature information in the \"feature info panel\".\n\n\nIn fact the json is exactly the same as the initialization file,\nand can be included there too.\n\n\nThis section explains how you can use such a file to improve the look of your data:\n\n\n\n\nCustomizing the Appearance of Tabular Data\n\n\nCustomizing the Appearance of Imagery Data\n\n\nCustomizing the Feature Info Template", 
            "title": "Overview"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/overview/#customizing-your-datas-appearance", 
            "text": "You can customize your data's appearance by using a small  json  configuration file to\ndescribe the settings you want to use.  Without such guidance, TerriaJS chooses\ndefault settings, eg. the size of the points, the color scale, how to cluster values in the\nlegend, and how to display feature information in the \"feature info panel\".  In fact the json is exactly the same as the initialization file,\nand can be included there too.  This section explains how you can use such a file to improve the look of your data:   Customizing the Appearance of Tabular Data  Customizing the Appearance of Imagery Data  Customizing the Feature Info Template", 
            "title": "Customizing your Data's Appearance"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/imagery-data/", 
            "text": "Imagery Data\n\n\nOverview\n\n\nHere's an example json file which places some sample WMS items in an open group called \"WMS example\", at the top of the catalog:\n\n\n{\n    \ncatalog\n: [\n        {\n            \nname\n: \nWMS example\n,\n            \ntype\n: \ngroup\n,\n            \nisPromoted\n: true,\n            \nisOpen\n: true,\n            \nitems\n: [\n                {\n                    \nname\n: \nSolar Satellite DNI \n GHI with datetime picker\n,\n                    \nlayers\n: \nSolar_Satellite_DNI_2014\n,\n                    \nurl\n: \nhttp://gis.aremi.nationalmap.gov.au/bom/wms\n,\n                    \ntype\n: \nwms\n,\n                    \nmaxRefreshIntervals\n: 9000,\n                    \nshowDatetimePicker\n: true,\n                    \nuseOwnClock\n: true,\n                    \nfeatureInfoTemplate\n: {\n                        \nname\n:\n{{GRAY_INDEX}} W/m2\n\n                    }\n                },\n                {\n                    \nname\n: \nSolar Satellite DNI \n GHI with initialTimeSource\n,\n                    \nlayers\n: \nSolar_Satellite_DNI_2014\n,\n                    \nurl\n: \nhttp://gis.aremi.nationalmap.gov.au/bom/wms\n,\n                    \ntype\n: \nwms\n,\n                    \nmaxRefreshIntervals\n: 9000,\n                    \ninitialTimeSource\n: \n2014-06-30T22:00:00Z\n,\n                    \nfeatureInfoTemplate\n: {\n                        \nname\n:\n{{GRAY_INDEX}} W/m2\n\n                    }\n                }\n            ]\n        }\n    ]\n}\n\n\n\n\n\nSetting the default date\n\n\nUse \ninitialTimeSource\n to do this.  The allowed values are a valid ISO8601 datestring, \"present\", \"start\" and \"end\".\n\n\nFor more\n\n\nFor more information, check the descriptions under each of the \ncatalog items\n (eg. WMS).", 
            "title": "Imagery Data"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/imagery-data/#imagery-data", 
            "text": "", 
            "title": "Imagery Data"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/imagery-data/#overview", 
            "text": "Here's an example json file which places some sample WMS items in an open group called \"WMS example\", at the top of the catalog:  {\n     catalog : [\n        {\n             name :  WMS example ,\n             type :  group ,\n             isPromoted : true,\n             isOpen : true,\n             items : [\n                {\n                     name :  Solar Satellite DNI   GHI with datetime picker ,\n                     layers :  Solar_Satellite_DNI_2014 ,\n                     url :  http://gis.aremi.nationalmap.gov.au/bom/wms ,\n                     type :  wms ,\n                     maxRefreshIntervals : 9000,\n                     showDatetimePicker : true,\n                     useOwnClock : true,\n                     featureInfoTemplate : {\n                         name : {{GRAY_INDEX}} W/m2 \n                    }\n                },\n                {\n                     name :  Solar Satellite DNI   GHI with initialTimeSource ,\n                     layers :  Solar_Satellite_DNI_2014 ,\n                     url :  http://gis.aremi.nationalmap.gov.au/bom/wms ,\n                     type :  wms ,\n                     maxRefreshIntervals : 9000,\n                     initialTimeSource :  2014-06-30T22:00:00Z ,\n                     featureInfoTemplate : {\n                         name : {{GRAY_INDEX}} W/m2 \n                    }\n                }\n            ]\n        }\n    ]\n}", 
            "title": "Overview"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/imagery-data/#setting-the-default-date", 
            "text": "Use  initialTimeSource  to do this.  The allowed values are a valid ISO8601 datestring, \"present\", \"start\" and \"end\".", 
            "title": "Setting the default date"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/imagery-data/#for-more", 
            "text": "For more information, check the descriptions under each of the  catalog items  (eg. WMS).", 
            "title": "For more"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/", 
            "text": "Tabular Data\n\n\nOverview\n\n\nWhen you drag and drop a csv file onto the map, TerriaJS chooses some display defaults\nfor you, including the size of the points, the color scale, how to cluster values in the\nlegend, and more.\n\n\nYou can gain control of these settings by writing a small json file. In fact the json\nis exactly the same as the initialization file, and can be included there too.\n\n\nLet's start with an example. Save this snippet as \nexample.json\n and drag it onto the map.\n\n\n{\n    \ncatalog\n: [\n        {\n            \nname\n: \nVictorian postcodes\n,\n            \ntype\n: \ncsv\n,\n            \nurl\n: \nhttps://raw.githubusercontent.com/TerriaJS/terriajs/5.2.4/wwwroot/test/csv/3000s.csv\n,\n            \ntableStyle\n: {\n                \ncolorMap\n: \ngreen-orange\n\n            }\n        }\n    ]\n}\n\n\n\n\nAt first it will appear like nothing has happened. This is because json files instruct Terria to update the catalog, not directly add data onto the map.\nSo head back to the Data Catalog, and scroll to the bottom. You will see a new item called\n\"Victorian postcodes\". Add this to the map.\n\n\nTwo things will happen. First, you will get a message telling you that many of the values\nare not actually valid Australian postcodes. We'll fix that in a moment. Second, you will\nsee a swathe of yellow-green color across Victoria. Without the json, the csv file would\nhave appeared using the default shades of red.\n\n\nTo remove the invalid region name warning, just add this to the json (at the same level as \"name\" and \"type\"):\n\n\n            \nshowWarnings\n: false,\n\n\n\n\nThis same option can be used with any tabular data type, eg. Sensor Observation Service and SDMX-JSON items as well.\n\n\nPlease note this documentation is still being developed, and does not cover everything\nthat is possible.\nThe definitive source of what you can do with \ntableStyle\n is this pair:\n\n\n\n\nTableStyle\n\n\nTableColumnStyle\n\n\n\n\nReferencing your data\n\n\nAs you can see in the example above, you need to provide a URL to the csv data in the json file. If your data can be made accessible publicly, \ngithub gists\n are a convenient way to do this.\n\n\nFor small data files, you can embed the data directly in the json too, eg. instead of \n\"url\"\n, use:\n\n\n            \ndata\n: \nlon,lat,value\\n134.384,-26.716,5\\n121.659,-33.592,10\n\n\n\n\n\nManipulating time\n\n\ntimeColumn\n\n\nYou can set which column controls the time slider by setting \ntimeColumn\n:\n\n\n            \ntableStyle\n: {\n                \ntimeColumn\n: \nname-or-index-of-column\n\n            }\n\n\n\n\nUse \n\"timeColumn\": null\n to remove the time slider altogether for this dataset.\n\n\nidColumns\n\n\nIf you have data that shows particular features over time, you can have a time-series plot of the\nchosen column values to appear in the feature info panel when you click on a feature, so long\nas you tell TerriaJS how to track individual features over time.\n\n\nIf your table has a time column and a column named \nid\n, this will happen automatically.\n\n\nOtherwise, you can tell TerriaJS which column or columns to use for the feature ids, by setting\n\nidColumns\n (this is on at the same level as the dataset's name or type, not inside \ntableStyle\n).\nThis should be an array of column names or indexes, eg.\n\n\n        \nidColumns\n: [\nfeature name\n],\n\n\n\n\nIf your features have fixed lat/lon positions, you could use:\n\n\n        \nidColumns\n: [\nlat\n, \nlon\n],\n\n\n\n\nControlling how table columns appear in the workbench\n\n\ndataVariable\n\n\nIf you want the dataset to start with a different column selected, use \ndataVariable\n:\n\n\n            \ntableStyle\n: {\n                \ndataVariable\n: \nname-or-index-of-column\n\n            }\n\n\n\n\ncolumns\n\n\nIf you want to change the appearance of individual columns, use \ntableStyle\n's \ncolumns\n property, eg:\n\n\n          \ntableStyle\n: {\n            \ncolumns\n: {\n              \noriginal name\n: {\n                \nname\n: \nbetter name\n,\n                \nformat\n: {\n                  \nmaximumFractionDigits\n: 0\n                }\n              },\n              \nbad\n: {\n                  \ntype\n: \nhidden\n\n              }\n            }\n          },\n\n\n\n\nThis example shows a few possibilities:\n\n\n\n\nA column called \"original name\" is displayed with the name \"better name\".\n\n\nThe legend for that column is shown without any decimal places (\nmaximumFractionDigits\n 0).\n\n\nA column in the original data called \"bad\" is hidden from the workbench.\n\n\n\n\nThe full list of options is in \nTableColumnStyle\n.\n\n\nColoring\n\n\nUse the following settings to adjust how points and regions are colored.\n\n\ncolorMap\n\n\nIn the example above we specified the two ends of the color spectrum to use via the setting\n\n\"colorMap\": \"green-orange\"\n, where \ngreen\n and \norange\n are two colors in CSS format. In fact you can specify as many colors as you like, separated by hyphens, and the colors are evenly spaced over the range of values, eg.\n\n\n                \ncolorMap\n: \nred-white-hsl(240,50%,50%)\n\n\n\n\n\nIf you want more control what fraction of the range each color should apply,\nyou can use this alternative syntax:\n\n\n                \ncolorMap\n: [\n                    {\n                        \ncolor\n: \nrgba(0,0,200,1.0)\n,\n                        \noffset\n: 0\n                    },\n                    {\n                        \ncolor\n: \nrgba(200,200,200,1.00)\n,\n                        \noffset\n: 0.6\n                    },\n                    {\n                        \ncolor\n: \nrgba(200,0,0,1.00)\n,\n                        \noffset\n: 1\n                    }\n                ],\n\n\n\n\ncolorBins\n\n\nYou can explicitly state how many colors (color \"bins\") you want to divide the data into, eg.\n\n\n                \ncolorBins\n: 16\n\n\n\n\nor, if you have specific boundaries in mind, you can list them, eg.\n\n\n                \ncolorBins\n: [3000, 3100, 3800, 3850, 3950, 4000]\n\n\n\n\ncolorPalette\n\n\nTo simplify the settings, you can specify a \nColorBrewer\n\npalette directly, eg.\n\n\n            \ntableStyle\n: {\n                \ncolorPalette\n: \n10-class Set3\n,\n                \ncolorBins\n: 10\n            }\n\n\n\n\n\"10-class BrBG\"\n is also a valid choice.\n\n\nThis property is ignored if colorMap is defined.\n\n\ncolorBinMethod\n\n\nUse this to force a particular method for quantizing colors.\nThe alternatives are \"auto\" (the default), \"ckmeans\", \"quantile\" or \"none\"\n(equivalent to \n\"colorBins\": 0\n).\n\n\nimageUrl\n\n\nFor lat/lon datasets, if you want to use a particular image instead of a circle,\nyou can specify its url as the \nimageUrl\n, eg. in \ntest.json\n:\n\n\n            \nimageUrl\n: \ntest/images/pow32.png\n,\n\n\n\n\nSizing\n\n\nscale\n\n\nThe size of each point (or image), eg.\n\n\n            \ntableStyle\n: {\n                \nscale\n: 2\n            }\n\n\n\n\nscaleByValue\n\n\nA Boolean for whether points should be scaled by the value of the selected \ndataVariable\n. Defaults to \nfalse\n.\n\n\n            \ntableStyle\n: {\n                \nscale\n: 2,\n                \nscaleByValue\n: true\n            }\n\n\n\n\nminDisplayValue\n\n\nAll data values less than or equal to this are considered equal for the purpose of display.\n\n\nmaxDisplayValue\n\n\nAll data values greater than or equal to this are considered equal for the purpose of display.\n\n\nclampDisplayValue\n\n\nA Boolean - if true, display values that fall outside the display range show as min and max colors.\n\n\nOther settings\n\n\nFor a full list of the available settings, see the \nTableStyle\n and \nTableColumnStyle\n models mentioned earlier.\n\n\nMore examples\n\n\nSome examples are here:\n\nhttps://github.com/TerriaJS/terriajs/blob/master/wwwroot/test/init/test-tablestyle.json\n\n\nYou can add this directly to your catalog by appending \n#build/TerriaJS/test/init/test-tablestyle.json\n to the URL to your map, eg. \nhttp://localhost:3001/#build/TerriaJS/test/init/test-tablestyle.json\n.", 
            "title": "Tabular Data"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#tabular-data", 
            "text": "", 
            "title": "Tabular Data"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#overview", 
            "text": "When you drag and drop a csv file onto the map, TerriaJS chooses some display defaults\nfor you, including the size of the points, the color scale, how to cluster values in the\nlegend, and more.  You can gain control of these settings by writing a small json file. In fact the json\nis exactly the same as the initialization file, and can be included there too.  Let's start with an example. Save this snippet as  example.json  and drag it onto the map.  {\n     catalog : [\n        {\n             name :  Victorian postcodes ,\n             type :  csv ,\n             url :  https://raw.githubusercontent.com/TerriaJS/terriajs/5.2.4/wwwroot/test/csv/3000s.csv ,\n             tableStyle : {\n                 colorMap :  green-orange \n            }\n        }\n    ]\n}  At first it will appear like nothing has happened. This is because json files instruct Terria to update the catalog, not directly add data onto the map.\nSo head back to the Data Catalog, and scroll to the bottom. You will see a new item called\n\"Victorian postcodes\". Add this to the map.  Two things will happen. First, you will get a message telling you that many of the values\nare not actually valid Australian postcodes. We'll fix that in a moment. Second, you will\nsee a swathe of yellow-green color across Victoria. Without the json, the csv file would\nhave appeared using the default shades of red.  To remove the invalid region name warning, just add this to the json (at the same level as \"name\" and \"type\"):               showWarnings : false,  This same option can be used with any tabular data type, eg. Sensor Observation Service and SDMX-JSON items as well.  Please note this documentation is still being developed, and does not cover everything\nthat is possible.\nThe definitive source of what you can do with  tableStyle  is this pair:   TableStyle  TableColumnStyle", 
            "title": "Overview"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#referencing-your-data", 
            "text": "As you can see in the example above, you need to provide a URL to the csv data in the json file. If your data can be made accessible publicly,  github gists  are a convenient way to do this.  For small data files, you can embed the data directly in the json too, eg. instead of  \"url\" , use:               data :  lon,lat,value\\n134.384,-26.716,5\\n121.659,-33.592,10", 
            "title": "Referencing your data"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#manipulating-time", 
            "text": "", 
            "title": "Manipulating time"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#timecolumn", 
            "text": "You can set which column controls the time slider by setting  timeColumn :               tableStyle : {\n                 timeColumn :  name-or-index-of-column \n            }  Use  \"timeColumn\": null  to remove the time slider altogether for this dataset.", 
            "title": "timeColumn"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#idcolumns", 
            "text": "If you have data that shows particular features over time, you can have a time-series plot of the\nchosen column values to appear in the feature info panel when you click on a feature, so long\nas you tell TerriaJS how to track individual features over time.  If your table has a time column and a column named  id , this will happen automatically.  Otherwise, you can tell TerriaJS which column or columns to use for the feature ids, by setting idColumns  (this is on at the same level as the dataset's name or type, not inside  tableStyle ).\nThis should be an array of column names or indexes, eg.           idColumns : [ feature name ],  If your features have fixed lat/lon positions, you could use:           idColumns : [ lat ,  lon ],", 
            "title": "idColumns"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#controlling-how-table-columns-appear-in-the-workbench", 
            "text": "", 
            "title": "Controlling how table columns appear in the workbench"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#datavariable", 
            "text": "If you want the dataset to start with a different column selected, use  dataVariable :               tableStyle : {\n                 dataVariable :  name-or-index-of-column \n            }", 
            "title": "dataVariable"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#columns", 
            "text": "If you want to change the appearance of individual columns, use  tableStyle 's  columns  property, eg:             tableStyle : {\n             columns : {\n               original name : {\n                 name :  better name ,\n                 format : {\n                   maximumFractionDigits : 0\n                }\n              },\n               bad : {\n                   type :  hidden \n              }\n            }\n          },  This example shows a few possibilities:   A column called \"original name\" is displayed with the name \"better name\".  The legend for that column is shown without any decimal places ( maximumFractionDigits  0).  A column in the original data called \"bad\" is hidden from the workbench.   The full list of options is in  TableColumnStyle .", 
            "title": "columns"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#coloring", 
            "text": "Use the following settings to adjust how points and regions are colored.", 
            "title": "Coloring"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#colormap", 
            "text": "In the example above we specified the two ends of the color spectrum to use via the setting \"colorMap\": \"green-orange\" , where  green  and  orange  are two colors in CSS format. In fact you can specify as many colors as you like, separated by hyphens, and the colors are evenly spaced over the range of values, eg.                   colorMap :  red-white-hsl(240,50%,50%)   If you want more control what fraction of the range each color should apply,\nyou can use this alternative syntax:                   colorMap : [\n                    {\n                         color :  rgba(0,0,200,1.0) ,\n                         offset : 0\n                    },\n                    {\n                         color :  rgba(200,200,200,1.00) ,\n                         offset : 0.6\n                    },\n                    {\n                         color :  rgba(200,0,0,1.00) ,\n                         offset : 1\n                    }\n                ],", 
            "title": "colorMap"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#colorbins", 
            "text": "You can explicitly state how many colors (color \"bins\") you want to divide the data into, eg.                   colorBins : 16  or, if you have specific boundaries in mind, you can list them, eg.                   colorBins : [3000, 3100, 3800, 3850, 3950, 4000]", 
            "title": "colorBins"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#colorpalette", 
            "text": "To simplify the settings, you can specify a  ColorBrewer \npalette directly, eg.               tableStyle : {\n                 colorPalette :  10-class Set3 ,\n                 colorBins : 10\n            }  \"10-class BrBG\"  is also a valid choice.  This property is ignored if colorMap is defined.", 
            "title": "colorPalette"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#colorbinmethod", 
            "text": "Use this to force a particular method for quantizing colors.\nThe alternatives are \"auto\" (the default), \"ckmeans\", \"quantile\" or \"none\"\n(equivalent to  \"colorBins\": 0 ).", 
            "title": "colorBinMethod"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#imageurl", 
            "text": "For lat/lon datasets, if you want to use a particular image instead of a circle,\nyou can specify its url as the  imageUrl , eg. in  test.json :               imageUrl :  test/images/pow32.png ,", 
            "title": "imageUrl"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#sizing", 
            "text": "", 
            "title": "Sizing"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#scale", 
            "text": "The size of each point (or image), eg.               tableStyle : {\n                 scale : 2\n            }", 
            "title": "scale"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#scalebyvalue", 
            "text": "A Boolean for whether points should be scaled by the value of the selected  dataVariable . Defaults to  false .               tableStyle : {\n                 scale : 2,\n                 scaleByValue : true\n            }", 
            "title": "scaleByValue"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#mindisplayvalue", 
            "text": "All data values less than or equal to this are considered equal for the purpose of display.", 
            "title": "minDisplayValue"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#maxdisplayvalue", 
            "text": "All data values greater than or equal to this are considered equal for the purpose of display.", 
            "title": "maxDisplayValue"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#clampdisplayvalue", 
            "text": "A Boolean - if true, display values that fall outside the display range show as min and max colors.", 
            "title": "clampDisplayValue"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#other-settings", 
            "text": "For a full list of the available settings, see the  TableStyle  and  TableColumnStyle  models mentioned earlier.", 
            "title": "Other settings"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/tabular-data/#more-examples", 
            "text": "Some examples are here: https://github.com/TerriaJS/terriajs/blob/master/wwwroot/test/init/test-tablestyle.json  You can add this directly to your catalog by appending  #build/TerriaJS/test/init/test-tablestyle.json  to the URL to your map, eg.  http://localhost:3001/#build/TerriaJS/test/init/test-tablestyle.json .", 
            "title": "More examples"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/feature-info-template/", 
            "text": "Feature Information Template\n\n\nYou can add a \nfeatureInfoTemplate\n to the items in your catalog \njson\n file like so:\n\n\n{\n  \"catalog\": [\n    {\n      \"name\": \"ArcGIS Server\",\n      \"type\": \"group\",\n      \"items\": [\n        {\n          \"name\": \"Gravity Anomaly two\",\n          \"type\": \"esri-mapServer\",\n          \"url\": \"http://www.ga.gov.au/gisimg/rest/services/earth_science/Geoscience_Australia_National_Geophysical_Grids/MapServer/6\",\n          \"attribution\" :\n            {\n              \"text\" : \"Geoscience Australia\",\n              \"link\" : \"http://www.ga.gov.au\"\n            },\n          \"featureInfoTemplate\" : \"Pixel colour: \nb\nRed={{Red}} Blue={{Blue}} Green={{Green}}\n/b\n.\"\n        }\n      ]\n    }\n  ]\n}\n\n\n\nThe template will replace all occurrences of \n{{property}}\n with the value of the property for that feature.\n\n\nThe result is:\n\n\n\n\ninstead of:\n\n\n\n\nYou can provide a template to use for the name of the collapsible section (eg. to replace \nRGB\n in the example above), like so:\n\n\n          \"featureInfoTemplate\" : {\n              \"template\": \"\ndiv\nPixel colour: {{\nfoobar}}\n/div\n\",\n              \"name\": \"Red {{Red}}\"\n          }\n\n\n\nMore details\n\n\nThe template is rendered using \nMustache\n, so you can use all of its features here.\n\n\nIn particular, you can render properties that include html by using triple-braces, eg. \n{{{property}}}\n.\n\n\nYou can make use of partial templates (and even recursive templates) by specifying your template and partials as a json object, eg.:\n\n\n          \"featureInfoTemplate\" : {\n              \"template\": \"\ndiv\nPixel colour: {{\nfoobar}}\n/div\n\",\n              \"partials\": {\n                  \"foobar\": \"\nb\nRed={{Red}} Blue={{Blue}} Green={{Green}}\n/b\n\"\n              }\n          }\n\n\n\nAfter Mustache has rendered the template, the result is displayed using \nMarkdown\n, so you could also write:\n\n\n          \"featureInfoTemplate\" : \"Pixel colour: *Red={{Red}} Blue={{Blue}} Green={{Green}}*.\"\n\n\n\nFormatting numbers\n\n\nThe preferred way to format numbers is using the \nformats\n option, eg:\n\n\n          \"featureInfoTemplate\": {\n            \"template\": \"Pixel colour: \nb\nRed={{Red}} Blue={{Blue}} Green={{Green}}\n/b\n.\",\n            \"formats\": {\n              \"Red\": {\n                \"type\": \"number\",\n                \"maximumFractionDigits\": 2\n              },\n              \"Green\": {\n                \"type\": \"number\",\n                \"maximumFractionDigits\": 2\n              },\n              \"Blue\": {\n                \"type\": \"number\",\n                \"maximumFractionDigits\": 2\n              }\n            }\n          }\n\n\n\n\"type\"\n specifies the type of formatting that will be applied to the property. Here we are using \n\"number\"\n formatting which is also the default formatting if \n\"type\"\n is not supplied.\n\n\nThe supported format options are:\n\n\n\n\n\"maximumFractionDigits\": X\n: To reduce the number of decimal places to a maximum of X digits.\n\n\n\"minimumFractionDigits\": X\n: To increase the number of decimal places to a minimum of X digits.\n\n\n\"useGrouping\": true\n: To show thousands separators.\n\n\n\"style\": \"percent\"\n: To show 0.15 as 15%.\n\n\n\n\nA second method is to use \nterria.formatNumber\n directly in the template. This accepts an initial JSON string describing the same options as above. To simplify the notation, the quotes around the keys are optional here.\n\n\n          \"featureInfoTemplate\": \"template\": \"Pixel colour: \nb\nRed={{#terria.formatNumber}}{maximumFractionDigits:3}{{Red}}{{/terria.formatNumber}}\n/b\n.\"\n\n\n\nURL-encoding strings\n\n\nTo URL-encode a value in a template, use \nterria.urlEncode\n or \nterria.urlEncodeComponent\n.  For example:\n\n\nTest: {{#terria.urlEncode}}http://example.com/a b{{/terria.urlEncode}}\nTest: {{#terria.urlEncodeComponent}}W/HOE#1{{/terria.urlEncodeComponent}}\n\n\n\nFormatting dates\n\n\nSimilar to formatting numbers you can format dates in the \n\"formats\"\n section by suppliying \n\"dateTime\"\n in the \n\"type\"\n property, eg:\n\n\n          \"featureInfoTemplate\": {\n            \"template\": \"Date: {{Date}}\",\n            \"formats\": {\n              \"Date\": {\n                \"type\": \"dateTime\";\n                \"format\": \"dd-mm-yyyy HH:MM:ss\";\n              }\n            }\n          }\n\n\n\nThe date format style used for the \n\"format\"\n property is the style from the \nnpm dateformat package\n, e.g. \n\"dd-mm-yyyy HH:MM:ss\"\n or \n\"isoDateTime\"\n.\n\n\nAs with number you can also use \nterria.dateTimeformat\n directly in the template. This accepts an initial JSON string describing the same options as above.\n\n\n          \"featureInfoTemplate\": \"template\": \"{{#terria.formatDateTime}}{\"format\": \"dd-mm-yyyy HH:MM:ss\"}2017-11-23T08:47:53Z{{/terria.formatDateTime}}\n/b\n.\"\n\n\n\nTime-series charts\n\n\nFor features with time-varying table-based data structures (eg. CSV, SOS2, SDMX-JSON, if there is a time column), the feature info panel also includes a chart of the data over time, eg.\n\n\n\n\nYou can place this chart in your template using \n{{terria.timeSeries.chart}}\n.  Alternatively, you can access the following component information:\n\n\n\n\n{{terria.timeSeries.xName}}\n - the x-column name\n\n\n{{terria.timeSeries.yName}}\n - the y-column name\n\n\n{{terria.timeSeries.title}}\n\n\n{{terria.timeSeries.id}}\n\n\n{{terria.timeSeries.units}}\n - the column units as a comma-separated string.\n\n\n{{terria.timeSeries.data}}\n - the data as a comma-separated string.\n\n\n\n\nPlease note:\n\n If any of the component information above contains double-quotes, double quotes will be removed before TerriaJS processes the template further.\n\n If any of the component information above is used as part of tag attributes, it must be surrounded by double-quotes. e.g. \nchart y-column=\"{{terria.timeSeries.yName}}\"\n/chart\n\n\nSo you could reconstruct the chart manually as:\n\n\nh4\n{{terria.timeSeries.title}}\n/h4\n\n\nchart x-column=\n{{terria.timeSeries.xName}}\n\n       y-column=\n{{terria.timeSeries.yName}}\n\n       id=\n{{terria.timeSeries.id}}\n\n       column-units=\n{{terria.timeSeries.units}}\n\n    {{terria.timeSeries.data}}\n\n/chart\n\n\n\n\n\nor use this as a basis to customise the chart.\n\n\nOther supporting data\n\n\nThe clicked point's latitude and longitude are also available as \n{{terria.coords.latitude}}\n and \n{{terria.coords.longitude}}\n.\n\n\nThe current time for the layer is avaliable as \n{{terria.currentTime}}\n.\n\n\nMore examples\n\n\nSome examples are here: \nhttps://github.com/TerriaJS/terriajs/blob/master/wwwroot/test/init/csv.json\n, and \ncharts.json\n.\n\n\nYou can add this directly to your catalog by appending \n#build/TerriaJS/test/init/csv.json\n to the URL to your map, eg. \nhttp://localhost:3001/#build/TerriaJS/test/init/csv.json\n.", 
            "title": "Feature Information Template"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/feature-info-template/#feature-information-template", 
            "text": "You can add a  featureInfoTemplate  to the items in your catalog  json  file like so:  {\n  \"catalog\": [\n    {\n      \"name\": \"ArcGIS Server\",\n      \"type\": \"group\",\n      \"items\": [\n        {\n          \"name\": \"Gravity Anomaly two\",\n          \"type\": \"esri-mapServer\",\n          \"url\": \"http://www.ga.gov.au/gisimg/rest/services/earth_science/Geoscience_Australia_National_Geophysical_Grids/MapServer/6\",\n          \"attribution\" :\n            {\n              \"text\" : \"Geoscience Australia\",\n              \"link\" : \"http://www.ga.gov.au\"\n            },\n          \"featureInfoTemplate\" : \"Pixel colour:  b Red={{Red}} Blue={{Blue}} Green={{Green}} /b .\"\n        }\n      ]\n    }\n  ]\n}  The template will replace all occurrences of  {{property}}  with the value of the property for that feature.  The result is:   instead of:   You can provide a template to use for the name of the collapsible section (eg. to replace  RGB  in the example above), like so:            \"featureInfoTemplate\" : {\n              \"template\": \" div Pixel colour: {{ foobar}} /div \",\n              \"name\": \"Red {{Red}}\"\n          }", 
            "title": "Feature Information Template"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/feature-info-template/#more-details", 
            "text": "The template is rendered using  Mustache , so you can use all of its features here.  In particular, you can render properties that include html by using triple-braces, eg.  {{{property}}} .  You can make use of partial templates (and even recursive templates) by specifying your template and partials as a json object, eg.:            \"featureInfoTemplate\" : {\n              \"template\": \" div Pixel colour: {{ foobar}} /div \",\n              \"partials\": {\n                  \"foobar\": \" b Red={{Red}} Blue={{Blue}} Green={{Green}} /b \"\n              }\n          }  After Mustache has rendered the template, the result is displayed using  Markdown , so you could also write:            \"featureInfoTemplate\" : \"Pixel colour: *Red={{Red}} Blue={{Blue}} Green={{Green}}*.\"", 
            "title": "More details"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/feature-info-template/#formatting-numbers", 
            "text": "The preferred way to format numbers is using the  formats  option, eg:            \"featureInfoTemplate\": {\n            \"template\": \"Pixel colour:  b Red={{Red}} Blue={{Blue}} Green={{Green}} /b .\",\n            \"formats\": {\n              \"Red\": {\n                \"type\": \"number\",\n                \"maximumFractionDigits\": 2\n              },\n              \"Green\": {\n                \"type\": \"number\",\n                \"maximumFractionDigits\": 2\n              },\n              \"Blue\": {\n                \"type\": \"number\",\n                \"maximumFractionDigits\": 2\n              }\n            }\n          }  \"type\"  specifies the type of formatting that will be applied to the property. Here we are using  \"number\"  formatting which is also the default formatting if  \"type\"  is not supplied.  The supported format options are:   \"maximumFractionDigits\": X : To reduce the number of decimal places to a maximum of X digits.  \"minimumFractionDigits\": X : To increase the number of decimal places to a minimum of X digits.  \"useGrouping\": true : To show thousands separators.  \"style\": \"percent\" : To show 0.15 as 15%.   A second method is to use  terria.formatNumber  directly in the template. This accepts an initial JSON string describing the same options as above. To simplify the notation, the quotes around the keys are optional here.            \"featureInfoTemplate\": \"template\": \"Pixel colour:  b Red={{#terria.formatNumber}}{maximumFractionDigits:3}{{Red}}{{/terria.formatNumber}} /b .\"", 
            "title": "Formatting numbers"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/feature-info-template/#url-encoding-strings", 
            "text": "To URL-encode a value in a template, use  terria.urlEncode  or  terria.urlEncodeComponent .  For example:  Test: {{#terria.urlEncode}}http://example.com/a b{{/terria.urlEncode}}\nTest: {{#terria.urlEncodeComponent}}W/HOE#1{{/terria.urlEncodeComponent}}", 
            "title": "URL-encoding strings"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/feature-info-template/#formatting-dates", 
            "text": "Similar to formatting numbers you can format dates in the  \"formats\"  section by suppliying  \"dateTime\"  in the  \"type\"  property, eg:            \"featureInfoTemplate\": {\n            \"template\": \"Date: {{Date}}\",\n            \"formats\": {\n              \"Date\": {\n                \"type\": \"dateTime\";\n                \"format\": \"dd-mm-yyyy HH:MM:ss\";\n              }\n            }\n          }  The date format style used for the  \"format\"  property is the style from the  npm dateformat package , e.g.  \"dd-mm-yyyy HH:MM:ss\"  or  \"isoDateTime\" .  As with number you can also use  terria.dateTimeformat  directly in the template. This accepts an initial JSON string describing the same options as above.            \"featureInfoTemplate\": \"template\": \"{{#terria.formatDateTime}}{\"format\": \"dd-mm-yyyy HH:MM:ss\"}2017-11-23T08:47:53Z{{/terria.formatDateTime}} /b .\"", 
            "title": "Formatting dates"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/feature-info-template/#time-series-charts", 
            "text": "For features with time-varying table-based data structures (eg. CSV, SOS2, SDMX-JSON, if there is a time column), the feature info panel also includes a chart of the data over time, eg.   You can place this chart in your template using  {{terria.timeSeries.chart}} .  Alternatively, you can access the following component information:   {{terria.timeSeries.xName}}  - the x-column name  {{terria.timeSeries.yName}}  - the y-column name  {{terria.timeSeries.title}}  {{terria.timeSeries.id}}  {{terria.timeSeries.units}}  - the column units as a comma-separated string.  {{terria.timeSeries.data}}  - the data as a comma-separated string.   Please note:  If any of the component information above contains double-quotes, double quotes will be removed before TerriaJS processes the template further.  If any of the component information above is used as part of tag attributes, it must be surrounded by double-quotes. e.g.  chart y-column=\"{{terria.timeSeries.yName}}\" /chart  So you could reconstruct the chart manually as:  h4 {{terria.timeSeries.title}} /h4  chart x-column= {{terria.timeSeries.xName}} \n       y-column= {{terria.timeSeries.yName}} \n       id= {{terria.timeSeries.id}} \n       column-units= {{terria.timeSeries.units}} \n    {{terria.timeSeries.data}} /chart   or use this as a basis to customise the chart.", 
            "title": "Time-series charts"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/feature-info-template/#other-supporting-data", 
            "text": "The clicked point's latitude and longitude are also available as  {{terria.coords.latitude}}  and  {{terria.coords.longitude}} .  The current time for the layer is avaliable as  {{terria.currentTime}} .", 
            "title": "Other supporting data"
        }, 
        {
            "location": "/connecting-to-data/customizing-data-appearance/feature-info-template/#more-examples", 
            "text": "Some examples are here:  https://github.com/TerriaJS/terriajs/blob/master/wwwroot/test/init/csv.json , and  charts.json .  You can add this directly to your catalog by appending  #build/TerriaJS/test/init/csv.json  to the URL to your map, eg.  http://localhost:3001/#build/TerriaJS/test/init/csv.json .", 
            "title": "More examples"
        }, 
        {
            "location": "/connecting-to-data/catalog-functions/", 
            "text": "A Catalog Function is a parameterized service where the user supplies the parameters and gets back some result.  The Type column in the table below indicates the \n\"type\"\n property to use in the \nInitialization File\n.\n\n\n\n\n\n\n\n\nName\n\n\nType\n\n\n\n\n\n\n\n\n\n\nWeb Processing Service (WPS)\n\n\nwps\n\n\n\n\n\n\nTerriaJS JSON\n\n\nterria-json\n\n\n\n\n\n\nPlaces Like Me\n\n\nplaces-like-me-function\n\n\n\n\n\n\nSpatial Detailing\n\n\nspatial-detailing-function\n\n\n\n\n\n\nWhy Am I Special\n\n\nwhy-am-i-special-function", 
            "title": "Catalog Functions"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/abs-itt-dataset-list/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogGroup representing a collection of items from an Australian Bureau of Statistics\n(ABS) ITT server, formed by querying for all the codes in a given dataset and concept.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"abs-itt-dataset-list\"\n\n\nblacklist\n\n\nA hash of names of blacklisted datasets.  A dataset that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the name of the dataset to blacklist,\nand the values should be \"true\".\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\nconceptNamesUrl\n\n\nThe URL of a JSON file containing human-readable names of Australian Bureau of Statistics concept codes.\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndescription\n\n\nThe description of the item.\n\n\nfilter\n\n\nThe filter for the ABS dataset.  You can obtain a list of all datasets by querying\nhttp://stat.abs.gov.au/itt/query.jsp?method=GetDatasetList (or equivalent).  This property\nis observable.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisOpen\n\n\nA value indicating whether the group is currently expanded and showing\nits children.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nregionPopulationsUrlPrefix\n\n\nThe start of a URL of a csv file containing the total number of people in each region, eg.\nSA4,Tot_P_M,Tot_P_F,Tot_P_P\n101,100000,23450,123450\n102,130000,100000,234560\nThe region code and '.csv' are appended to the end of this URL for the request, eg.\n'data/2011Census_TOT_' -\n 'data/2011Census_TOT_SA4.csv' (and other region types).\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nurl\n\n\nThe URL of the ABS ITT API, typically http://stat.abs.gov.au/itt/query.jsp.\n\n\nwhitelist\n\n\nA hash of names of whitelisted datasets.  A dataset that doesn't appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the name of the dataset to blacklist,\nand the values should be \"true\".", 
            "title": "ABS ITT (group)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/abs-itt-dataset-list/#initialization-file-properties", 
            "text": "\"type\": \"abs-itt-dataset-list\"  blacklist  A hash of names of blacklisted datasets.  A dataset that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the name of the dataset to blacklist,\nand the values should be \"true\".  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  conceptNamesUrl  The URL of a JSON file containing human-readable names of Australian Bureau of Statistics concept codes.  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.  description  The description of the item.  filter  The filter for the ABS dataset.  You can obtain a list of all datasets by querying\nhttp://stat.abs.gov.au/itt/query.jsp?method=GetDatasetList (or equivalent).  This property\nis observable.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isOpen  A value indicating whether the group is currently expanded and showing\nits children.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  regionPopulationsUrlPrefix  The start of a URL of a csv file containing the total number of people in each region, eg.\nSA4,Tot_P_M,Tot_P_F,Tot_P_P\n101,100000,23450,123450\n102,130000,100000,234560\nThe region code and '.csv' are appended to the end of this URL for the request, eg.\n'data/2011Census_TOT_' -  'data/2011Census_TOT_SA4.csv' (and other region types).  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  url  The URL of the ABS ITT API, typically http://stat.abs.gov.au/itt/query.jsp.  whitelist  A hash of names of whitelisted datasets.  A dataset that doesn't appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the name of the dataset to blacklist,\nand the values should be \"true\".", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/abs-itt/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem representing region-mapped data obtained from the Australia Bureau of Statistics\n(ABS) ITT query interface.  Documentation for the query interface is found here: http://stat.abs.gov.au/itt/r.jsp?api\n\n\nInitialization File\n properties:\n\n\n\"type\": \"abs-itt\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncanDisplayPercent\n\n\nGets or sets whether this item can show percentages instead of raw values.\n\n\ncolors\n\n\nThe array of color strings used for chart lines.\nTODO: make this customizable, eg. use colormap / colorPalette.\n\n\nconceptNamesUrl\n\n\nThe URL of a JSON file containing human-readable names of Australian Bureau of Statistics concept codes.\n\n\nconceptsNotToLoad\n\n\nThe array of concept ids which should not be loaded.\nDefaults to ['STATE', 'FREQUENCY', and the region concept (which defaults to 'REGION')].\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndata\n\n\nThe data, represented as a binary Blob, a string, or a Promise for one of those things.\nIf this property is set, CatalogItem's url is ignored.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataSourceUrl\n\n\nThe URL from which the TableCatalogItem's data was obtained.  This is informational; it is not\nused.  This propery is observable.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndatasetId\n\n\nThe ID of the ABS dataset.  You can obtain a list of all datasets by querying\nhttp://stat.abs.gov.au/itt/query.jsp?method=GetDatasetList (or equivalent).  This property\nis observable.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\ndisplayPercent\n\n\nGets or sets whether to show percentages or raw values.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nfilter\n\n\nGets the list of initial concepts and codes on which to filter the data.  You can obtain a list of all available\nconcepts for a dataset by querying http://stat.abs.gov.au/itt/query.jsp?method=GetDatasetConcepts\ndatasetid=ABS_CENSUS2011_B25\n(or equivalent) and a list of the possible values for a concept by querying\nhttp://stat.abs.gov.au/itt/query.jsp?method=GetCodeListValue\ndatasetid=ABS_CENSUS2011_B25\nconcept=MEASURE\nformat=json.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nidColumns\n\n\nThe column identifiers (names or indices), so we can identify individual features\nwithin a table with a time column, or across multiple polled lat/lon files.\nEg. ['lat', 'lon'] for immobile features, or ['identifier'] if a unique identifier is provided\n(where these are column names in the table; column numbers work as well).\nFor region-mapped files, the region identifier is used instead.\nFor non-spatial files, the x-column is used instead.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisSampled\n\n\nA value indicating whether the rows correspond to \"sampled\" data.\nThis only makes a difference if there is a time column and idColumns.\nIn this case, if isSampled is true, then feature position, color and size are interpolated\nto produce smooth animation of the features over time.\nIf isSampled is false, then times are treated as the start of periods, so that\nfeature positions, color and size are kept constant from one time until the next,\nthen change suddenly.\nColor and size are never interpolated when they are drawn from a text column.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nkeepOnTop\n\n\nKeeps the layer on top of all other imagery layers.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nopacity\n\n\nThe opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nregionConcept\n\n\nThe ABS region concept id. Defaults to 'REGION'.\n\n\nregionPopulationsUrlPrefix\n\n\nThe start of a URL of a csv file containing the total number of people in each region, eg.\nSA4,Tot_P_M,Tot_P_F,Tot_P_P\n101,100000,23450,123450\n102,130000,100000,234560\nThe region code and '.csv' are appended to the end of this URL for the request, eg.\n'data/2011Census_TOT_' -\n 'data/2011Census_TOT_SA4.csv' (and other region types).\n\n\nregionTypeConcept\n\n\nThe ABS region-type concept id used with the region code to set the region type.\nUsually defaults to 'REGIONTYPE'.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowWarnings\n\n\nShould any warnings like failures in region mapping be displayed to the user?\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nuniqueValuedConcepts\n\n\nThe array of ids of concepts which are single-valued, in addition to the region type.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "ABS ITT (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/abs-itt/#initialization-file-properties", 
            "text": "\"type\": \"abs-itt\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  canDisplayPercent  Gets or sets whether this item can show percentages instead of raw values.  colors  The array of color strings used for chart lines.\nTODO: make this customizable, eg. use colormap / colorPalette.  conceptNamesUrl  The URL of a JSON file containing human-readable names of Australian Bureau of Statistics concept codes.  conceptsNotToLoad  The array of concept ids which should not be loaded.\nDefaults to ['STATE', 'FREQUENCY', and the region concept (which defaults to 'REGION')].  customProperties  The dictionary of custom item properties.  data  The data, represented as a binary Blob, a string, or a Promise for one of those things.\nIf this property is set, CatalogItem's url is ignored.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataSourceUrl  The URL from which the TableCatalogItem's data was obtained.  This is informational; it is not\nused.  This propery is observable.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  datasetId  The ID of the ABS dataset.  You can obtain a list of all datasets by querying\nhttp://stat.abs.gov.au/itt/query.jsp?method=GetDatasetList (or equivalent).  This property\nis observable.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  displayPercent  Gets or sets whether to show percentages or raw values.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  filter  Gets the list of initial concepts and codes on which to filter the data.  You can obtain a list of all available\nconcepts for a dataset by querying http://stat.abs.gov.au/itt/query.jsp?method=GetDatasetConcepts datasetid=ABS_CENSUS2011_B25\n(or equivalent) and a list of the possible values for a concept by querying\nhttp://stat.abs.gov.au/itt/query.jsp?method=GetCodeListValue datasetid=ABS_CENSUS2011_B25 concept=MEASURE format=json.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  idColumns  The column identifiers (names or indices), so we can identify individual features\nwithin a table with a time column, or across multiple polled lat/lon files.\nEg. ['lat', 'lon'] for immobile features, or ['identifier'] if a unique identifier is provided\n(where these are column names in the table; column numbers work as well).\nFor region-mapped files, the region identifier is used instead.\nFor non-spatial files, the x-column is used instead.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isSampled  A value indicating whether the rows correspond to \"sampled\" data.\nThis only makes a difference if there is a time column and idColumns.\nIn this case, if isSampled is true, then feature position, color and size are interpolated\nto produce smooth animation of the features over time.\nIf isSampled is false, then times are treated as the start of periods, so that\nfeature positions, color and size are kept constant from one time until the next,\nthen change suddenly.\nColor and size are never interpolated when they are drawn from a text column.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  keepOnTop  Keeps the layer on top of all other imagery layers.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  opacity  The opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  regionConcept  The ABS region concept id. Defaults to 'REGION'.  regionPopulationsUrlPrefix  The start of a URL of a csv file containing the total number of people in each region, eg.\nSA4,Tot_P_M,Tot_P_F,Tot_P_P\n101,100000,23450,123450\n102,130000,100000,234560\nThe region code and '.csv' are appended to the end of this URL for the request, eg.\n'data/2011Census_TOT_' -  'data/2011Census_TOT_SA4.csv' (and other region types).  regionTypeConcept  The ABS region-type concept id used with the region code to set the region type.\nUsually defaults to 'REGIONTYPE'.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showWarnings  Should any warnings like failures in region mapping be displayed to the user?  showsInfo  A value indicating whether this data source should show an info icon.  uniqueValuedConcepts  The array of ids of concepts which are single-valued, in addition to the region type.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/esri-featureServer-group/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogGroup representing a collection of layers from an ArcGIS Feature Service.\nEg. https://sampleserver6.arcgisonline.com/arcgis/rest/services/Wildfire/FeatureServer\n\n\nInitialization File\n properties:\n\n\n\"type\": \"esri-featureServer-group\"\n\n\nblacklist\n\n\nA hash of names of blacklisted data layers.  A layer that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the Title of the layers to blacklist,\nand the values should be \"true\".\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndescription\n\n\nThe description of the item.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisOpen\n\n\nA value indicating whether the group is currently expanded and showing\nits children.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nurl\n\n\nThe URL of the Feature Server.", 
            "title": "ArcGIS FeatureServer (group)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/esri-featureServer-group/#initialization-file-properties", 
            "text": "\"type\": \"esri-featureServer-group\"  blacklist  A hash of names of blacklisted data layers.  A layer that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the Title of the layers to blacklist,\nand the values should be \"true\".  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.  description  The description of the item.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isOpen  A value indicating whether the group is currently expanded and showing\nits children.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  url  The URL of the Feature Server.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/esri-featureServer/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem representing a layer from an Esri ArcGIS FeatureServer.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"esri-featureServer\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nlayerDef\n\n\nThe 'layerDef' string to pass to the server when requesting geometry.\nBy default, we use a string that always evaluates to true: \"1=1\".\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "ArcGIS FeatureServer (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/esri-featureServer/#initialization-file-properties", 
            "text": "\"type\": \"esri-featureServer\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  layerDef  The 'layerDef' string to pass to the server when requesting geometry.\nBy default, we use a string that always evaluates to true: \"1=1\".  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/esri-mapServer-group/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogGroup representing a collection of layers from an ArcGIS Map Service.\nEg. http://www.ga.gov.au/gis/rest/services/earth_observation/Landcover_WM/MapServer\n\n\nInitialization File\n properties:\n\n\n\"type\": \"esri-mapServer-group\"\n\n\nblacklist\n\n\nA hash of names of blacklisted data layers.  A layer that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the Title of the layers to blacklist,\nand the values should be \"true\".\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndescription\n\n\nThe description of the item.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisOpen\n\n\nA value indicating whether the group is currently expanded and showing\nits children.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nurl\n\n\nThe URL of the Map Server.", 
            "title": "ArcGIS MapServer (group)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/esri-mapServer-group/#initialization-file-properties", 
            "text": "\"type\": \"esri-mapServer-group\"  blacklist  A hash of names of blacklisted data layers.  A layer that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the Title of the layers to blacklist,\nand the values should be \"true\".  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.  description  The description of the item.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isOpen  A value indicating whether the group is currently expanded and showing\nits children.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  url  The URL of the Map Server.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/esri-mapServer/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA ImageryLayerCatalogItem representing a layer from an Esri ArcGIS MapServer.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"esri-mapServer\"\n\n\nallowFeaturePicking\n\n\nA value indicating whether features in this catalog item can be selected by clicking them on the map.\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\nclipToRectangle\n\n\nA value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nignoreUnknownTileErrors\n\n\nA value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\ninitialTimeSource\n\n\nOptions for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisRequiredForRendering\n\n\nA value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nkeepOnTop\n\n\nKeeps the layer on top of all other imagery layers.\n\n\nlayers\n\n\nThe comma-separated list of layer IDs to show.  If this property is undefined,\nall layers are shown.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumScale\n\n\nThe denominator of the largest scale (smallest denominator) for which tiles should be requested.  For example, if this value is 1000, then tiles representing\na scale larger than 1:1000 (i.e. numerically smaller denominator, when zooming in closer) will not be requested.  Instead, tiles of the largest-available scale, as specified by this property,\nwill be used and will simply get blurier as the user zooms in closer.\n\n\nmaximumScaleBeforeMessage\n\n\nThe denominator of the largest scale (smallest denominator) beyond which to show a message explaining that no further zoom levels are available, at the request\nof the data custodian.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nopacity\n\n\nThe opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.\n\n\nparameters\n\n\nThe additional parameters to pass to the WMS server when requesting images.\nAll parameter names must be entered in lowercase in order to be consistent with references in TerrisJS code.\nIf this property is undefined, WebMapServiceCatalogItem.defaultParameters is used.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowTilesAfterMessage\n\n\nA value indicating whether to continue showing tiles when the ArcGisMapServerCatalogItem's maximumScaleBeforeMessage\nis exceeded.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\ntokenUrl\n\n\nThe URL to use for requesting tokens.\n\n\ntreat403AsError\n\n\nA value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\ntreat404AsError\n\n\nA value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "ArcGIS MapServer (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/esri-mapServer/#initialization-file-properties", 
            "text": "\"type\": \"esri-mapServer\"  allowFeaturePicking  A value indicating whether features in this catalog item can be selected by clicking them on the map.  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  clipToRectangle  A value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  ignoreUnknownTileErrors  A value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  initialTimeSource  Options for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isRequiredForRendering  A value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  keepOnTop  Keeps the layer on top of all other imagery layers.  layers  The comma-separated list of layer IDs to show.  If this property is undefined,\nall layers are shown.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumScale  The denominator of the largest scale (smallest denominator) for which tiles should be requested.  For example, if this value is 1000, then tiles representing\na scale larger than 1:1000 (i.e. numerically smaller denominator, when zooming in closer) will not be requested.  Instead, tiles of the largest-available scale, as specified by this property,\nwill be used and will simply get blurier as the user zooms in closer.  maximumScaleBeforeMessage  The denominator of the largest scale (smallest denominator) beyond which to show a message explaining that no further zoom levels are available, at the request\nof the data custodian.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  opacity  The opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.  parameters  The additional parameters to pass to the WMS server when requesting images.\nAll parameter names must be entered in lowercase in order to be consistent with references in TerrisJS code.\nIf this property is undefined, WebMapServiceCatalogItem.defaultParameters is used.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showTilesAfterMessage  A value indicating whether to continue showing tiles when the ArcGisMapServerCatalogItem's maximumScaleBeforeMessage\nis exceeded.  showsInfo  A value indicating whether this data source should show an info icon.  tokenUrl  The URL to use for requesting tokens.  treat403AsError  A value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.  treat404AsError  A value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/esri-group/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogGroup representing a collection of ArcGIS Services,\neg. http://www.ga.gov.au/gis/rest/services/\n\n\nInitialization File\n properties:\n\n\n\"type\": \"esri-group\"\n\n\nblacklist\n\n\nA hash of names of blacklisted data layers.  A layer that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the Title of the layers to blacklist,\nand the values should be \"true\".\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndescription\n\n\nThe description of the item.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisOpen\n\n\nA value indicating whether the group is currently expanded and showing\nits children.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nurl\n\n\nThe URL of the services.", 
            "title": "ArcGIS Server (group)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/esri-group/#initialization-file-properties", 
            "text": "\"type\": \"esri-group\"  blacklist  A hash of names of blacklisted data layers.  A layer that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the Title of the layers to blacklist,\nand the values should be \"true\".  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.  description  The description of the item.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isOpen  A value indicating whether the group is currently expanded and showing\nits children.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  url  The URL of the services.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/bing-maps/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA ImageryLayerCatalogItem representing a layer from the Bing Maps server.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"bing-maps\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\nclipToRectangle\n\n\nA value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nignoreUnknownTileErrors\n\n\nA value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\ninitialTimeSource\n\n\nOptions for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisRequiredForRendering\n\n\nA value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nkeepOnTop\n\n\nKeeps the layer on top of all other imagery layers.\n\n\nkey\n\n\nThe Bing Maps API key to use.  If this property is undefined,\nBingMapsApi.getKey is used.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nopacity\n\n\nThe opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\ntreat403AsError\n\n\nA value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\ntreat404AsError\n\n\nA value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Bing Maps (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/bing-maps/#initialization-file-properties", 
            "text": "\"type\": \"bing-maps\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  clipToRectangle  A value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  ignoreUnknownTileErrors  A value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  initialTimeSource  Options for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isRequiredForRendering  A value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  keepOnTop  Keeps the layer on top of all other imagery layers.  key  The Bing Maps API key to use.  If this property is undefined,\nBingMapsApi.getKey is used.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  opacity  The opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  treat403AsError  A value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.  treat404AsError  A value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/carto/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA ImageryLayerCatalogItem representing a named map from the Carto Maps API.\nhttps://carto.com/developers/maps-api/\n\n\nInitialization File\n properties:\n\n\n\"type\": \"carto\"\n\n\nattribution\n\n\nThe attribution to display with the data\n\n\nauth_token\n\n\nGets or set the authorization token to pass to the Carto Maps API.\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\nclipToRectangle\n\n\nA value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.\n\n\nconfig\n\n\nThe configuration information to pass to the Carto Maps API.\nIf not specified, empty configuration (\n{}\n) will be used.\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nignoreUnknownTileErrors\n\n\nA value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\ninitialTimeSource\n\n\nOptions for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisRequiredForRendering\n\n\nA value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nkeepOnTop\n\n\nKeeps the layer on top of all other imagery layers.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumLevel\n\n\nThe maximum tile level to retrieve from the map data\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nminimumLevel\n\n\nThe minimum tile level to retrieve from the map data\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nopacity\n\n\nThe opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nsubdomains\n\n\nThe array of subdomains, one of which will be prepended to each tile URL.\n\n\ntileUrl\n\n\nThe template URL from which to get tiles.\n\n\ntreat403AsError\n\n\nA value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\ntreat404AsError\n\n\nA value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Carto Map (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/carto/#initialization-file-properties", 
            "text": "\"type\": \"carto\"  attribution  The attribution to display with the data  auth_token  Gets or set the authorization token to pass to the Carto Maps API.  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  clipToRectangle  A value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.  config  The configuration information to pass to the Carto Maps API.\nIf not specified, empty configuration ( {} ) will be used.  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  ignoreUnknownTileErrors  A value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  initialTimeSource  Options for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isRequiredForRendering  A value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  keepOnTop  Keeps the layer on top of all other imagery layers.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumLevel  The maximum tile level to retrieve from the map data  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  minimumLevel  The minimum tile level to retrieve from the map data  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  opacity  The opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  subdomains  The array of subdomains, one of which will be prepended to each tile URL.  tileUrl  The template URL from which to get tiles.  treat403AsError  A value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.  treat404AsError  A value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/csw/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogGroup representing a collection of datasets queried from an OGC Catalog Service (CSW) server.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"csw\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndomainSpecification\n\n\nA description of a domain that will be pulled from the CSW service and used to define the metadataGroups. The domain is obtained by querying the CSW server for a particular property - the values of the property form the domain, the values are assumed to define a hierarchy eg. Wave Models | Wave Energy Flux - which is a two level hierarchy of groups that will be used to classify metadata records.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\ngetRecordsTemplate\n\n\nThe template XML string to POST to the CSW server to query for catalog items.  If this property is undefined,\nCswCatalogGroup.defaultGetRecordsTemplate is used.  The XML string should have a \n{startPosition}\n placeholder to be\nreplaced with the next start position in order to allow incremental paging of results.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nincludeCsv\n\n\nTrue to allow CSV resources to be added to the catalog; otherwise, false.\n\n\nincludeEsriMapServer\n\n\nTrue to allow ESRI Map resources to be added to the catalog; otherwise, false.\n\n\nincludeGeoJson\n\n\nTrue to allow GeoJSON resources to be added to the catalog; otherwise, false.\n\n\nincludeKml\n\n\nTrue to allow KML resources to be added to the catalog; otherwise, false.\n\n\nincludeWms\n\n\nTrue to allow WMS resources to be added to the catalog; otherwise, false.\n\n\nincludeWps\n\n\nTrue to allow OGC:WPS service resources to be added to the catalog; otherwise, false.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisOpen\n\n\nA value indicating whether the group is currently expanded and showing\nits children.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nitemProperties\n\n\nA hash of properties that will be set on the item created from the CKAN resource.\nFor example, { \"treat404AsError\": false }\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nurl\n\n\nThe URL of the CSW server.", 
            "title": "Catalog Service for the Web (CSW) (group)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/csw/#initialization-file-properties", 
            "text": "\"type\": \"csw\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  description  The description of the item.  domainSpecification  A description of a domain that will be pulled from the CSW service and used to define the metadataGroups. The domain is obtained by querying the CSW server for a particular property - the values of the property form the domain, the values are assumed to define a hierarchy eg. Wave Models | Wave Energy Flux - which is a two level hierarchy of groups that will be used to classify metadata records.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  getRecordsTemplate  The template XML string to POST to the CSW server to query for catalog items.  If this property is undefined,\nCswCatalogGroup.defaultGetRecordsTemplate is used.  The XML string should have a  {startPosition}  placeholder to be\nreplaced with the next start position in order to allow incremental paging of results.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  includeCsv  True to allow CSV resources to be added to the catalog; otherwise, false.  includeEsriMapServer  True to allow ESRI Map resources to be added to the catalog; otherwise, false.  includeGeoJson  True to allow GeoJSON resources to be added to the catalog; otherwise, false.  includeKml  True to allow KML resources to be added to the catalog; otherwise, false.  includeWms  True to allow WMS resources to be added to the catalog; otherwise, false.  includeWps  True to allow OGC:WPS service resources to be added to the catalog; otherwise, false.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isOpen  A value indicating whether the group is currently expanded and showing\nits children.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  itemProperties  A hash of properties that will be set on the item created from the CKAN resource.\nFor example, { \"treat404AsError\": false }  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  url  The URL of the CSW server.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/3d-tiles/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem that is added to the map as Cesium 3D Tiles.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"3d-tiles\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nionAccessToken\n\n\nThe Cesium Ion access token to use to access the tileset. If not specified, the token specified\nusing the \ncesiumIonAccessToken\n property in \nconfig.json\n is used. This property is ignored if\nCesium3DTilesCatalogItem's ionAssetId is not set.\n\n\nionAssetId\n\n\nThe ID of the Cesium Ion asset to access. If this property is set, the Cesium3DTilesCatalogItem's url\nproperty is ignored.\n\n\nionServer\n\n\nThe Cesium Ion access token to use to access the tileset. If not specified, the default Ion\nserver, \nhttps://api.cesium.com/\n, is used. This property is ignored if\nCesium3DTilesCatalogItem's ionAssetId is not set.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\noptions\n\n\nAdditional options to pass to Cesium's Cesium3DTileset constructor.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Cesium 3D Tiles (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/3d-tiles/#initialization-file-properties", 
            "text": "\"type\": \"3d-tiles\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  ionAccessToken  The Cesium Ion access token to use to access the tileset. If not specified, the token specified\nusing the  cesiumIonAccessToken  property in  config.json  is used. This property is ignored if\nCesium3DTilesCatalogItem's ionAssetId is not set.  ionAssetId  The ID of the Cesium Ion asset to access. If this property is set, the Cesium3DTilesCatalogItem's url\nproperty is ignored.  ionServer  The Cesium Ion access token to use to access the tileset. If not specified, the default Ion\nserver,  https://api.cesium.com/ , is used. This property is ignored if\nCesium3DTilesCatalogItem's ionAssetId is not set.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  options  Additional options to pass to Cesium's Cesium3DTileset constructor.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/ion-imagery/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA ImageryLayerCatalogItem representing an imagery layer from Cesium Ion.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"ion-imagery\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\nclipToRectangle\n\n\nA value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nignoreUnknownTileErrors\n\n\nA value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\ninitialTimeSource\n\n\nOptions for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range\n\n\nionAccessToken\n\n\nThe Cesium Ion access token to use to access the imagery. If not specified, the token specified\nusing the \ncesiumIonAccessToken\n property in \nconfig.json\n is used.\n\n\nionAssetId\n\n\nThe ID of the Cesium Ion asset to access.\n\n\nionServer\n\n\nThe Cesium Ion access token to use to access the imagery. If not specified, the default Ion\nserver, \nhttps://api.cesium.com/\n, is used.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisRequiredForRendering\n\n\nA value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nkeepOnTop\n\n\nKeeps the layer on top of all other imagery layers.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nopacity\n\n\nThe opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\ntreat403AsError\n\n\nA value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\ntreat404AsError\n\n\nA value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Cesium Ion Imagery (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/ion-imagery/#initialization-file-properties", 
            "text": "\"type\": \"ion-imagery\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  clipToRectangle  A value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  ignoreUnknownTileErrors  A value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  initialTimeSource  Options for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range  ionAccessToken  The Cesium Ion access token to use to access the imagery. If not specified, the token specified\nusing the  cesiumIonAccessToken  property in  config.json  is used.  ionAssetId  The ID of the Cesium Ion asset to access.  ionServer  The Cesium Ion access token to use to access the imagery. If not specified, the default Ion\nserver,  https://api.cesium.com/ , is used.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isRequiredForRendering  A value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  keepOnTop  Keeps the layer on top of all other imagery layers.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  opacity  The opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  treat403AsError  A value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.  treat404AsError  A value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/czml/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem representing Cesium Language (CZML) data.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"czml\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndata\n\n\nThe CZML data, represented as a binary Blob, JSON object or array literal, or a Promise for one of those things.\nIf this property is set, CatalogItem's url is ignored.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataSourceUrl\n\n\nThe URL from which the CzmlCatalogItem's data was obtained.  This will be used\nto resolve any resources linked in the CZML file, if any.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Cesium Language (CZML) (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/czml/#initialization-file-properties", 
            "text": "\"type\": \"czml\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  data  The CZML data, represented as a binary Blob, JSON object or array literal, or a Promise for one of those things.\nIf this property is set, CatalogItem's url is ignored.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataSourceUrl  The URL from which the CzmlCatalogItem's data was obtained.  This will be used\nto resolve any resources linked in the CZML file, if any.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/cesium-terrain/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA TerrainCatalogItem representing a Cesium terrain provider.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"cesium-terrain\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nionAccessToken\n\n\nThe Cesium Ion access token to use to access the terrain. If not specified, the token specified\nusing the \ncesiumIonAccessToken\n property in \nconfig.json\n is used. This property is ignored if\nCesiumTerrainCatalogItem's ionAssetId is not set.\n\n\nionAssetId\n\n\nThe ID of the Cesium Ion asset to access. If this property is set, the CesiumTerrainCatalogItem's url\nproperty is ignored.\n\n\nionServer\n\n\nThe Cesium Ion access token to use to access the terrain. If not specified, the default Ion\nserver, \nhttps://api.cesium.com/\n, is used. This property is ignored if\nCesiumTerrainCatalogItem's ionAssetId is not set.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Cesium Terrain (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/cesium-terrain/#initialization-file-properties", 
            "text": "\"type\": \"cesium-terrain\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  ionAccessToken  The Cesium Ion access token to use to access the terrain. If not specified, the token specified\nusing the  cesiumIonAccessToken  property in  config.json  is used. This property is ignored if\nCesiumTerrainCatalogItem's ionAssetId is not set.  ionAssetId  The ID of the Cesium Ion asset to access. If this property is set, the CesiumTerrainCatalogItem's url\nproperty is ignored.  ionServer  The Cesium Ion access token to use to access the terrain. If not specified, the default Ion\nserver,  https://api.cesium.com/ , is used. This property is ignored if\nCesiumTerrainCatalogItem's ionAssetId is not set.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/ckan/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogGroup representing a collection of layers from a \nCKAN\n server.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"ckan\"\n\n\nallowEntireWfsServers\n\n\nTrue to allow entire WFS servers (that is, WFS resources without a clearly-defined layer) to be\nadded to the catalog; otherwise, false.\n\n\nallowEntireWmsServers\n\n\nTrue to allow entire WMS servers (that is, WMS resources without a clearly-defined layer) to be\nadded to the catalog; otherwise, false.\n\n\nblacklist\n\n\nA hash of names of blacklisted groups and data sources.  A group or data source that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the names of the groups and data sources to blacklist,\nand the values should be \"true\".\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndescription\n\n\nThe description of the item.\n\n\nfilterByWmsGetCapabilities\n\n\nA value indicating whether the CKAN datasets should be filtered by querying GetCapabilities from each\nreferenced WMS server and excluding datasets not found therein.\n\n\nfilterQuery\n\n\nThe filter query to pass to CKAN when querying the available data sources and their groups. Each item in the\narray causes an independent request to the CKAN, and the results are concatenated.  The\nsearch string is equivalent to what would be in the parameters segment of the url calling the CKAN search api.\nSee the \nSolr documentation\n for information about filter queries.\nEach item can be either a URL-encoded string (\"fq=res_format%3awms\") or an object ({ fq: 'res_format:wms' }). The latter\nformat is easier to work with.\n  To get all the datasets with wms resources: [{ fq: 'res_format%3awms' }]\n  To get all wms/WMS datasets in the Surface Water group: [{q: 'groups=Surface Water', fq: 'res_format:WMS' }]\n  To get both wms and esri-mapService datasets: [{q: 'res_format:WMS'}, {q: 'res_format:\"Esri REST\"' }]\n  To get all datasets with no filter, you can use ['']\nThis property is required.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\ngroupBy\n\n\nA value indicating how datasets should be grouped.  Valid values are:\n\n \nnone\n - Datasets are put in a flat list; they are not grouped at all.\n\n \ngroup\n - Datasets are grouped according to their CKAN group.  Datasets that are not in any groups are put at the top level.\n* \norganization\n - Datasets are grouped by their CKAN organization.  Datasets that are not associated with an organization are put at the top level.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nincludeCsv\n\n\nTrue to allow CSV resources to be added to the catalog; otherwise, false.\n\n\nincludeCzml\n\n\nTrue to allow CZML resources to be added to the catalog; otherwise, false.\n\n\nincludeEsriFeatureServer\n\n\nTrue to allow ESRI FeatureServer resources to be added to the catalog; otherwise, false.\n\n\nincludeEsriMapServer\n\n\nTrue to allow ESRI MapServer resources to be added to the catalog; otherwise, false.\n\n\nincludeGeoJson\n\n\nTrue to allow GeoJSON resources to be added to the catalog; otherwise, false.\n\n\nincludeKml\n\n\nTrue to allow KML resources to be added to the catalog; otherwise, false.\n\n\nincludeWfs\n\n\nTrue to allow WFS resources to be added to the catalog; otherwise, false.\n\n\nincludeWms\n\n\nTrue to allow WMS resources to be added to the catalog; otherwise, false.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisOpen\n\n\nA value indicating whether the group is currently expanded and showing\nits children.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nitemProperties\n\n\nA hash of properties that will be set on each child item.\nFor example, { \"treat404AsError\": false }\n\n\nminimumMaxScaleDenominator\n\n\nThe minimum MaxScaleDenominator that is allowed for a WMS dataset to be included in this CKAN group.\nIf this property is undefined or if CkanCatalogGroup's filterByWmsGetCapabilities is false, no\nfiltering based on MaxScaleDenominator is performed.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nungroupedTitle\n\n\nA title for the group holding all items that don't have a group in CKAN. If the value is a blank string or undefined,\nthese items will be left at the top level, not grouped.\n\n\nurl\n\n\nThe URL of the CKAN server.\n\n\nuseResourceName\n\n\nA value indicating whether each catalog item's name should be populated from\nindividual resources instead of from the CKAN dataset.\n\n\nwmsParameters\n\n\nAny extra wms parameters that should be added to the wms query urls in this CKAN group.\nIf this property is undefined then no extra parameters are added.", 
            "title": "CKAN (group)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/ckan/#initialization-file-properties", 
            "text": "\"type\": \"ckan\"  allowEntireWfsServers  True to allow entire WFS servers (that is, WFS resources without a clearly-defined layer) to be\nadded to the catalog; otherwise, false.  allowEntireWmsServers  True to allow entire WMS servers (that is, WMS resources without a clearly-defined layer) to be\nadded to the catalog; otherwise, false.  blacklist  A hash of names of blacklisted groups and data sources.  A group or data source that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the names of the groups and data sources to blacklist,\nand the values should be \"true\".  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.  description  The description of the item.  filterByWmsGetCapabilities  A value indicating whether the CKAN datasets should be filtered by querying GetCapabilities from each\nreferenced WMS server and excluding datasets not found therein.  filterQuery  The filter query to pass to CKAN when querying the available data sources and their groups. Each item in the\narray causes an independent request to the CKAN, and the results are concatenated.  The\nsearch string is equivalent to what would be in the parameters segment of the url calling the CKAN search api.\nSee the  Solr documentation  for information about filter queries.\nEach item can be either a URL-encoded string (\"fq=res_format%3awms\") or an object ({ fq: 'res_format:wms' }). The latter\nformat is easier to work with.\n  To get all the datasets with wms resources: [{ fq: 'res_format%3awms' }]\n  To get all wms/WMS datasets in the Surface Water group: [{q: 'groups=Surface Water', fq: 'res_format:WMS' }]\n  To get both wms and esri-mapService datasets: [{q: 'res_format:WMS'}, {q: 'res_format:\"Esri REST\"' }]\n  To get all datasets with no filter, you can use ['']\nThis property is required.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  groupBy  A value indicating how datasets should be grouped.  Valid values are:   none  - Datasets are put in a flat list; they are not grouped at all.   group  - Datasets are grouped according to their CKAN group.  Datasets that are not in any groups are put at the top level.\n*  organization  - Datasets are grouped by their CKAN organization.  Datasets that are not associated with an organization are put at the top level.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  includeCsv  True to allow CSV resources to be added to the catalog; otherwise, false.  includeCzml  True to allow CZML resources to be added to the catalog; otherwise, false.  includeEsriFeatureServer  True to allow ESRI FeatureServer resources to be added to the catalog; otherwise, false.  includeEsriMapServer  True to allow ESRI MapServer resources to be added to the catalog; otherwise, false.  includeGeoJson  True to allow GeoJSON resources to be added to the catalog; otherwise, false.  includeKml  True to allow KML resources to be added to the catalog; otherwise, false.  includeWfs  True to allow WFS resources to be added to the catalog; otherwise, false.  includeWms  True to allow WMS resources to be added to the catalog; otherwise, false.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isOpen  A value indicating whether the group is currently expanded and showing\nits children.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  itemProperties  A hash of properties that will be set on each child item.\nFor example, { \"treat404AsError\": false }  minimumMaxScaleDenominator  The minimum MaxScaleDenominator that is allowed for a WMS dataset to be included in this CKAN group.\nIf this property is undefined or if CkanCatalogGroup's filterByWmsGetCapabilities is false, no\nfiltering based on MaxScaleDenominator is performed.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  ungroupedTitle  A title for the group holding all items that don't have a group in CKAN. If the value is a blank string or undefined,\nthese items will be left at the top level, not grouped.  url  The URL of the CKAN server.  useResourceName  A value indicating whether each catalog item's name should be populated from\nindividual resources instead of from the CKAN dataset.  wmsParameters  Any extra wms parameters that should be added to the wms query urls in this CKAN group.\nIf this property is undefined then no extra parameters are added.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/ckan-resource/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem that queries a CKAN server for a resource, and then accesses\nthat resource as WMS, GeoJSON, etc. depending on what it finds.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"ckan-resource\"\n\n\nallowAnyResourceIfResourceIdNotFound\n\n\nA value indicating whether any supported resource may be used if both {@see CkanCatalogItem#datasetId} and\n{@see CkanCatalogItem#resourceId} are specified and the {@see CkanCatalogItem#resourceId} is not found.\n\n\nallowCsv\n\n\nA value indicating whether this may be a CSV resource.\n\n\nallowCzml\n\n\nA value indicating whether this may be a CZML resource.\n\n\nallowEsriFeatureServer\n\n\nA value indicating whether this may be an Esri FeatureServer resource.\n\n\nallowEsriMapServer\n\n\nA value indicating whether this may be an Esri MapServer resource.\n\n\nallowGeoJson\n\n\nA value indicating whether this may be a GeoJSON resource.\n\n\nallowKml\n\n\nA value indicating whether this may be a KML resource.\n\n\nallowWfs\n\n\nA value indicating whether this may be a WFS resource.\n\n\nallowWms\n\n\nA value indicating whether this may be a WMS resource.\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndatasetId\n\n\nThe ID of the CKAN dataset referred to by this catalog item.  Either this property\nis {@see CkanCatalogItem#resourceId} must be specified.  The first resource of a supported type\nin this dataset will be used.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nitemProperties\n\n\nA hash of properties that will be set on the item created from the CKAN resource.\nFor example, { \"treat404AsError\": false }\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nresourceId\n\n\nThe ID of the CKAN resource referred to by this catalog item.  Either this property\nis {@see CkanCatalogItem#datasetId} must be specified.  If {@see CkanCatalogItem#datasetId} is\nspecified too, and this resource is not found, \nany\n supported resource may be used instead,\ndepending on the value of {@see CkanCatalogItem#allowAnyResourceIfResourceIdNotFound}.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "CKAN Resource (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/ckan-resource/#initialization-file-properties", 
            "text": "\"type\": \"ckan-resource\"  allowAnyResourceIfResourceIdNotFound  A value indicating whether any supported resource may be used if both {@see CkanCatalogItem#datasetId} and\n{@see CkanCatalogItem#resourceId} are specified and the {@see CkanCatalogItem#resourceId} is not found.  allowCsv  A value indicating whether this may be a CSV resource.  allowCzml  A value indicating whether this may be a CZML resource.  allowEsriFeatureServer  A value indicating whether this may be an Esri FeatureServer resource.  allowEsriMapServer  A value indicating whether this may be an Esri MapServer resource.  allowGeoJson  A value indicating whether this may be a GeoJSON resource.  allowKml  A value indicating whether this may be a KML resource.  allowWfs  A value indicating whether this may be a WFS resource.  allowWms  A value indicating whether this may be a WMS resource.  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  datasetId  The ID of the CKAN dataset referred to by this catalog item.  Either this property\nis {@see CkanCatalogItem#resourceId} must be specified.  The first resource of a supported type\nin this dataset will be used.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  itemProperties  A hash of properties that will be set on the item created from the CKAN resource.\nFor example, { \"treat404AsError\": false }  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  resourceId  The ID of the CKAN resource referred to by this catalog item.  Either this property\nis {@see CkanCatalogItem#datasetId} must be specified.  If {@see CkanCatalogItem#datasetId} is\nspecified too, and this resource is not found,  any  supported resource may be used instead,\ndepending on the value of {@see CkanCatalogItem#allowAnyResourceIfResourceIdNotFound}.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/csv/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem representing CSV data.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"csv\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncharSet\n\n\nThe character set of the data, which overrides the file information if present. Default is undefined.\n\n\ncolors\n\n\nThe array of color strings used for chart lines.\nTODO: make this customizable, eg. use colormap / colorPalette.\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndata\n\n\nThe data, represented as a binary Blob, a string, or a Promise for one of those things.\nIf this property is set, CatalogItem's url is ignored.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataSourceUrl\n\n\nThe URL from which the TableCatalogItem's data was obtained.  This is informational; it is not\nused.  This propery is observable.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nidColumns\n\n\nThe column identifiers (names or indices), so we can identify individual features\nwithin a table with a time column, or across multiple polled lat/lon files.\nEg. ['lat', 'lon'] for immobile features, or ['identifier'] if a unique identifier is provided\n(where these are column names in the table; column numbers work as well).\nFor region-mapped files, the region identifier is used instead.\nFor non-spatial files, the x-column is used instead.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\ninitialTimeSource\n\n\nOptions for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisSampled\n\n\nA value indicating whether the rows correspond to \"sampled\" data.\nThis only makes a difference if there is a time column and idColumns.\nIn this case, if isSampled is true, then feature position, color and size are interpolated\nto produce smooth animation of the features over time.\nIf isSampled is false, then times are treated as the start of periods, so that\nfeature positions, color and size are kept constant from one time until the next,\nthen change suddenly.\nColor and size are never interpolated when they are drawn from a text column.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nkeepOnTop\n\n\nKeeps the layer on top of all other imagery layers.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nopacity\n\n\nThe opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowWarnings\n\n\nShould any warnings like failures in region mapping be displayed to the user?\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Comma-Separated Values (CSV) (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/csv/#initialization-file-properties", 
            "text": "\"type\": \"csv\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  charSet  The character set of the data, which overrides the file information if present. Default is undefined.  colors  The array of color strings used for chart lines.\nTODO: make this customizable, eg. use colormap / colorPalette.  customProperties  The dictionary of custom item properties.  data  The data, represented as a binary Blob, a string, or a Promise for one of those things.\nIf this property is set, CatalogItem's url is ignored.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataSourceUrl  The URL from which the TableCatalogItem's data was obtained.  This is informational; it is not\nused.  This propery is observable.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  idColumns  The column identifiers (names or indices), so we can identify individual features\nwithin a table with a time column, or across multiple polled lat/lon files.\nEg. ['lat', 'lon'] for immobile features, or ['identifier'] if a unique identifier is provided\n(where these are column names in the table; column numbers work as well).\nFor region-mapped files, the region identifier is used instead.\nFor non-spatial files, the x-column is used instead.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  initialTimeSource  Options for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isSampled  A value indicating whether the rows correspond to \"sampled\" data.\nThis only makes a difference if there is a time column and idColumns.\nIn this case, if isSampled is true, then feature position, color and size are interpolated\nto produce smooth animation of the features over time.\nIf isSampled is false, then times are treated as the start of periods, so that\nfeature positions, color and size are kept constant from one time until the next,\nthen change suddenly.\nColor and size are never interpolated when they are drawn from a text column.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  keepOnTop  Keeps the layer on top of all other imagery layers.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  opacity  The opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showWarnings  Should any warnings like failures in region mapping be displayed to the user?  showsInfo  A value indicating whether this data source should show an info icon.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/composite/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem composed of multiple other catalog items.  When this item is enabled or shown, the composed items are\nenabled or shown as well.  Other properties, including CatalogItem's rectangle,\nCatalogItem's clock, and CatalogItem's legendUrls, are not composed in any way, so you should manually set those\nproperties on this object as appropriate.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"composite\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Composite (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/composite/#initialization-file-properties", 
            "text": "\"type\": \"composite\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/ogr/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem representing ogr2ogr supported data formats.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"ogr\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataSourceUrl\n\n\nThe URL from which the OgrCatalogItem's data was obtained.  This may be used\nto resolve any resources linked in the Ogr file, if any.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Format Conversion Service (based on OGR) (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/ogr/#initialization-file-properties", 
            "text": "\"type\": \"ogr\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataSourceUrl  The URL from which the OgrCatalogItem's data was obtained.  This may be used\nto resolve any resources linked in the Ogr file, if any.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/geojson/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem representing GeoJSON feature data.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"geojson\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndata\n\n\nThe GeoJSON data, represented as a binary blob, object literal, or a Promise for one of those things.\nIf this property is set, CatalogItem's url is ignored.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataSourceUrl\n\n\nThe URL from which the GeoJsonCatalogItem's data was obtained.  This will be used\nto resolve any resources linked in the GeoJSON file, if any.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nstyle\n\n\nAn object of style information which will be used instead of the default, but won't override\nstyles set on individual GeoJSON features. Styles follow the SimpleStyle spec: https://github.com/mapbox/simplestyle-spec/tree/master/1.1.0\n\nmarker-opacity\n and numeric values for \nmarker-size\n are also supported.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "GeoJSON (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/geojson/#initialization-file-properties", 
            "text": "\"type\": \"geojson\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  data  The GeoJSON data, represented as a binary blob, object literal, or a Promise for one of those things.\nIf this property is set, CatalogItem's url is ignored.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataSourceUrl  The URL from which the GeoJsonCatalogItem's data was obtained.  This will be used\nto resolve any resources linked in the GeoJSON file, if any.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  style  An object of style information which will be used instead of the default, but won't override\nstyles set on individual GeoJSON features. Styles follow the SimpleStyle spec: https://github.com/mapbox/simplestyle-spec/tree/master/1.1.0 marker-opacity  and numeric values for  marker-size  are also supported.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/gpx/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem representing GPX data.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"gpx\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataSourceUrl\n\n\nThe URL from which the GpxCatalogItem's data was obtained.  This may be used\nto resolve any resources linked in the Gpx file, if any.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "GPX (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/gpx/#initialization-file-properties", 
            "text": "\"type\": \"gpx\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataSourceUrl  The URL from which the GpxCatalogItem's data was obtained.  This may be used\nto resolve any resources linked in the Gpx file, if any.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/group/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA group of data items and other groups in the Catalog.  A group can contain\nCatalogMembers or other\nCatalogGroups.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"group\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndescription\n\n\nThe description of the item.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisOpen\n\n\nA value indicating whether the group is currently expanded and showing\nits children.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.", 
            "title": "Group (Manual) (group)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/group/#initialization-file-properties", 
            "text": "\"type\": \"group\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  description  The description of the item.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isOpen  A value indicating whether the group is currently expanded and showing\nits children.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/kml/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem representing KML or KMZ feature data.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"kml\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataSourceUrl\n\n\nThe URL from which the KmlCatalogItem's data was obtained.  This will be used\nto resolve any resources linked in the KML file, if any.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Keyhole Markup Language (KML) (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/kml/#initialization-file-properties", 
            "text": "\"type\": \"kml\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataSourceUrl  The URL from which the KmlCatalogItem's data was obtained.  This will be used\nto resolve any resources linked in the KML file, if any.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/magda-distribution/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem that queries a MAGDA server for a dataset or distribution, and then accesses\nthat the as WMS, GeoJSON, etc. depending on what it finds.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"magda-distribution\"\n\n\nallowAnyDistributionIfDistributionIdNotFound\n\n\nA value indicating whether any supported distribution may be used if both {@see MagdaCatalogItem#datasetId} and\n{@see MagdaCatalogItem#distributionId} are specified and the {@see MagdaCatalogItem#distributionId} is not found.\n\n\nallowCsv\n\n\nA value indicating whether this may be a CSV distribution.\n\n\nallowCzml\n\n\nA value indicating whether this may be a CZML distribution.\n\n\nallowEsriFeatureServer\n\n\nA value indicating whether this may be an Esri FeatureServer distribution.\n\n\nallowEsriMapServer\n\n\nA value indicating whether this may be an Esri MapServer distribution.\n\n\nallowGeoJson\n\n\nA value indicating whether this may be a GeoJSON distribution.\n\n\nallowKml\n\n\nA value indicating whether this may be a KML distribution.\n\n\nallowWfs\n\n\nA value indicating whether this may be a WFS distribution.\n\n\nallowWms\n\n\nA value indicating whether this may be a WMS distribution.\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndatasetId\n\n\nThe ID of the MAGDA dataset referred to by this catalog item.  Either this property\nis {@see MagdaCatalogItem#distributionId} must be specified.  The first distribution of a supported type\nin this dataset will be used.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\ndistributionId\n\n\nThe ID of the MAGDA distribution referred to by this catalog item.  Either this property\nor {@see MagdaCatalogItem#datasetId} must be specified.  If {@see MagdaCatalogItem#datasetId} is\nspecified too, and this distribution is not found, \nany\n supported distribution may be used instead,\ndepending on the value of {@see MagdaCatalogItem#allowAnyDistributionIfDistributionIdNotFound}.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nitemProperties\n\n\nA hash of properties that will be set on the item created from the MAGDA distribution.\nFor example, { \"treat404AsError\": false }\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "MAGDA Distribution (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/magda-distribution/#initialization-file-properties", 
            "text": "\"type\": \"magda-distribution\"  allowAnyDistributionIfDistributionIdNotFound  A value indicating whether any supported distribution may be used if both {@see MagdaCatalogItem#datasetId} and\n{@see MagdaCatalogItem#distributionId} are specified and the {@see MagdaCatalogItem#distributionId} is not found.  allowCsv  A value indicating whether this may be a CSV distribution.  allowCzml  A value indicating whether this may be a CZML distribution.  allowEsriFeatureServer  A value indicating whether this may be an Esri FeatureServer distribution.  allowEsriMapServer  A value indicating whether this may be an Esri MapServer distribution.  allowGeoJson  A value indicating whether this may be a GeoJSON distribution.  allowKml  A value indicating whether this may be a KML distribution.  allowWfs  A value indicating whether this may be a WFS distribution.  allowWms  A value indicating whether this may be a WMS distribution.  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  datasetId  The ID of the MAGDA dataset referred to by this catalog item.  Either this property\nis {@see MagdaCatalogItem#distributionId} must be specified.  The first distribution of a supported type\nin this dataset will be used.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  distributionId  The ID of the MAGDA distribution referred to by this catalog item.  Either this property\nor {@see MagdaCatalogItem#datasetId} must be specified.  If {@see MagdaCatalogItem#datasetId} is\nspecified too, and this distribution is not found,  any  supported distribution may be used instead,\ndepending on the value of {@see MagdaCatalogItem#allowAnyDistributionIfDistributionIdNotFound}.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  itemProperties  A hash of properties that will be set on the item created from the MAGDA distribution.\nFor example, { \"treat404AsError\": false }  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/mapbox-map/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nundefined\n\n\nInitialization File\n properties:\n\n\n\"type\": \"mapbox-map\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\nclipToRectangle\n\n\nA value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nfileExtension\n\n\nThe file extension used to retrieve Open Street Map data\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nignoreUnknownTileErrors\n\n\nA value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\ninitialTimeSource\n\n\nOptions for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisRequiredForRendering\n\n\nA value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nkeepOnTop\n\n\nKeeps the layer on top of all other imagery layers.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumLevel\n\n\nThe maximum tile level to retrieve from Open Street Map data\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nopacity\n\n\nThe opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\ntreat403AsError\n\n\nA value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\ntreat404AsError\n\n\nA value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "MapBox Map (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/mapbox-map/#initialization-file-properties", 
            "text": "\"type\": \"mapbox-map\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  clipToRectangle  A value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  fileExtension  The file extension used to retrieve Open Street Map data  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  ignoreUnknownTileErrors  A value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  initialTimeSource  Options for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isRequiredForRendering  A value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  keepOnTop  Keeps the layer on top of all other imagery layers.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumLevel  The maximum tile level to retrieve from Open Street Map data  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  opacity  The opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  treat403AsError  A value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.  treat404AsError  A value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/open-street-map/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA ImageryLayerCatalogItem representing a layer from the Open Street Map server.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"open-street-map\"\n\n\nattribution\n\n\nThe attribution to display with the data\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\nclipToRectangle\n\n\nA value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nfileExtension\n\n\nThe file extension used to retrieve Open Street Map data\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nignoreUnknownTileErrors\n\n\nA value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\ninitialTimeSource\n\n\nOptions for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisRequiredForRendering\n\n\nA value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nkeepOnTop\n\n\nKeeps the layer on top of all other imagery layers.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumLevel\n\n\nThe maximum tile level to retrieve from Open Street Map data\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nopacity\n\n\nThe opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nsubdomains\n\n\nThe array of subdomains, one of which will be prepended to each tile URL.\n\n\ntreat403AsError\n\n\nA value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\ntreat404AsError\n\n\nA value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "OpenStreetMap (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/open-street-map/#initialization-file-properties", 
            "text": "\"type\": \"open-street-map\"  attribution  The attribution to display with the data  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  clipToRectangle  A value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  fileExtension  The file extension used to retrieve Open Street Map data  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  ignoreUnknownTileErrors  A value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  initialTimeSource  Options for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isRequiredForRendering  A value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  keepOnTop  Keeps the layer on top of all other imagery layers.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumLevel  The maximum tile level to retrieve from Open Street Map data  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  opacity  The opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  subdomains  The array of subdomains, one of which will be prepended to each tile URL.  treat403AsError  A value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.  treat404AsError  A value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/places-like-me-function/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA Terria Spatial Inference function to identify regions that are \nmost like\n a given region according to a\ngiven set of characteristics.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"places-like-me-function\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndescription\n\n\nThe description of the item.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLoading\n\n\nA value indicating whether the group is currently loading.  This property\nis observable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.", 
            "title": "Places Like Me (function)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/places-like-me-function/#initialization-file-properties", 
            "text": "\"type\": \"places-like-me-function\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  description  The description of the item.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLoading  A value indicating whether the group is currently loading.  This property\nis observable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/sdmx-json/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem representing region-mapped data obtained from SDMX-JSON format.\n\n\nDescriptions of this format are available at:\n- https://data.oecd.org/api/sdmx-json-documentation/\n- https://github.com/sdmx-twg/sdmx-json/tree/master/data-message/docs\n- https://sdmx.org/\n- http://stats.oecd.org/sdmx-json/ (hosts a handy query builder)\n\n\nThe URL can be of two types, eg:\n1. http://example.com/sdmx-json/data/DATASETID/BD1+BD2.LGA.1+2.A/all?startTime=2013\nendTime=2013\n2. http://example.com/sdmx-json/data/DATASETID\n\n\nFor #2, the dimension names and codes come from (in json format):\nhttp://example.com/sdmx-json/dataflow/DATASETID\n\n\nInitialization File\n properties:\n\n\n\"type\": \"sdmx-json\"\n\n\naggregatedDimensionIds\n\n\nAn array of dimension ids whose values should not be shown in the Now Viewing panel;\ninstead, their values should be aggregated and treated as a single value.\nEg. useful if a dimension is repeated (eg. STATE and REGION).\nNOTE: Currently only a single aggregatedDimensionId is supported.\nThis should not be applied to regions or time periods.\n\n\nblacklist\n\n\nGets or sets each dimension's non-allowed values, by id. Eg. {\"COB\": [\"TOTAL\", \"1\"], \"FREQUENCY\": [\"Q\"]}.\nIf not defined, all values are allowed (subject to the whitelist).\nIf a dimension is not present, all values for that dimension are allowed (subject to the whitelist).\nNote this will not be applied to regions or time periods.\nIf the same value is in both the whitelist and the blacklist, the blacklist wins.\nThe expression is first matched as a regular expression (sandwiched between ^ and \n);\nif that fails, it is matched as a literal string.  So eg. \"[0-9]+\" will match 015 but not A015.\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncanDisplayPercent\n\n\nGets or sets whether this item can show percentages instead of raw values.\nThis is set to true automatically if total value ids are available on all necessary columns.\n\n\ncannotDisplayPercentMap\n\n\nDeprecated. Use cannotSum instead.\nDefaults to none.\n\n\ncannotSum\n\n\nA mapping of concept ids to arrays of values which, if selected, mean the results cannot be summed.\nIf one of these values is chosen:\n- Does not show the \"canDisplayPercent\" option.\n- Explains to the user that it can't show multiple values of concepts.\neg. {\"MEASURE\": [\"rate\"]}.\nCan also be the boolean \"true\", if it should apply to all selections.\nDefaults to none.\n\n\ncleanFootnotes\n\n\nGets or sets whether to remove trailing \"(x)\"s from the values that appear in the SDMX-JSON response.\nIf true, for example, \"Total responses(c)\" would be replaced with \"Total responses\".\nThis is a workaround for an ABS-specific issue.\nDefault false.\n\n\ncolors\n\n\nThe array of color strings used for chart lines.\nTODO: make this customizable, eg. use colormap / colorPalette.\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndata\n\n\nThe data, represented as a binary Blob, a string, or a Promise for one of those things.\nIf this property is set, CatalogItem's url is ignored.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataSourceUrl\n\n\nThe URL from which the TableCatalogItem's data was obtained.  This is informational; it is not\nused.  This propery is observable.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlComponent\n\n\nThe 'data' SDMX URL component, eg. 'data' in http://stats.oecd.org/sdmx-json/data/QNA.\nDefaults to 'data'.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndataflowUrlComponent\n\n\nThe 'dataflow' SDMX URL component, eg. 'dataflow' in http://stats.oecd.org/sdmx-json/dataflow/QNA.\nDefaults to 'dataflow'.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault true.\n\n\ndisplayPercent\n\n\nGets or sets whether to show percentages or raw values.\n\n\nendTime\n\n\nThe endTime to use as part of the ?startTime=...\nendTime=... query parameters.\nCurrently a string, but could be extended to be an object with frequency codes as keys.\nBy default this is undefined, and not used as part of the query.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nforceShowDimensionIds\n\n\nAn array of dimension ids which, if present, should be shown to the user, even if there is only one value.\nThis is useful if the name of the dataset doesn't convey what is in it, but one of the dimension values does. Eg. ['MEASURE'].\nDefault [].\n\n\nfrequencyDimensionId\n\n\nThe SDMX frequency dimension id. Defaults to 'FREQUENCY'.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nidColumns\n\n\nThe column identifiers (names or indices), so we can identify individual features\nwithin a table with a time column, or across multiple polled lat/lon files.\nEg. ['lat', 'lon'] for immobile features, or ['identifier'] if a unique identifier is provided\n(where these are column names in the table; column numbers work as well).\nFor region-mapped files, the region identifier is used instead.\nFor non-spatial files, the x-column is used instead.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisSampled\n\n\nA value indicating whether the rows correspond to \"sampled\" data.\nThis only makes a difference if there is a time column and idColumns.\nIn this case, if isSampled is true, then feature position, color and size are interpolated\nto produce smooth animation of the features over time.\nIf isSampled is false, then times are treated as the start of periods, so that\nfeature positions, color and size are kept constant from one time until the next,\nthen change suddenly.\nColor and size are never interpolated when they are drawn from a text column.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nkeepOnTop\n\n\nKeeps the layer on top of all other imagery layers.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nopacity\n\n\nThe opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.\n\n\nproviderId\n\n\nThe provider id in the SDMX URL, eg. the final 'all' in http://stats.oecd.org/sdmx-json/data/QNA/.../all.\nDefaults to 'all'.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nregionDimensionId\n\n\nThe SDMX region dimension id, which is not displayed as a user-choosable dimension. Defaults to 'REGION'.\n\n\nregionNameTemplate\n\n\nA Mustache template used to turn the name of the region provided in the \"regionType\" variable\ninto a csv-geo-au-compliant column name. The Mustache variable \"{{name}}\" holds the original name.\nYou can use this to specify a year in the name, even if it is absent on the server.\nEg. \"{{name}}\ncode_2016\" converts STE to STE_code_2016.\nBy default this is undefined. If it is undefined, the following rules are applied:\n  - If there's a \n, replace the last one with \ncode\n; else append \ncode. So SA4 -\n SA4_code; SA4_2011 -\n SA4_code_2011.\n  - If the name ends in 4 digits without an underscore, insert \"_code\n\", eg. LGA2011 -\n LGA_code_2011.\n\n\nregionType\n\n\nThe regiontype directly, which is an alternative to including a regiontype in the data.\nEg. \"cnt3\" would tell us that we should use cnt3 as the table column name.\nBy default this is undefined.\n\n\nregionTypeDimensionId\n\n\nThe SDMX region-type dimension id used with the region code to set the region type.\nUsually defaults to 'REGIONTYPE'.\n\n\nselectedInitially\n\n\nThe concepts which are initially selected, eg. {\"MEASURE\": [\"GDP\", \"GNP\"], \"FREQUENCY\": [\"A\"]}.\nDefaults to the first value in each dimension (when undefined).\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowWarnings\n\n\nShould any warnings like failures in region mapping be displayed to the user?\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nsingleValuedDimensionIds\n\n\nThe dimensions for which you can only select a single value at a time.\nThe frequency and regiontype dimensions are added to this list in allSingleValuedDimensionIds.\n\n\nsortValues\n\n\nGets or sets how to re-sort the values that appear in the SDMX-JSON response, in the Now Viewing panel.\nThe default is null, so that the order is maintained (except for totalValueIds, which are moved to the top).\nBy setting this to 'name' or 'id', the values are sorted into alphabetical and/or numerical order either by name or by id,\nrespectively.\n\n\nstartTime\n\n\nThe startTime to use as part of the ?startTime=...\nendTime=... query parameters.\nCurrently a string, but could be extended to be an object with frequency codes as keys.\nBy default this is undefined, and not used as part of the query.\n\n\ntimePeriodDimensionId\n\n\nThe SDMX time period dimension id, which is not displayed as a user-choosable dimension. Defaults to 'TIME_PERIOD'.\n\n\ntotalValueIds\n\n\nGets or sets value ids for each dimension which correspond to total values.\nPlace the grand total first.\nIf all dimensions (except region-type, region and frequency) have totals\navailable, then a \"Display as a percentage of regional total\" option becomes available.\nEg. Suppose AGE had \"10\" for 10 year olds, etc, plus \"ALL\" for all ages, \"U21\" and \"21PLUS\" for under and over 21 year olds.\nThen you would want to specify {\"AGE\": [\"ALL\", \"U21\", \"21PLUS\"]}.\nIn this case, when the user selects one of these values, any other values will be unselected.\nAnd when the user selects any other value (eg. \"10\"), if any of these values were selected, they will be unselected.\nIn addition, any values provided under a wildcard \"\n\" key are used for \nall\n dimensions, and are shown first in the list,\nif present, eg. {\"\n\": [\"ALL\"], \"AGE\": [\"U21\", \"21PLUS\"]}.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nwhitelist\n\n\nGets or sets each dimension's allowed values, by id. Eg. {\"SUBJECT\": [\"GDP\", \"GNP\"], \"FREQUENCY\": [\"A\"]}.\nIf not defined, all values are allowed.\nIf a dimension is not present, all values for that dimension are allowed.\nNote this will not be applied to regions or time periods.\nThe expression is first matched as a regular expression (sandwiched between ^ and \n);\nif that fails, it is matched as a literal string.  So eg. \"[0-9]+\" will match 015 but not A015.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "SDMX-JSON (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/sdmx-json/#initialization-file-properties", 
            "text": "\"type\": \"sdmx-json\"  aggregatedDimensionIds  An array of dimension ids whose values should not be shown in the Now Viewing panel;\ninstead, their values should be aggregated and treated as a single value.\nEg. useful if a dimension is repeated (eg. STATE and REGION).\nNOTE: Currently only a single aggregatedDimensionId is supported.\nThis should not be applied to regions or time periods.  blacklist  Gets or sets each dimension's non-allowed values, by id. Eg. {\"COB\": [\"TOTAL\", \"1\"], \"FREQUENCY\": [\"Q\"]}.\nIf not defined, all values are allowed (subject to the whitelist).\nIf a dimension is not present, all values for that dimension are allowed (subject to the whitelist).\nNote this will not be applied to regions or time periods.\nIf the same value is in both the whitelist and the blacklist, the blacklist wins.\nThe expression is first matched as a regular expression (sandwiched between ^ and  );\nif that fails, it is matched as a literal string.  So eg. \"[0-9]+\" will match 015 but not A015.  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  canDisplayPercent  Gets or sets whether this item can show percentages instead of raw values.\nThis is set to true automatically if total value ids are available on all necessary columns.  cannotDisplayPercentMap  Deprecated. Use cannotSum instead.\nDefaults to none.  cannotSum  A mapping of concept ids to arrays of values which, if selected, mean the results cannot be summed.\nIf one of these values is chosen:\n- Does not show the \"canDisplayPercent\" option.\n- Explains to the user that it can't show multiple values of concepts.\neg. {\"MEASURE\": [\"rate\"]}.\nCan also be the boolean \"true\", if it should apply to all selections.\nDefaults to none.  cleanFootnotes  Gets or sets whether to remove trailing \"(x)\"s from the values that appear in the SDMX-JSON response.\nIf true, for example, \"Total responses(c)\" would be replaced with \"Total responses\".\nThis is a workaround for an ABS-specific issue.\nDefault false.  colors  The array of color strings used for chart lines.\nTODO: make this customizable, eg. use colormap / colorPalette.  customProperties  The dictionary of custom item properties.  data  The data, represented as a binary Blob, a string, or a Promise for one of those things.\nIf this property is set, CatalogItem's url is ignored.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataSourceUrl  The URL from which the TableCatalogItem's data was obtained.  This is informational; it is not\nused.  This propery is observable.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlComponent  The 'data' SDMX URL component, eg. 'data' in http://stats.oecd.org/sdmx-json/data/QNA.\nDefaults to 'data'.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dataflowUrlComponent  The 'dataflow' SDMX URL component, eg. 'dataflow' in http://stats.oecd.org/sdmx-json/dataflow/QNA.\nDefaults to 'dataflow'.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault true.  displayPercent  Gets or sets whether to show percentages or raw values.  endTime  The endTime to use as part of the ?startTime=... endTime=... query parameters.\nCurrently a string, but could be extended to be an object with frequency codes as keys.\nBy default this is undefined, and not used as part of the query.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  forceShowDimensionIds  An array of dimension ids which, if present, should be shown to the user, even if there is only one value.\nThis is useful if the name of the dataset doesn't convey what is in it, but one of the dimension values does. Eg. ['MEASURE'].\nDefault [].  frequencyDimensionId  The SDMX frequency dimension id. Defaults to 'FREQUENCY'.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  idColumns  The column identifiers (names or indices), so we can identify individual features\nwithin a table with a time column, or across multiple polled lat/lon files.\nEg. ['lat', 'lon'] for immobile features, or ['identifier'] if a unique identifier is provided\n(where these are column names in the table; column numbers work as well).\nFor region-mapped files, the region identifier is used instead.\nFor non-spatial files, the x-column is used instead.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isSampled  A value indicating whether the rows correspond to \"sampled\" data.\nThis only makes a difference if there is a time column and idColumns.\nIn this case, if isSampled is true, then feature position, color and size are interpolated\nto produce smooth animation of the features over time.\nIf isSampled is false, then times are treated as the start of periods, so that\nfeature positions, color and size are kept constant from one time until the next,\nthen change suddenly.\nColor and size are never interpolated when they are drawn from a text column.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  keepOnTop  Keeps the layer on top of all other imagery layers.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  opacity  The opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.  providerId  The provider id in the SDMX URL, eg. the final 'all' in http://stats.oecd.org/sdmx-json/data/QNA/.../all.\nDefaults to 'all'.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  regionDimensionId  The SDMX region dimension id, which is not displayed as a user-choosable dimension. Defaults to 'REGION'.  regionNameTemplate  A Mustache template used to turn the name of the region provided in the \"regionType\" variable\ninto a csv-geo-au-compliant column name. The Mustache variable \"{{name}}\" holds the original name.\nYou can use this to specify a year in the name, even if it is absent on the server.\nEg. \"{{name}} code_2016\" converts STE to STE_code_2016.\nBy default this is undefined. If it is undefined, the following rules are applied:\n  - If there's a  , replace the last one with  code ; else append  code. So SA4 -  SA4_code; SA4_2011 -  SA4_code_2011.\n  - If the name ends in 4 digits without an underscore, insert \"_code \", eg. LGA2011 -  LGA_code_2011.  regionType  The regiontype directly, which is an alternative to including a regiontype in the data.\nEg. \"cnt3\" would tell us that we should use cnt3 as the table column name.\nBy default this is undefined.  regionTypeDimensionId  The SDMX region-type dimension id used with the region code to set the region type.\nUsually defaults to 'REGIONTYPE'.  selectedInitially  The concepts which are initially selected, eg. {\"MEASURE\": [\"GDP\", \"GNP\"], \"FREQUENCY\": [\"A\"]}.\nDefaults to the first value in each dimension (when undefined).  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showWarnings  Should any warnings like failures in region mapping be displayed to the user?  showsInfo  A value indicating whether this data source should show an info icon.  singleValuedDimensionIds  The dimensions for which you can only select a single value at a time.\nThe frequency and regiontype dimensions are added to this list in allSingleValuedDimensionIds.  sortValues  Gets or sets how to re-sort the values that appear in the SDMX-JSON response, in the Now Viewing panel.\nThe default is null, so that the order is maintained (except for totalValueIds, which are moved to the top).\nBy setting this to 'name' or 'id', the values are sorted into alphabetical and/or numerical order either by name or by id,\nrespectively.  startTime  The startTime to use as part of the ?startTime=... endTime=... query parameters.\nCurrently a string, but could be extended to be an object with frequency codes as keys.\nBy default this is undefined, and not used as part of the query.  timePeriodDimensionId  The SDMX time period dimension id, which is not displayed as a user-choosable dimension. Defaults to 'TIME_PERIOD'.  totalValueIds  Gets or sets value ids for each dimension which correspond to total values.\nPlace the grand total first.\nIf all dimensions (except region-type, region and frequency) have totals\navailable, then a \"Display as a percentage of regional total\" option becomes available.\nEg. Suppose AGE had \"10\" for 10 year olds, etc, plus \"ALL\" for all ages, \"U21\" and \"21PLUS\" for under and over 21 year olds.\nThen you would want to specify {\"AGE\": [\"ALL\", \"U21\", \"21PLUS\"]}.\nIn this case, when the user selects one of these values, any other values will be unselected.\nAnd when the user selects any other value (eg. \"10\"), if any of these values were selected, they will be unselected.\nIn addition, any values provided under a wildcard \" \" key are used for  all  dimensions, and are shown first in the list,\nif present, eg. {\" \": [\"ALL\"], \"AGE\": [\"U21\", \"21PLUS\"]}.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  whitelist  Gets or sets each dimension's allowed values, by id. Eg. {\"SUBJECT\": [\"GDP\", \"GNP\"], \"FREQUENCY\": [\"A\"]}.\nIf not defined, all values are allowed.\nIf a dimension is not present, all values for that dimension are allowed.\nNote this will not be applied to regions or time periods.\nThe expression is first matched as a regular expression (sandwiched between ^ and  );\nif that fails, it is matched as a literal string.  So eg. \"[0-9]+\" will match 015 but not A015.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/sos/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem representing data obtained from a Sensor Observation Service (SOS) 2.0 server.\nThe SOS specifications are available at http://www.opengeospatial.org/standards/sos .\nThis requires a json configuration file which specifies the procedures and observableProperties to show.\nIf more than one procedure or observableProperty is provided, the user can choose between the options.\nNote because of this need for configuration, there is no SOS catalog \"group\" (yet).\n\n\nThe offerings parameter is not used, and no spatial filters are provided.\nThe default soap XML request body can be overridden to handle custom requirements.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"sos\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncolors\n\n\nThe array of color strings used for chart lines.\nTODO: make this customizable, eg. use colormap / colorPalette.\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndata\n\n\nThe data, represented as a binary Blob, a string, or a Promise for one of those things.\nIf this property is set, CatalogItem's url is ignored.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataSourceUrl\n\n\nThe URL from which the TableCatalogItem's data was obtained.  This is informational; it is not\nused.  This propery is observable.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nendDate\n\n\nAn end date in ISO8601 format. All requests filter to this end date. Set to undefined to use the current date.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nidColumns\n\n\nThe column identifiers (names or indices), so we can identify individual features\nwithin a table with a time column, or across multiple polled lat/lon files.\nEg. ['lat', 'lon'] for immobile features, or ['identifier'] if a unique identifier is provided\n(where these are column names in the table; column numbers work as well).\nFor region-mapped files, the region identifier is used instead.\nFor non-spatial files, the x-column is used instead.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\ninitialObservablePropertyIndex\n\n\nThe index of the initially selected observable property. Defaults to 0.\n\n\ninitialProcedureIndex\n\n\nThe index of the initially selected procedure. Defaults to 0.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisSampled\n\n\nA value indicating whether the rows correspond to \"sampled\" data.\nThis only makes a difference if there is a time column and idColumns.\nIn this case, if isSampled is true, then feature position, color and size are interpolated\nto produce smooth animation of the features over time.\nIf isSampled is false, then times are treated as the start of periods, so that\nfeature positions, color and size are kept constant from one time until the next,\nthen change suddenly.\nColor and size are never interpolated when they are drawn from a text column.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nkeepOnTop\n\n\nKeeps the layer on top of all other imagery layers.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nobservableProperties\n\n\nThe sensor observation service observableProperties that the user can choose from for this catalog item.\nAn array of objects with keys 'identifier', 'title' and (optionally) 'defaultDuration' and 'units', eg.\n    [{\n       identifier: 'http://bom.gov.au/waterdata/services/parameters/Storage Level',\n       title: 'Storage Level',\n       units: 'metres'\n    }]\nThe identifier is used for communication with the server, and the title is used for display to the user.\nIf there is only one object, the user is not presented with a choice.\n\n\nobservablePropertiesName\n\n\nThe name seen by the user for the list of observable properties.\nDefaults to \"Property\", but eg. for BoM, \"Observation type\" would be better.\n\n\nopacity\n\n\nThe opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.\n\n\nprocedures\n\n\nThe sensor observation service procedures that the user can choose from for this catalog item.\nAn array of objects with keys 'identifier', 'title' and (optionally) 'defaultDuration' and 'units', eg.\n    [{\n       identifier: 'http://bom.gov.au/waterdata/services/tstypes/Pat7_C_B_1_YearlyMean',\n       title: 'Annual Mean',\n       defaultDuration: '20y'  // Final character must be s, h, d or y for seconds, hours, days or years.\n    }]\nThe identifier is used for communication with the server, and the title is used for display to the user.\nIf there is only one object, the user is not presented with a choice.\n\n\nproceduresName\n\n\nThe name seen by the user for the list of procedures.\nDefaults to \"Procedure\", but eg. for BoM, \"Frequency\" would be better.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nrequestTemplate\n\n\nThe template XML string to POST to the SOS server to query for GetObservation.\nIf this property is undefined,\nSensorObservationServiceCatalogItem.defaultRequestTemplate is used.\nThis is used as a Mustache template. See SensorObservationServiceRequestTemplate.xml for the default.\nBe careful with newlines inside tags: Mustache can add an extra space in the front of them,\nwhich causes the request to fail on the SOS server. Eg.\n\n\nhttp://www.opengis.net/...\n\n\nwill render as \n http://www.opengis.net/...\n\nThe space before the \"http\" will cause the request to fail.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowWarnings\n\n\nShould any warnings like failures in region mapping be displayed to the user?\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nstartDate\n\n\nA start date in ISO8601 format. All requests filter to this start date. Set to undefined for no temporal filter.\n\n\ntryToLoadObservationData\n\n\nA flag. If true, the catalog item will load all features, then, if\nnumber of features \n requestSizeLimit * requestNumberLimit, it will load all the observation data\nfor those features, and show that.\nIf false, or there are too many features, the observation data is only loaded when the feature is clicked on\n(via a chart in the feature info panel).\nDefaults to true.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Sensor Observation Service (SOS) (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/sos/#initialization-file-properties", 
            "text": "\"type\": \"sos\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  colors  The array of color strings used for chart lines.\nTODO: make this customizable, eg. use colormap / colorPalette.  customProperties  The dictionary of custom item properties.  data  The data, represented as a binary Blob, a string, or a Promise for one of those things.\nIf this property is set, CatalogItem's url is ignored.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataSourceUrl  The URL from which the TableCatalogItem's data was obtained.  This is informational; it is not\nused.  This propery is observable.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  endDate  An end date in ISO8601 format. All requests filter to this end date. Set to undefined to use the current date.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  idColumns  The column identifiers (names or indices), so we can identify individual features\nwithin a table with a time column, or across multiple polled lat/lon files.\nEg. ['lat', 'lon'] for immobile features, or ['identifier'] if a unique identifier is provided\n(where these are column names in the table; column numbers work as well).\nFor region-mapped files, the region identifier is used instead.\nFor non-spatial files, the x-column is used instead.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  initialObservablePropertyIndex  The index of the initially selected observable property. Defaults to 0.  initialProcedureIndex  The index of the initially selected procedure. Defaults to 0.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isSampled  A value indicating whether the rows correspond to \"sampled\" data.\nThis only makes a difference if there is a time column and idColumns.\nIn this case, if isSampled is true, then feature position, color and size are interpolated\nto produce smooth animation of the features over time.\nIf isSampled is false, then times are treated as the start of periods, so that\nfeature positions, color and size are kept constant from one time until the next,\nthen change suddenly.\nColor and size are never interpolated when they are drawn from a text column.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  keepOnTop  Keeps the layer on top of all other imagery layers.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  observableProperties  The sensor observation service observableProperties that the user can choose from for this catalog item.\nAn array of objects with keys 'identifier', 'title' and (optionally) 'defaultDuration' and 'units', eg.\n    [{\n       identifier: 'http://bom.gov.au/waterdata/services/parameters/Storage Level',\n       title: 'Storage Level',\n       units: 'metres'\n    }]\nThe identifier is used for communication with the server, and the title is used for display to the user.\nIf there is only one object, the user is not presented with a choice.  observablePropertiesName  The name seen by the user for the list of observable properties.\nDefaults to \"Property\", but eg. for BoM, \"Observation type\" would be better.  opacity  The opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.  procedures  The sensor observation service procedures that the user can choose from for this catalog item.\nAn array of objects with keys 'identifier', 'title' and (optionally) 'defaultDuration' and 'units', eg.\n    [{\n       identifier: 'http://bom.gov.au/waterdata/services/tstypes/Pat7_C_B_1_YearlyMean',\n       title: 'Annual Mean',\n       defaultDuration: '20y'  // Final character must be s, h, d or y for seconds, hours, days or years.\n    }]\nThe identifier is used for communication with the server, and the title is used for display to the user.\nIf there is only one object, the user is not presented with a choice.  proceduresName  The name seen by the user for the list of procedures.\nDefaults to \"Procedure\", but eg. for BoM, \"Frequency\" would be better.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  requestTemplate  The template XML string to POST to the SOS server to query for GetObservation.\nIf this property is undefined,\nSensorObservationServiceCatalogItem.defaultRequestTemplate is used.\nThis is used as a Mustache template. See SensorObservationServiceRequestTemplate.xml for the default.\nBe careful with newlines inside tags: Mustache can add an extra space in the front of them,\nwhich causes the request to fail on the SOS server. Eg. \nhttp://www.opengis.net/... \nwill render as   http://www.opengis.net/... \nThe space before the \"http\" will cause the request to fail.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showWarnings  Should any warnings like failures in region mapping be displayed to the user?  showsInfo  A value indicating whether this data source should show an info icon.  startDate  A start date in ISO8601 format. All requests filter to this start date. Set to undefined for no temporal filter.  tryToLoadObservationData  A flag. If true, the catalog item will load all features, then, if\nnumber of features   requestSizeLimit * requestNumberLimit, it will load all the observation data\nfor those features, and show that.\nIf false, or there are too many features, the observation data is only loaded when the feature is clicked on\n(via a chart in the feature info panel).\nDefaults to true.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/socrata/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogGroup representing a collection of layers from a \nSocrata\n server. Only spatial layers with a defined Map\nvisualisation are shown, using WMS.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"socrata\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndescription\n\n\nThe description of the item.\n\n\nfilterQuery\n\n\nThe filter query to pass to Socrata when querying the available data sources and their groups.  Each string in the\narray is passed to Socrata as an independent search string and the results are concatenated to create the complete list.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\ngroupBy\n\n\nA value indicating how datasets should be grouped.  Valid values are:\n\n \nnone\n - Datasets are put in a flat list; they are not grouped at all.\n\n \ncategory\n - Datasets are grouped according to their category in Socrata.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisOpen\n\n\nA value indicating whether the group is currently expanded and showing\nits children.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nurl\n\n\nThe URL of the Socrata server.", 
            "title": "Socrata (group)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/socrata/#initialization-file-properties", 
            "text": "\"type\": \"socrata\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.  description  The description of the item.  filterQuery  The filter query to pass to Socrata when querying the available data sources and their groups.  Each string in the\narray is passed to Socrata as an independent search string and the results are concatenated to create the complete list.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  groupBy  A value indicating how datasets should be grouped.  Valid values are:   none  - Datasets are put in a flat list; they are not grouped at all.   category  - Datasets are grouped according to their category in Socrata.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isOpen  A value indicating whether the group is currently expanded and showing\nits children.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  url  The URL of the Socrata server.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/spatial-detailing-function/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA Terria Spatial Inference function to predicts the characteristics of fine-grained regions by learning and\nexploiting correlations of coarse-grained data with Census characteristics.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"spatial-detailing-function\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndescription\n\n\nThe description of the item.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLoading\n\n\nA value indicating whether the group is currently loading.  This property\nis observable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.", 
            "title": "Spatial Detailing (function)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/spatial-detailing-function/#initialization-file-properties", 
            "text": "\"type\": \"spatial-detailing-function\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  description  The description of the item.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLoading  A value indicating whether the group is currently loading.  This property\nis observable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/terria-json/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogFunction that issues an HTTP GET to a service with a set of query parameters specified by the\nTerriaJsonCatalogFunction's inputs property, and expects to receive back TerriaJS catalog/share JSON.\n\n\nWhen this \nCatalogFunction\n is added to the catalog, TerriaJS automatically creates a user interface for it\nbased on the inputs. When the user clicks \"Run Analysis\", it issues an HTTP GET with the user-specified\ninputs supplied as part of the query string. The returned TerriaJS catalog/share JSON can add items\nto the workbench, configure the catalog, change the camera view, and more.\n\n\nExample:\n\n\n{\n  \nname\n: \nSimple Example\n,\n  \ntype\n: \nterria-json\n,\n  \nurl\n: \nhttps://putsreq.com/PK2GvS6jHfWhlBmkadrG\n,\n  \ninputs\n: [\n    {\n      \nid\n: \nposition\n,\n      \ntype\n: \npoint\n,\n      \nname\n: \nPosition\n,\n      \ndescription\n: \nThe position to pass to the service.\n,\n      \nformatter\n: \nlongitudeCommaLatitude\n\n    },\n    {\n      \nid\n: \nsomeOtherParameter\n,\n      \ntype\n: \nstring\n,\n      \nname\n: \nSome Other Parameter\n,\n      \ndescription\n: \nThis is another parameter that will be passed to the service.\n\n    }\n  ]\n}\n\n\n\n\nFor this \nCatalogFunction\n TerriaJS will present a user interface with two elements: a position on the map\nand a string. When invoked, TerriaJS will GET a URL like:\n\nhttps://putsreq.com/PK2GvS6jHfWhlBmkadrG?position=151.0%2C-33.0\nsomeOtherParameter=some%20text\n\n\nThe service is expected to return JSON using the \napplication/json\n content type, and have a body\nwith any of the following:\n\n\n\n\nA single catalog member\n\n\n\n\nFor example:\n\n\n{\n  \ntype\n: \ncsv\n,\n  \ndata\n: \nPOSTCODE,value\\n2000,1\n\n}\n\n\n\n\nThe catalog member will be added to the catalog inside a catalog group directly below this\n\nCatalogFunction\n. Catalog items will also be added to the workbench unless \nisEnabled\n is\nexplicitly set to false.\n\n\nIf the catalog item does not have a name, as in the above example, its name will be the name of\nthis \nCatalogFunction\n followed by the date and time it was invoked in ISO8601 format. If the catalog item\ndoes not have a description, it will be given a description explaining that this is the result of executing\na service and will include the input parameters sent to the service.\n\n\n\n\nAn array of catalog members\n\n\n\n\nAn array of catalog members as described above.\n\n\nFor example:\n\n\n[\n  {\n    \ntype\n: \ncsv\n,\n    \ndata\n: \nPOSTCODE,value\\n2000,1\n\n  },\n  {\n    \nname\n: \nMy Result WMS Layer\n,\n    \ntype\n: \nwms\n,\n    \nurl\n: \nhttp://ereeftds.bom.gov.au/ereefs/tds/wms/ereefs/mwq_gridAgg_P1A\n,\n    \nlayers\n: \nChl_MIM_mean\n\n  }\n]\n\n\n\n\n\n\nA catalog file\n\n\n\n\nFor example:\n\n\n{\n  \ncatalog\n: [\n    {\n      \nname\n: \nNational Datasets\n,\n      \ntype\n: \ngroup\n,\n      \nitems\n: [\n        {\n          \nname\n: \nMy Result WMS Layer\n,\n          \ntype\n: \nwms\n,\n          \nurl\n: \nhttp://ereeftds.bom.gov.au/ereefs/tds/wms/ereefs/mwq_gridAgg_P1A\n,\n          \nlayers\n: \nChl_MIM_mean\n,\n          \nisEnabled\n: true\n        }\n      ]\n    }\n  ],\n  \ninitialCamera\n: {\n    \nwest\n: 141.0,\n    \nsouth\n: -26.0,\n    \neast\n: 157.0,\n    \nnorth\n: -9.0\n  }\n}\n\n\n\n\nPlease note that in this case, catalog items are \nnot\n automatically enabled or named.\nThe \nname\n property is required. If \nisEnabled\n is not set to \ntrue\n, the catalog item\nwill not appear on the workbench.\n\n\n\n\nShare data\n\n\n\n\nSimilar to the above except that it allows multiple init sources (catalog files) and has a\nversion property for backward compatibility. For example:\n\n\n{\n  \nversion\n: \n0.0.05\n,\n  \ninitSources\n: [\n    {\n      \ncatalog\n: [\n        {\n          \nname\n: \nNational Datasets\n,\n          \ntype\n: \ngroup\n,\n          \nitems\n: [\n            {\n              \nname\n: \nMy Result WMS Layer\n,\n              \ntype\n: \nwms\n,\n              \nurl\n: \nhttp://ereeftds.bom.gov.au/ereefs/tds/wms/ereefs/mwq_gridAgg_P1A\n,\n              \nlayers\n: \nChl_MIM_mean\n,\n              \nisEnabled\n: true\n            }\n          ]\n        }\n      ],\n    },\n    {\n      \ninitialCamera\n: {\n        \nwest\n: 141.0,\n        \nsouth\n: -26.0,\n        \neast\n: 157.0,\n        \nnorth\n: -9.0\n      }\n    }\n  ]\n}\n\n\n\n\nInitialization File\n properties:\n\n\n\"type\": \"terria-json\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndescription\n\n\nThe description of the item.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLoading\n\n\nA value indicating whether the group is currently loading.  This property\nis observable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nurl\n\n\nThe URL of the REST server.", 
            "title": "TerriaJS JSON (function)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/terria-json/#initialization-file-properties", 
            "text": "\"type\": \"terria-json\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  description  The description of the item.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLoading  A value indicating whether the group is currently loading.  This property\nis observable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  url  The URL of the REST server.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/url-template/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA ImageryLayerCatalogItem representing a layer from a mapping server that can be reached\nvia a URL template.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"url-template\"\n\n\nattribution\n\n\nThe attribution to display with the data\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\nclipToRectangle\n\n\nA value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nignoreUnknownTileErrors\n\n\nA value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\ninitialTimeSource\n\n\nOptions for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisRequiredForRendering\n\n\nA value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nkeepOnTop\n\n\nKeeps the layer on top of all other imagery layers.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumLevel\n\n\nThe maximum tile level to retrieve from the map data\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nminimumLevel\n\n\nThe minimum tile level to retrieve from the map data\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nopacity\n\n\nThe opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nsubdomains\n\n\nThe array of subdomains, one of which will be prepended to each tile URL.\n\n\ntreat403AsError\n\n\nA value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\ntreat404AsError\n\n\nA value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "URL Template (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/url-template/#initialization-file-properties", 
            "text": "\"type\": \"url-template\"  attribution  The attribution to display with the data  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  clipToRectangle  A value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  ignoreUnknownTileErrors  A value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  initialTimeSource  Options for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isRequiredForRendering  A value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  keepOnTop  Keeps the layer on top of all other imagery layers.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumLevel  The maximum tile level to retrieve from the map data  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  minimumLevel  The minimum tile level to retrieve from the map data  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  opacity  The opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  subdomains  The array of subdomains, one of which will be prepended to each tile URL.  treat403AsError  A value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.  treat404AsError  A value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wfs-getCapabilities/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogGroup representing a collection of feature types from a Web Feature Service (WFS) server.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"wfs-getCapabilities\"\n\n\nblacklist\n\n\nA hash of names of blacklisted data layers.  A layer that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the Title of the layers to blacklist,\nand the values should be \"true\".\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndescription\n\n\nThe description of the item.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisOpen\n\n\nA value indicating whether the group is currently expanded and showing\nits children.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nurl\n\n\nThe URL of the WFS server.", 
            "title": "Web Feature Service (WFS) (group)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wfs-getCapabilities/#initialization-file-properties", 
            "text": "\"type\": \"wfs-getCapabilities\"  blacklist  A hash of names of blacklisted data layers.  A layer that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the Title of the layers to blacklist,\nand the values should be \"true\".  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.  description  The description of the item.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isOpen  A value indicating whether the group is currently expanded and showing\nits children.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  url  The URL of the WFS server.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wfs/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogItem representing a layer from a Web Feature Service (WFS) server.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"wfs\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nparameters\n\n\nThe additional parameters to pass to the WFS server when requesting geometry.\nAll parameter names must be entered in lowercase in order to be consistent with references in TerrisJS code.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nrequestGeoJson\n\n\nA value indicating whether we should request GeoJSON from the WFS server.  If this property\nand WebFeatureServiceCatalogItem's requestGeoJson are both true, we'll request GeoJSON first and\nonly fall back on trying GML if the GeoJSON request fails.\n\n\nrequestGml\n\n\nA value indicating whether we should request GML from the WFS server.  If this property\nand WebFeatureServiceCatalogItem's requestGeoJson are both true, we'll request GeoJSON first and\nonly fall back on trying GML if the GeoJSON request fails.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\ntypeNames\n\n\nThe WFS feature type names.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Web Feature Service (WFS) (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wfs/#initialization-file-properties", 
            "text": "\"type\": \"wfs\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  parameters  The additional parameters to pass to the WFS server when requesting geometry.\nAll parameter names must be entered in lowercase in order to be consistent with references in TerrisJS code.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  requestGeoJson  A value indicating whether we should request GeoJSON from the WFS server.  If this property\nand WebFeatureServiceCatalogItem's requestGeoJson are both true, we'll request GeoJSON first and\nonly fall back on trying GML if the GeoJSON request fails.  requestGml  A value indicating whether we should request GML from the WFS server.  If this property\nand WebFeatureServiceCatalogItem's requestGeoJson are both true, we'll request GeoJSON first and\nonly fall back on trying GML if the GeoJSON request fails.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  typeNames  The WFS feature type names.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wms-getCapabilities/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogGroup representing a collection of layers from a Web Map Service (WMS) server.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"wms-getCapabilities\"\n\n\nblacklist\n\n\nA hash of names of blacklisted data layers.  A layer that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the Title of the layers to blacklist,\nand the values should be \"true\".\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndescription\n\n\nThe description of the item.\n\n\nflatten\n\n\nA value indicating whether the list of layers queried from GetCapabilities should be\nflattened into a list with no hierarchy.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisOpen\n\n\nA value indicating whether the group is currently expanded and showing\nits children.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nitemProperties\n\n\nA hash of properties that will be set on each child item.\nFor example, { 'treat404AsError': false }\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nparameters\n\n\nThe additional parameters to pass to the WMS server when requesting images.\nAll parameter names must be entered in lowercase in order to be consistent with references in TerrisJS code.\nIf this property is undefiend, WebMapServiceCatalogItem.defaultParameters is used.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\ntitleField\n\n\nThe field name to use as the primary title in the catalog view: each WMS layer's\n\"title\" (default), \"name\", or \"abstract\".\n\n\nurl\n\n\nThe URL of the WMS server.", 
            "title": "Web Map Service (WMS) (group)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wms-getCapabilities/#initialization-file-properties", 
            "text": "\"type\": \"wms-getCapabilities\"  blacklist  A hash of names of blacklisted data layers.  A layer that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the Title of the layers to blacklist,\nand the values should be \"true\".  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.  description  The description of the item.  flatten  A value indicating whether the list of layers queried from GetCapabilities should be\nflattened into a list with no hierarchy.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isOpen  A value indicating whether the group is currently expanded and showing\nits children.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  itemProperties  A hash of properties that will be set on each child item.\nFor example, { 'treat404AsError': false }  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  parameters  The additional parameters to pass to the WMS server when requesting images.\nAll parameter names must be entered in lowercase in order to be consistent with references in TerrisJS code.\nIf this property is undefiend, WebMapServiceCatalogItem.defaultParameters is used.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  titleField  The field name to use as the primary title in the catalog view: each WMS layer's\n\"title\" (default), \"name\", or \"abstract\".  url  The URL of the WMS server.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wms/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA ImageryLayerCatalogItem representing a layer from a Web Map Service (WMS) server.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"wms\"\n\n\navailableDimensions\n\n\nThe list of additional dimensions (e.g. elevation) and their possible values available from the\nWMS server.  If undefined, this property is automatically populated from the WMS GetCapabilities on load.\nThis property is an object that has a property named for each layer.  The value of the property is an array\nof dimensions available for this layer.  A dimension has the fields shown in the example below.  See the\nWMS 1.3.0 specification, section C.2, for a description of the fields.  All fields are optional except\n\nname\n and \noptions\n.\n\n\navailableStyles\n\n\nThe available styles for each selected layer in WebMapServiceCatalogItem's layers.  If undefined,\nthis property is automatically populated from the WMS GetCapabilities on load.  This property is an object that has a\nproperty named for each layer.  The value of the property is an array where each element in the array is a style supported\nby the layer.  The style has \nname\n, \ntitle\n, \nabstract\n, and \nlegendUrl\n properties.\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\nclipToRectangle\n\n\nA value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.\n\n\ncolorScaleMaximum\n\n\nThe maximum of the color scale range.  Because COLORSCALERANGE is a non-standard\nproperty supported by ncWMS servers, this property is ignored unless WebMapServiceCatalogItem's supportsColorScaleRange\nis true.  WebMapServiceCatalogItem's colorScaleMinimum must be set as well.\n\n\ncolorScaleMinimum\n\n\nThe minumum of the color scale range.  Because COLORSCALERANGE is a non-standard\nproperty supported by ncWMS servers, this property is ignored unless WebMapServiceCatalogItem's supportsColorScaleRange\nis true.  WebMapServiceCatalogItem's colorScaleMaximum must be set as well.\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndataUrl\n\n\nThe URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.\n\n\ndataUrlType\n\n\nThe type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n * \ndirect\n - A direct link to the data.\n * \nwfs\n - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n * \nwfs-complete\n - A complete, ready-to-use link to download features from a WFS server.\n * \nnone\n - There is no data link.\n\n\ndateFormat\n\n\nOptions for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.\n\n\ndescription\n\n\nThe description of the item.\n\n\ndimensions\n\n\nThe selected values for dimensions available for this WMS layer.  The value of this property is\nan object where each key is the name of a dimension and each value is the value to use for that dimension.\nNote that WMS does not allow dimensions to be explicitly specified per layer.  So the selected dimension values are\napplied to all layers with a corresponding dimension.\n\n\ndisableUserChanges\n\n\nA value indicating whether the user's ability to change the display properties of this\ncatalog item is disabled.  For example, if true, WebMapServiceCatalogItem's styles should not be\nchangeable through the user interface.\n\n\ndisplayChoicesBeforeLegend\n\n\nA flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.\n\n\ndisplayDuration\n\n\nGets or sets how many seconds time-series data with a start date but no end date should last, in seconds.\n\n\nfeatureInfoTemplate\n\n\nA template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\ngetFeatureInfoFormats\n\n\nThe formats in which to try WMS GetFeatureInfo requests.  If this property is undefined, the \nWebMapServiceImageryProvider\n defaults\nare used.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nignoreUnknownTileErrors\n\n\nA value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\ninitialTimeSource\n\n\nOptions for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range\n\n\nisEnabled\n\n\nA value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.\n\n\nisEsri\n\n\nGets or sets whether this WMS has been identified as being provided by an Esri ArcGIS MapServer. No assumption is made about where an ArcGIS MapServer endpoint also exists.\n\n\nisGeoServer\n\n\nGets or sets whether this WMS has been identified as being provided by a GeoServer.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLegendVisible\n\n\nA value indicating whether the legend for this data item is currently visible.\n\n\nisLoading\n\n\nA value indicating whether this data source is currently loading.\n\n\nisMappable\n\n\nA value indicating whether this data source is mappable.\n\n\nisNcWMS\n\n\nGets or sets whether this WMS has been identified as being provided by ncWMS.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisRequiredForRendering\n\n\nA value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.\n\n\nisShown\n\n\nA value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nkeepOnTop\n\n\nKeeps the layer on top of all other imagery layers.\n\n\nlayers\n\n\nThe WMS layers to include.  To specify multiple layers, separate them\nwith a commas.\n\n\nlegendUrl\n\n\nThe URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.\n\n\nlegendUrls\n\n\nThe URLs of the legends to show when this catalog item is enabled.\n\n\nlinkedWcsCoverage\n\n\nThe coverage name for linked WCS for clip-and-ship. This proerty is part\nof an experimental feature and may be subject to change.\n\n\nlinkedWcsUrl\n\n\nThe URL of a WCS that enables clip-and-ship for this WMS item. This\nproerty is part of an experimental feature and may be subject to change.\n\n\nmaxRefreshIntervals\n\n\nThe maximum number of intervals that can be created by a single\ndate range, when specified in the form time/time/periodicity.\neg. 2015-04-27T16:15:00/2015-04-27T18:45:00/PT15M has 11 intervals\n\n\nmaximumShownFeatureInfos\n\n\nThe maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos\n\n\nmetadataUrl\n\n\nThe URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.\n\n\nminScaleDenominator\n\n\nThe denominator of the largest scale (smallest denominator) for which tiles should be requested.  For example, if this value is 1000, then tiles representing\na scale larger than 1:1000 (i.e. numerically smaller denominator, when zooming in closer) will not be requested.  Instead, tiles of the largest-available scale, as specified by this property,\nwill be used and will simply get blurier as the user zooms in closer.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnowViewingMessage\n\n\nA message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.\n\n\nopacity\n\n\nThe opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.\n\n\nparameters\n\n\nThe additional parameters to pass to the WMS server when requesting images.\nAll parameter names must be entered in lowercase in order to be consistent with references in TerrisJS code.\nIf this property is undefined, WebMapServiceCatalogItem.defaultParameters is used.\n\n\npopulateIntervalsFromTimeDimension\n\n\nA value indicating whether a time dimension, if it exists in GetCapabilities, should be used to populate\nthe ImageryLayerCatalogItem's intervals.  If the ImageryLayerCatalogItem's intervals property is set explicitly\non this catalog item, the value of this property is ignored.\n\n\nrectangle\n\n\nThe geographic rectangle (extent or bounding box) containing this data item.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nshowsInfo\n\n\nA value indicating whether this data source should show an info icon.\n\n\nstyles\n\n\nThe comma-separated list of styles to request, one per layer list in WebMapServiceCatalogItem's layers.\n\n\nsupportsColorScaleRange\n\n\nGets or sets whether this WMS server has been identified as supporting the COLORSCALERANGE parameter.\n\n\ntilingScheme\n\n\nThe tiling scheme to pass to the WMS server when requesting images.\nIf this property is undefiend, the default tiling scheme of the provider is used.\n\n\ntokenInvalidHttpCodes\n\n\nThe set of HTTP status codes that indicate that a token is invalid.\nThis property is ignored if WebMapServiceCatalogItem's tokenUrl is undefined.\n\n\ntokenParameterName\n\n\nThe name of the URL query parameter used to provide the token\nto the server. This property is ignored if WebMapServiceCatalogItem's tokenUrl is undefined.\n\n\ntokenUrl\n\n\nThe URL to use for requesting tokens. Typically, this is set to \n/esri-token-auth\n to use\nthe ArcGIS token mechanism built into terriajs-server.\n\n\ntreat403AsError\n\n\nA value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\ntreat404AsError\n\n\nA value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.\n\n\nurl\n\n\nThe URL of this data.\n\n\nuseOwnClock\n\n\nA flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.\n\n\nzoomOnEnable\n\n\nA value indicating whether the map will automatically zoom to this catalog item when it is enabled.\n\n\nNote that within a single init source:\n\n\n\n\nCatalog items with both \nisEnabled\n and \nzoomOnEnable\n set to true will override the top-level \ninitialCamera\n property.\n\n\nIf multiple catalog items have both \nisEnabled\n and \nzoomOnEnable\n set to true, it is undefined which one will affect the camera.\n\n\n\n\nIn the case of multiple init sources, however, the camera will reflect whatever happens in the \nlast\n init source, whether\nit is a result of a \nzoomOnEnable\n or an \ninitialCamera\n,", 
            "title": "Web Map Service (WMS) (item)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wms/#initialization-file-properties", 
            "text": "\"type\": \"wms\"  availableDimensions  The list of additional dimensions (e.g. elevation) and their possible values available from the\nWMS server.  If undefined, this property is automatically populated from the WMS GetCapabilities on load.\nThis property is an object that has a property named for each layer.  The value of the property is an array\nof dimensions available for this layer.  A dimension has the fields shown in the example below.  See the\nWMS 1.3.0 specification, section C.2, for a description of the fields.  All fields are optional except name  and  options .  availableStyles  The available styles for each selected layer in WebMapServiceCatalogItem's layers.  If undefined,\nthis property is automatically populated from the WMS GetCapabilities on load.  This property is an object that has a\nproperty named for each layer.  The value of the property is an array where each element in the array is a style supported\nby the layer.  The style has  name ,  title ,  abstract , and  legendUrl  properties.  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  clipToRectangle  A value indicating whether this dataset should be clipped to the CatalogItem's rectangle.\nIf true, no part of the dataset will be displayed outside the rectangle.  This property is true by default,\nleading to better performance and avoiding tile request errors that might occur when requesting tiles outside the\nserver-specified rectangle.  However, it may also cause features to be cut off in some cases, such as if a server\nreports an extent that does not take into account that the representation of features sometimes require a larger\nspatial extent than the features themselves.  For example, if a point feature on the edge of the extent is drawn\nas a circle with a radius of 5 pixels, half of that circle will be cut off.  colorScaleMaximum  The maximum of the color scale range.  Because COLORSCALERANGE is a non-standard\nproperty supported by ncWMS servers, this property is ignored unless WebMapServiceCatalogItem's supportsColorScaleRange\nis true.  WebMapServiceCatalogItem's colorScaleMinimum must be set as well.  colorScaleMinimum  The minumum of the color scale range.  Because COLORSCALERANGE is a non-standard\nproperty supported by ncWMS servers, this property is ignored unless WebMapServiceCatalogItem's supportsColorScaleRange\nis true.  WebMapServiceCatalogItem's colorScaleMaximum must be set as well.  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of this data item.\nThis property is an HTML string that must be sanitized before display to the user.  dataUrl  The URL from which this data item's raw data can be retrieved, or undefined if raw data for\nthis data item is not available.  dataUrlType  The type of the CatalogItem's dataUrl, or undefined if raw data for this data\nsource is not available.\nValid values are:\n *  direct  - A direct link to the data.\n *  wfs  - A Web Feature Service (WFS) base URL.  If CatalogItem's dataUrl is not\n           specified, the base URL will be this data item's URL.\n *  wfs-complete  - A complete, ready-to-use link to download features from a WFS server.\n *  none  - There is no data link.  dateFormat  Options for formatting current time and timeline tic labels. Options are:\n   currentTime   // Current time in time slider will be shown in this format. For example \"mmmm yyyy\" for Jan 2016.\n   timelineTic   // Timeline tics will have this label. For example \"yyyy\" will cause each tic to be labelled with the year.  description  The description of the item.  dimensions  The selected values for dimensions available for this WMS layer.  The value of this property is\nan object where each key is the name of a dimension and each value is the value to use for that dimension.\nNote that WMS does not allow dimensions to be explicitly specified per layer.  So the selected dimension values are\napplied to all layers with a corresponding dimension.  disableUserChanges  A value indicating whether the user's ability to change the display properties of this\ncatalog item is disabled.  For example, if true, WebMapServiceCatalogItem's styles should not be\nchangeable through the user interface.  displayChoicesBeforeLegend  A flag which determines whether the legend comes before (false) or after (true) the display variable choice.\nDefault false.  displayDuration  Gets or sets how many seconds time-series data with a start date but no end date should last, in seconds.  featureInfoTemplate  A template to display message in a info box.\nMay be a string or an object with template, name and/or partials properties.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  getFeatureInfoFormats  The formats in which to try WMS GetFeatureInfo requests.  If this property is undefined, the  WebMapServiceImageryProvider  defaults\nare used.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  ignoreUnknownTileErrors  A value indicating whether non-specific (no HTTP status code) tile errors should be ignored. This is a\nlast resort, for dealing with odd cases such as data sources that return non-images (eg XML) with a 200 status code.\nNo error messages will be shown to the user.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  initialTimeSource  Options for the value of the animation timeline at start. Valid options in config file are:\n    initialTimeSource: \"present\"                            // closest to today's date\n    initialTimeSource: \"start\"                              // start of time range of animation\n    initialTimeSource: \"end\"                                // end of time range of animation\n    initialTimeSource: An ISO8601 date e.g. \"2015-08-08\"    // specified date or nearest if date is outside range  isEnabled  A value indicating whether this data item is enabled.  An enabled data item appears in the\n\"Now Viewing\" pane, but is not necessarily shown on the map.  isEsri  Gets or sets whether this WMS has been identified as being provided by an Esri ArcGIS MapServer. No assumption is made about where an ArcGIS MapServer endpoint also exists.  isGeoServer  Gets or sets whether this WMS has been identified as being provided by a GeoServer.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLegendVisible  A value indicating whether the legend for this data item is currently visible.  isLoading  A value indicating whether this data source is currently loading.  isMappable  A value indicating whether this data source is mappable.  isNcWMS  Gets or sets whether this WMS has been identified as being provided by ncWMS.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isRequiredForRendering  A value indicating whether tiles of this catalog item are required to be loaded before terrain\ntiles to which they're attached can be rendered.  This should usually be set to true for base layers and\nfalse for all others.  isShown  A value indicating whether this data item is currently shown on the map.  In order to be shown,\nthe item must also be enabled.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  keepOnTop  Keeps the layer on top of all other imagery layers.  layers  The WMS layers to include.  To specify multiple layers, separate them\nwith a commas.  legendUrl  The URL of the legend to show when this catalog item is enabled.  If there is more than one\nlegend URL, this property returns the first one.  legendUrls  The URLs of the legends to show when this catalog item is enabled.  linkedWcsCoverage  The coverage name for linked WCS for clip-and-ship. This proerty is part\nof an experimental feature and may be subject to change.  linkedWcsUrl  The URL of a WCS that enables clip-and-ship for this WMS item. This\nproerty is part of an experimental feature and may be subject to change.  maxRefreshIntervals  The maximum number of intervals that can be created by a single\ndate range, when specified in the form time/time/periodicity.\neg. 2015-04-27T16:15:00/2015-04-27T18:45:00/PT15M has 11 intervals  maximumShownFeatureInfos  The maximum number of features whose information can be shown at one time in the Feature Info Panel, from this item.\nDefaults to terria.configParameters.defaultMaximumShownFeatureInfos  metadataUrl  The URL from which this data item's metadata description can be retrieved, or undefined if\nmetadata is not available for this data item.  The format of the metadata depends on the type of data item.\nFor example, Web Map Service (WMS) data items provide their metadata via their GetCapabilities document.  minScaleDenominator  The denominator of the largest scale (smallest denominator) for which tiles should be requested.  For example, if this value is 1000, then tiles representing\na scale larger than 1:1000 (i.e. numerically smaller denominator, when zooming in closer) will not be requested.  Instead, tiles of the largest-available scale, as specified by this property,\nwill be used and will simply get blurier as the user zooms in closer.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nowViewingMessage  A message to show when this item is enabled for the first time in order to call attention to the Now Viewing panel.  opacity  The opacity (alpha) of the data item, where 0.0 is fully transparent and 1.0 is\nfully opaque.  parameters  The additional parameters to pass to the WMS server when requesting images.\nAll parameter names must be entered in lowercase in order to be consistent with references in TerrisJS code.\nIf this property is undefined, WebMapServiceCatalogItem.defaultParameters is used.  populateIntervalsFromTimeDimension  A value indicating whether a time dimension, if it exists in GetCapabilities, should be used to populate\nthe ImageryLayerCatalogItem's intervals.  If the ImageryLayerCatalogItem's intervals property is set explicitly\non this catalog item, the value of this property is ignored.  rectangle  The geographic rectangle (extent or bounding box) containing this data item.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  showsInfo  A value indicating whether this data source should show an info icon.  styles  The comma-separated list of styles to request, one per layer list in WebMapServiceCatalogItem's layers.  supportsColorScaleRange  Gets or sets whether this WMS server has been identified as supporting the COLORSCALERANGE parameter.  tilingScheme  The tiling scheme to pass to the WMS server when requesting images.\nIf this property is undefiend, the default tiling scheme of the provider is used.  tokenInvalidHttpCodes  The set of HTTP status codes that indicate that a token is invalid.\nThis property is ignored if WebMapServiceCatalogItem's tokenUrl is undefined.  tokenParameterName  The name of the URL query parameter used to provide the token\nto the server. This property is ignored if WebMapServiceCatalogItem's tokenUrl is undefined.  tokenUrl  The URL to use for requesting tokens. Typically, this is set to  /esri-token-auth  to use\nthe ArcGIS token mechanism built into terriajs-server.  treat403AsError  A value indicating whether a 403 response code when requesting a tile should be\ntreated as an error.  If false, 403s are assumed to just be missing tiles and need not be\nreported to the user.  treat404AsError  A value indicating whether a 404 response code when requesting a tile should be\ntreated as an error.  If false, 404s are assumed to just be missing tiles and need not be\nreported to the user.  url  The URL of this data.  useOwnClock  A flag indicating whether imagery should be displayed using this item's own clock (currentTime, multiplier),\nor, if false, the terria clock (whose current time is shown in the timeline UI). Default false.  zoomOnEnable  A value indicating whether the map will automatically zoom to this catalog item when it is enabled.  Note that within a single init source:   Catalog items with both  isEnabled  and  zoomOnEnable  set to true will override the top-level  initialCamera  property.  If multiple catalog items have both  isEnabled  and  zoomOnEnable  set to true, it is undefined which one will affect the camera.   In the case of multiple init sources, however, the camera will reflect whatever happens in the  last  init source, whether\nit is a result of a  zoomOnEnable  or an  initialCamera ,", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wps/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogFunction that invokes a Web Processing Service (WPS) process.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"wps\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndescription\n\n\nThe description of the item.\n\n\nexecuteWithHttpGet\n\n\nGets or sets whether to use key value pairs (KVP) embedded in Execute URL, or whether to make a POST request\nwith XML data.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\nidentifier\n\n\nThe identifier of this WPS process.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLoading\n\n\nA value indicating whether the group is currently loading.  This property\nis observable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nurl\n\n\nThe URL of the WPS server.", 
            "title": "Web Processing Service (WPS) (function)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wps/#initialization-file-properties", 
            "text": "\"type\": \"wps\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  description  The description of the item.  executeWithHttpGet  Gets or sets whether to use key value pairs (KVP) embedded in Execute URL, or whether to make a POST request\nwith XML data.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  identifier  The identifier of this WPS process.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLoading  A value indicating whether the group is currently loading.  This property\nis observable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  url  The URL of the WPS server.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wps-getCapabilities/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA catalog group that is populated by querying available processes from a Web Processing Service (WPS)\nserver.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"wps-getCapabilities\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndescription\n\n\nThe description of the item.\n\n\nexecuteWithHttpGet\n\n\nIf true, WPS Execute with a key-value pair GET request, otherwise WPS Execute with an XML encoded POST request.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisOpen\n\n\nA value indicating whether the group is currently expanded and showing\nits children.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nitemProperties\n\n\nA hash of properties that will be set on each child item.\nFor example, { \"treat404AsError\": false }\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\nurl\n\n\nThe URL of the WPS server.", 
            "title": "Web Processing Service (WPS) (group)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wps-getCapabilities/#initialization-file-properties", 
            "text": "\"type\": \"wps-getCapabilities\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  description  The description of the item.  executeWithHttpGet  If true, WPS Execute with a key-value pair GET request, otherwise WPS Execute with an XML encoded POST request.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isOpen  A value indicating whether the group is currently expanded and showing\nits children.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  itemProperties  A hash of properties that will be set on each child item.\nFor example, { \"treat404AsError\": false }  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  url  The URL of the WPS server.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wfs-features-group/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA CatalogGroup representing a collection of individual features from a Web Feature\nService (WFS) server. By contrast to a WebFeatureServiceCatalogGroup, which creates one\nWebFeatureServiceCatalogItem per feature \ntype\n (eg, one item for rivers, one for lakes),\nthis group creates one WebFeatureServiceCatalogItem per \nfeature\n (eg, one item for each\nindividual river).\n\n\nInitialization File\n properties:\n\n\n\"type\": \"wfs-features-group\"\n\n\nblacklist\n\n\nA hash of names of blacklisted data layers.  A layer that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the Title of the layers to blacklist,\nand the values should be \"true\".\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndataCustodian\n\n\nA description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.\n\n\ndescription\n\n\nThe description of the item.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\ngroupByProperty\n\n\nThe name of the property by which to group the catalog items in this group.  If this property\nis undefined, all catalog items are added at the top level.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisOpen\n\n\nA value indicating whether the group is currently expanded and showing\nits children.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nnameProperty\n\n\nThe name of the WFS attribute from which to derive the names of the catalog items in this group.\nThis property must be set.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.\n\n\ntypeNames\n\n\nThe WFS feature type names.\n\n\nurl\n\n\nThe URL of the WFS server.\n\n\nuseFeatureID\n\n\nGets or sets whether to use WFS \"feature ID\" for retrieving features. On by default, disable to handle\nID-less features on some servers. When disabled, nameProperty is used for matching features, and will give\nincorrect results if its values are not unique.", 
            "title": "WFS Features (group)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/wfs-features-group/#initialization-file-properties", 
            "text": "\"type\": \"wfs-features-group\"  blacklist  A hash of names of blacklisted data layers.  A layer that appears in this hash\nwill not be shown to the user.  In this hash, the keys should be the Title of the layers to blacklist,\nand the values should be \"true\".  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  dataCustodian  A description of the custodian of the data sources in this group.\nThis property is an HTML string that must be sanitized before display to the user.  description  The description of the item.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  groupByProperty  The name of the property by which to group the catalog items in this group.  If this property\nis undefined, all catalog items are added at the top level.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isOpen  A value indicating whether the group is currently expanded and showing\nits children.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  nameProperty  The name of the WFS attribute from which to derive the names of the catalog items in this group.\nThis property must be set.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.  typeNames  The WFS feature type names.  url  The URL of the WFS server.  useFeatureID  Gets or sets whether to use WFS \"feature ID\" for retrieving features. On by default, disable to handle\nID-less features on some servers. When disabled, nameProperty is used for matching features, and will give\nincorrect results if its values are not unique.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/why-am-i-special-function/", 
            "text": "Note\n\n\nThis page is automatically generated from the source code, and is a bit rough.  If you have\ntrouble, check the \nsource code for this type\n or post a message to the \nforum\n.\n\n\n\n\nA Terria Spatial Inference function to determines the characteristics by which a particular region is \nmost different\n\nfrom all other regions.\n\n\nInitialization File\n properties:\n\n\n\"type\": \"why-am-i-special-function\"\n\n\ncacheDuration\n\n\nThe cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).\n\n\ncustomProperties\n\n\nThe dictionary of custom item properties.\n\n\ndescription\n\n\nThe description of the item.\n\n\nforceProxy\n\n\nGets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.\n\n\nhideSource\n\n\nIndicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).\n\n\nid\n\n\nAn optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.\n\n\ninfo\n\n\nThe array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.\n\n\ninfoSectionOrder\n\n\nThe array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.\n\n\ninitialMessage\n\n\nA message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.\n\n\nisHidden\n\n\nA value indicating whether this item is hidden from the catalog.  This\nproperty is observable.\n\n\nisLoading\n\n\nA value indicating whether the group is currently loading.  This property\nis observable.\n\n\nisPromoted\n\n\nA value indicating whether this item is kept above other non-promoted items.\n\n\nisUserSupplied\n\n\nA value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.\n\n\nisWaitingForDisclaimer\n\n\nWhether this catalog member is waiting for a disclaimer to be accepted before showing itself.\n\n\nname\n\n\nThe name of the item.\n\n\nnameInCatalog\n\n\nThe name of this catalog member in the catalog. By default this is just \nname\n, but can be overridden.\n\n\nshareKeys\n\n\nAn array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.\n\n\nshortReport\n\n\nA short report to show on the now viewing tab.", 
            "title": "Why Am I Special (function)"
        }, 
        {
            "location": "/connecting-to-data/catalog-type-details/why-am-i-special-function/#initialization-file-properties", 
            "text": "\"type\": \"why-am-i-special-function\"  cacheDuration  The cache duration to use for proxied URLs for this catalog member.  If undefined, proxied URLs are effectively cachable\nforever.  The duration is expressed as a Varnish-like duration string, such as '1d' (one day) or '10000s' (ten thousand seconds).  customProperties  The dictionary of custom item properties.  description  The description of the item.  forceProxy  Gets or sets whether or not this member should be forced to use a proxy.\nThis property is not observable.  hideSource  Indicates that the source of this data should be hidden from the UI (obviously this isn't super-secure as you\ncan just look at the network requests).  id  An optional unique id for this member, that is stable across renames and moves.\nUse uniqueId to get the canonical unique id for this CatalogMember, which is present even if there is no id.  info  The array of section titles and contents for display in the layer info panel.\nIn future this may replace 'description' above - this list should not contain\nsections named 'description' or 'Description' if the 'description' property\nis also set as both will be displayed.\nThe object is of the form {name:string, content:string}.\nContent will be rendered as Markdown with HTML.  infoSectionOrder  The array of section titles definining the display order of info sections.  If this property\nis not defined, DataPreviewSections's DEFAULT_SECTION_ORDER is used.  initialMessage  A message object that is presented to the user when an item or group is initially clicked\nThe object is of the form {title:string, content:string, key: string, confirmation: boolean, confirmText: string, width: number, height: number}.  isHidden  A value indicating whether this item is hidden from the catalog.  This\nproperty is observable.  isLoading  A value indicating whether the group is currently loading.  This property\nis observable.  isPromoted  A value indicating whether this item is kept above other non-promoted items.  isUserSupplied  A value indicating whether this member was supplied by the user rather than loaded from one of the\nTerria's initSources.  User-supplied members must be serialized completely when, for example,\nserializing enabled members for sharing.  isWaitingForDisclaimer  Whether this catalog member is waiting for a disclaimer to be accepted before showing itself.  name  The name of the item.  nameInCatalog  The name of this catalog member in the catalog. By default this is just  name , but can be overridden.  shareKeys  An array of all possible keys that can be used to match to this catalog member when specified in a share link -\nused for maintaining backwards compatibility when adding or changing CatalogMember's id.  shortReport  A short report to show on the now viewing tab.", 
            "title": "Initialization File properties:"
        }, 
        {
            "location": "/deploying/", 
            "text": "This section explains how to deploy and maintain production (and production-ish) versions of TerriaJS applications like TerriaMap.  Before tackling this section, read \nGetting Started\n to learn how to build and run TerriaMap locally.\n\n\nDeploying TerriaMap itself:\n\n\n\n\nDeploying TerriaMap\n: General instructions for deploying TerriaMap in almost any environment.\n\n\nDeploying to AWS\n: Deploy TerriaMap to \nAmazon Web Services (AWS)\n.\n\n\nDeploying with Kubernetes\n: Deploy TerriaMap using \nDocker\n and \nKubernetes\n.\n\n\n\n\nDeploying other services for use with TerriaJS:\n\n\n\n\nSetting Up a Region Mapping Server\n: Set up a server for use with TerriaJS's region mapping feature.\n\n\nSetting Up Geoserver\n: Configure \nGeoServer\n for effective use with TerriaJS.\n\n\n\n\nUsing a TerriaMap in other applications:\n\n\n\n\nUsing as a CKAN Previewer\n: Use TerriaJS as a previewer for geospatial data in a \nCKAN\n site.\n\n\nControlling with URL Parameters\n: Control a TerriaJS application by passing it URL parameters.  This is powerful because it enables another site to launch or embed a customized map with little or no code to write.\n\n\nControlling in an \niframe\n or Popup\n: Embed a TerriaJS application in iframe or pop it up in a separate window, and control it by posting it cross-window messages.", 
            "title": "Overview"
        }, 
        {
            "location": "/deploying/deploying-terriamap/", 
            "text": "TerriaMap can be deployed in almost any environment.\n\n\nFirst, you may want to build a minified version of TerriaMap by running:\n\n\nnpm run gulp release\n\n\n\n\nThe normal build (\nnpm run gulp\n) can be deployed as well, but the release version is smaller and faster.\n\n\nThen, you can host your TerriaMap using either the included Node.js-based web server, or by using any web server of your choosing.\n\n\nUsing the included Node.js-based web server\n\n\nThe easiest way to deploy your TerriaMap is to use the included Node.js-based web server, called \nterriajs-server\n.  You'll need Node.js 4.0+ installed on the server in order to run terriajs-server.  \n\n\n\n\nNote\n\n\nNode.js 5.0+ is required to \nbuild\n TerriaMap, but only 4.0+ is required to \nrun\n it.\n\n\n\n\nThen, copy the following files and directories from your local system where you built TerriaMap onto the server:\n\n\n\n\nwwwroot\n\n\nnode_modules\n\n\ndevserverconfig.json\n\n\n\n\nAnd on the server, change to the directory where you copied those files and directories and run:\n\n\n./node_modules/terriajs-server/run_server.sh --config-file devserverconfig.json\n\n\n\n\nThe server will start on port 3001.  You can specify a different port by adding \n--port 1234\n to the command-line above.\n\n\nIt is usually a good idea to run another web server, such as \nnginx\n or \nVarnish\n on port 80 and then reverse-proxy to the Node.js server, rather than running terriajs-server on port 80 directly.   You will find a varnish VCL file with the TerriaMap source code in the \ndeploy/varnish directory\n.  In addition to acting as a reverse proxy for the Node.js server, the supplied Varnish configuration also caches requests to proxied map data in order to improve performance.\n\n\nUsing any web server\n\n\nterriajs-server\n, described above, only does a few things:\n\n\n\n\nIt serves up the static HTML, JavaScript, and CSS that make up the application.\n\n\nIt includes a simple service at \n/proxy\n that allows TerriaJS to access geospatial data servers that don't support \nCORS\n.  If this service is not available, TerriaJS won't be able to access any datasets that are on other servers and that don't support CORS.\n\n\nIt includes another service at \n/convert\n that uses \nGDAL\n and OGR to transform otherwise unsupported geospatial vector data (e.g. shapefiles) to GeoJSON for display by the TerriaJS client.  If this service is not available, these data formats will not be supported.  However, all the \nformats that TerriaJS supports directly\n will work just fine.\n\n\nWhen configured correctly, it persists blobs of JSON for use in the sharing feature.  If this service is not available, the JSON can be stored in the share URL, instead.  However, this makes for some extremely long URLs.\n\n\n\n\nIf these limitations are acceptable, you can run your TerriaMap on virtually any web server by simply copying the TerriaMap \nwwwroot\n onto the server!\n\n\nYou can also incrementally add these services to your own server, as necessary, by porting the code in \nterriajs-server\n to your environment.", 
            "title": "Deploying TerriaMap"
        }, 
        {
            "location": "/deploying/deploying-terriamap/#using-the-included-nodejs-based-web-server", 
            "text": "The easiest way to deploy your TerriaMap is to use the included Node.js-based web server, called  terriajs-server .  You'll need Node.js 4.0+ installed on the server in order to run terriajs-server.     Note  Node.js 5.0+ is required to  build  TerriaMap, but only 4.0+ is required to  run  it.   Then, copy the following files and directories from your local system where you built TerriaMap onto the server:   wwwroot  node_modules  devserverconfig.json   And on the server, change to the directory where you copied those files and directories and run:  ./node_modules/terriajs-server/run_server.sh --config-file devserverconfig.json  The server will start on port 3001.  You can specify a different port by adding  --port 1234  to the command-line above.  It is usually a good idea to run another web server, such as  nginx  or  Varnish  on port 80 and then reverse-proxy to the Node.js server, rather than running terriajs-server on port 80 directly.   You will find a varnish VCL file with the TerriaMap source code in the  deploy/varnish directory .  In addition to acting as a reverse proxy for the Node.js server, the supplied Varnish configuration also caches requests to proxied map data in order to improve performance.", 
            "title": "Using the included Node.js-based web server"
        }, 
        {
            "location": "/deploying/deploying-terriamap/#using-any-web-server", 
            "text": "terriajs-server , described above, only does a few things:   It serves up the static HTML, JavaScript, and CSS that make up the application.  It includes a simple service at  /proxy  that allows TerriaJS to access geospatial data servers that don't support  CORS .  If this service is not available, TerriaJS won't be able to access any datasets that are on other servers and that don't support CORS.  It includes another service at  /convert  that uses  GDAL  and OGR to transform otherwise unsupported geospatial vector data (e.g. shapefiles) to GeoJSON for display by the TerriaJS client.  If this service is not available, these data formats will not be supported.  However, all the  formats that TerriaJS supports directly  will work just fine.  When configured correctly, it persists blobs of JSON for use in the sharing feature.  If this service is not available, the JSON can be stored in the share URL, instead.  However, this makes for some extremely long URLs.   If these limitations are acceptable, you can run your TerriaMap on virtually any web server by simply copying the TerriaMap  wwwroot  onto the server!  You can also incrementally add these services to your own server, as necessary, by porting the code in  terriajs-server  to your environment.", 
            "title": "Using any web server"
        }, 
        {
            "location": "/deploying/deploying-to-aws/", 
            "text": "Most of our production TerriaJS-based sites are hosted on Amazon Web Services (AWS).  This page describes how to use the automated AWS deployment mechanism available in TerriaMap.  There are, of course, countless other ways to deploy to AWS.\n\n\nPrerequisites\n\n\nawscli\n\n\nDeploying requires a recent version of \nawscli\n. It's recommended to install and maintain this using \npip\n as the Homebrew and Ubuntu packages are quite old.\n\n\npip install awscli\n\n\n\n\nAWS credentials\n\n\nYou must have an \nawscli\n configuration profile (in \n~/.aws/config\n) with a name that matches \nawsProfile\n in \npackage.json\n.  e.g.\n\n\n[profile terria]\naws_access_key_id=YOUR_ACCESS_KEY\naws_secret_access_key=YOUR_SECRET_ACCESS_KEY\n\n\n\n\npackage.json\n\n\nVarious parameters controlling AWS deployment are specified in \npackage.json\n.  They are:\n\n\n\n\nawsProfile\n - The AWS profile to use (see AWS credentials above) when interacting with AWS.\n\n\nawsS3PackagesPath\n - The S3 path to which to copy the deployment .tar.gz.\n\n\nawsRegion\n - The AWS region in which to create resources.\n\n\nawsEc2InstanceType\n - The type of EC2 instance to use.\n\n\nawsEc2ImageId\n - The ID of the EC2 image to use.\n\n\nawsKeyName\n - The name of a key that may be used to SSH to the EC2 instance.\n\n\nawsS3ServerConfigOverridePath\n - The path to a file on S3 containing any overrides to \ndevserverconfig.json\n.\n\n\nawsS3ClientConfigOverridePath\n - The path to a file on S3 containing any overrides to \nwwwroot/config.json\n.\n\n\n\n\nYou can customize these settings by changing \npackage.json\n, or by using \nnpm config\n to override the setting locally, for example;\n\n\nnpm config set terriajs-map:awsProfile myprofilename\n\n\n\n\nstack.json\n\n\nYou will need to modify \ndeploy/aws/stack.json\n to match your environment.  In particular, you will need to change:\n\n\n\n\nParameters.HostedZoneName.Default\n: This is the domain name where a DNS record for the deployment will be created.  \n\n\nSSLCertificateId\n in \nResources.ElasticLoadBalancer.Listeners\n: The SSL certificate to use for HTTPS connections to the deployment.  If you don't have a certificate or don't want to support HTTPS, remove the entire listener with \n\"LoadBalancerPort\": \"443\"\n.\n\n\nterriamap-sharing\n in \nResources.S3Role.Properties.Policies.PolicyDocument.Statement\n: This authorizes the EC2 instances to access an S3 bucket to be used to store JSON blobs for the sharing feature.  You will want to create a bucket for this purpose and add its name here.\n\n\n\n\nDeploy\n\n\nPrior to deploying, please tag the release, e.g.\n\n\ngit tag -a 2016-05-17 -m '2016-05-17 release'\ngit push origin 2016-05-17\n\n\n\n\nDeployment is initiated via \nnpm\n scripts.  A full production deployment may be initiated with:\n\n\nnpm run deploy\n\n\n\n\nOnce the stack starts up, it will be available at \nterriajs-map-2016-05-17.terria.io\n, where \nterriajs-map\n is the name of the project in \npackage.json\n and \n2016-05-17\n is the output of \ngit describe\n (that's why you should tag before starting a deployment).\n\n\nThe following npm scripts are available:\n\n\n\n\ndeploy\n - Removes the \nnode_modules\n directory, runs \nnpm install\n, and launches the \ndeploy-without-reinstall\n script.\n\n\ndeploy-without-reinstall\n - Runs \ngulp clean\n (which removes the \nwwwroot/build\n directory) and \ngulp release\n, and then launches the \ndeploy-current\n script.\n\n\ndeploy-current\n - Gets the two configuration override files specified in package.json from S3, builds a package (.tar.gz), uploads it to S3, and spins up a CloudFormation stack.\n\n\n\n\nThe CloudFormation stack has the following AWS resources:\n\n\n\n\nElastic Load Balancer\n\n\nEC2 Security Group\n\n\nAuto Scaling Group\n\n\nLaunch Configurartion\n\n\nRoute 53 Record Set\n\n\n\n\nInstances in the Auto Scaling group are bootstrapped using the supplied \nuser-data\n file.\n\n\nThe process of starting a new stack takes about 5 minutes but it can take a further 15 minutes for the DNS to propagate.\n\n\nTest stack\n\n\nEach stack is automatically assigned its own URL based on the name of the stack. e.g.\n\n\nhttps://terriajs-map-2016-05-17.terria.io/\n\n\n\n\nUpdate DNS alias\n\n\nOnce you're satisfied the release is working, change the staging environment DNS record to point to the new stack using the Route 53 Console.\n\n\nmap.terria.io -\n terriajs-map-2016-05-17.terria.io\n\n\n\n\nTroubleshooting\n\n\nThe default Mac OS \ntar\n command \ncauses trouble\n. You'll need to replace it with \ngtar\n, eg. using homebrew.", 
            "title": "Deploying to AWS"
        }, 
        {
            "location": "/deploying/deploying-to-aws/#prerequisites", 
            "text": "", 
            "title": "Prerequisites"
        }, 
        {
            "location": "/deploying/deploying-to-aws/#awscli", 
            "text": "Deploying requires a recent version of  awscli . It's recommended to install and maintain this using  pip  as the Homebrew and Ubuntu packages are quite old.  pip install awscli", 
            "title": "awscli"
        }, 
        {
            "location": "/deploying/deploying-to-aws/#aws-credentials", 
            "text": "You must have an  awscli  configuration profile (in  ~/.aws/config ) with a name that matches  awsProfile  in  package.json .  e.g.  [profile terria]\naws_access_key_id=YOUR_ACCESS_KEY\naws_secret_access_key=YOUR_SECRET_ACCESS_KEY", 
            "title": "AWS credentials"
        }, 
        {
            "location": "/deploying/deploying-to-aws/#packagejson", 
            "text": "Various parameters controlling AWS deployment are specified in  package.json .  They are:   awsProfile  - The AWS profile to use (see AWS credentials above) when interacting with AWS.  awsS3PackagesPath  - The S3 path to which to copy the deployment .tar.gz.  awsRegion  - The AWS region in which to create resources.  awsEc2InstanceType  - The type of EC2 instance to use.  awsEc2ImageId  - The ID of the EC2 image to use.  awsKeyName  - The name of a key that may be used to SSH to the EC2 instance.  awsS3ServerConfigOverridePath  - The path to a file on S3 containing any overrides to  devserverconfig.json .  awsS3ClientConfigOverridePath  - The path to a file on S3 containing any overrides to  wwwroot/config.json .   You can customize these settings by changing  package.json , or by using  npm config  to override the setting locally, for example;  npm config set terriajs-map:awsProfile myprofilename", 
            "title": "package.json"
        }, 
        {
            "location": "/deploying/deploying-to-aws/#stackjson", 
            "text": "You will need to modify  deploy/aws/stack.json  to match your environment.  In particular, you will need to change:   Parameters.HostedZoneName.Default : This is the domain name where a DNS record for the deployment will be created.    SSLCertificateId  in  Resources.ElasticLoadBalancer.Listeners : The SSL certificate to use for HTTPS connections to the deployment.  If you don't have a certificate or don't want to support HTTPS, remove the entire listener with  \"LoadBalancerPort\": \"443\" .  terriamap-sharing  in  Resources.S3Role.Properties.Policies.PolicyDocument.Statement : This authorizes the EC2 instances to access an S3 bucket to be used to store JSON blobs for the sharing feature.  You will want to create a bucket for this purpose and add its name here.", 
            "title": "stack.json"
        }, 
        {
            "location": "/deploying/deploying-to-aws/#deploy", 
            "text": "Prior to deploying, please tag the release, e.g.  git tag -a 2016-05-17 -m '2016-05-17 release'\ngit push origin 2016-05-17  Deployment is initiated via  npm  scripts.  A full production deployment may be initiated with:  npm run deploy  Once the stack starts up, it will be available at  terriajs-map-2016-05-17.terria.io , where  terriajs-map  is the name of the project in  package.json  and  2016-05-17  is the output of  git describe  (that's why you should tag before starting a deployment).  The following npm scripts are available:   deploy  - Removes the  node_modules  directory, runs  npm install , and launches the  deploy-without-reinstall  script.  deploy-without-reinstall  - Runs  gulp clean  (which removes the  wwwroot/build  directory) and  gulp release , and then launches the  deploy-current  script.  deploy-current  - Gets the two configuration override files specified in package.json from S3, builds a package (.tar.gz), uploads it to S3, and spins up a CloudFormation stack.   The CloudFormation stack has the following AWS resources:   Elastic Load Balancer  EC2 Security Group  Auto Scaling Group  Launch Configurartion  Route 53 Record Set   Instances in the Auto Scaling group are bootstrapped using the supplied  user-data  file.  The process of starting a new stack takes about 5 minutes but it can take a further 15 minutes for the DNS to propagate.", 
            "title": "Deploy"
        }, 
        {
            "location": "/deploying/deploying-to-aws/#test-stack", 
            "text": "Each stack is automatically assigned its own URL based on the name of the stack. e.g.  https://terriajs-map-2016-05-17.terria.io/", 
            "title": "Test stack"
        }, 
        {
            "location": "/deploying/deploying-to-aws/#update-dns-alias", 
            "text": "Once you're satisfied the release is working, change the staging environment DNS record to point to the new stack using the Route 53 Console.  map.terria.io -  terriajs-map-2016-05-17.terria.io", 
            "title": "Update DNS alias"
        }, 
        {
            "location": "/deploying/deploying-to-aws/#troubleshooting", 
            "text": "The default Mac OS  tar  command  causes trouble . You'll need to replace it with  gtar , eg. using homebrew.", 
            "title": "Troubleshooting"
        }, 
        {
            "location": "/deploying/deploying-with-kubernetes/", 
            "text": "This has been tested on Google Kubernetes Engine - it should work with other cluster types, but if you run into problems open an issue.\n\n\nDeploy a Basic TerriaMap Instance\n\n\nFrom within TerriaMap...\n\n\nkubectl create serviceaccount tiller --namespace kube-system\nkubectl apply -f deploy/kubernetes/rbac-config.yaml\nhelm init --service-account tiller\nhelm upgrade --install -f deploy/helm/example-prod.yml terria deploy/helm/terria\n\n\n\n\nConfig Customization\n\n\nYou can customize TerriaMap through helm by either modifying example-prod or creating your own helm config file. Server config is available at \nterriamap.serverConfig\n, init config at \nterriamap.initConfig\n and client config at \nterriamap.clientConfig\n. Changes that you make will be merged with the default values in \ndeploy/terria/charts/terriamap/values.yaml\n.\n\n\nE.g.\n\n\nglobal:\n  rollingUpdate:\n    maxUnavailable: 1\n  image:\n    tag: \n0.0.1\n\nterriamap:\n  clientConfig:\n    parameters:\n        disclaimer:\n        text: \nThis is a disclaimer\n\n  serverConfig:\n    port: 8080\n  initConfig:\n    camera:\n      north: \n1\n\n      east: \n2\n\n      south: \n3\n\n      west: \n4\n\n\n\n\n\nBuilding Your Own Image\n\n\nYou can build your own TerriaMap image by changing the \nconfig.docker.name\n key in \npackage.json\n, then running \nnpm run docker-build-prod\n.\n\n\nWorking Locally\n\n\nIf you want to run a local version of TerriaMap then you can use \nminikube\n.\n\n\nminikube start\neval $(minikube docker-env)\n\nhelm init\nhelm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator\nhelm repo update\nhelm install --name docker-registry -f deploy/helm/docker-registry.yml stable/docker-registry\nhelm install --name kube-registry-proxy -f deploy/helm/kube-registry-proxy.yml incubator/kube-registry-proxy\n\nnpm run docker-build-local\n\nhelm upgrade --install -f deploy/helm/example-prod.yml terria deploy/helm/terria\n\n\n\n\nThis will set you up with helm on your local minikube instance, install a local docker registry that will be pushed to with \nnpm run docker-build-local\n and then installs a chart for terria that will use that docker image. You can keep running \nnpm run docker-build-local\n and deleting the terria-server pod to update it. Keep in mind that you have to run \nnpm run gulp\n to rebuild each time you redeploy. You can modify or copy \nexample-prod.yml\n to change the config.", 
            "title": "Deploying with Kubernetes"
        }, 
        {
            "location": "/deploying/deploying-with-kubernetes/#deploy-a-basic-terriamap-instance", 
            "text": "From within TerriaMap...  kubectl create serviceaccount tiller --namespace kube-system\nkubectl apply -f deploy/kubernetes/rbac-config.yaml\nhelm init --service-account tiller\nhelm upgrade --install -f deploy/helm/example-prod.yml terria deploy/helm/terria", 
            "title": "Deploy a Basic TerriaMap Instance"
        }, 
        {
            "location": "/deploying/deploying-with-kubernetes/#config-customization", 
            "text": "You can customize TerriaMap through helm by either modifying example-prod or creating your own helm config file. Server config is available at  terriamap.serverConfig , init config at  terriamap.initConfig  and client config at  terriamap.clientConfig . Changes that you make will be merged with the default values in  deploy/terria/charts/terriamap/values.yaml .  E.g.  global:\n  rollingUpdate:\n    maxUnavailable: 1\n  image:\n    tag:  0.0.1 \nterriamap:\n  clientConfig:\n    parameters:\n        disclaimer:\n        text:  This is a disclaimer \n  serverConfig:\n    port: 8080\n  initConfig:\n    camera:\n      north:  1 \n      east:  2 \n      south:  3 \n      west:  4", 
            "title": "Config Customization"
        }, 
        {
            "location": "/deploying/deploying-with-kubernetes/#building-your-own-image", 
            "text": "You can build your own TerriaMap image by changing the  config.docker.name  key in  package.json , then running  npm run docker-build-prod .", 
            "title": "Building Your Own Image"
        }, 
        {
            "location": "/deploying/deploying-with-kubernetes/#working-locally", 
            "text": "If you want to run a local version of TerriaMap then you can use  minikube .  minikube start\neval $(minikube docker-env)\n\nhelm init\nhelm repo add incubator http://storage.googleapis.com/kubernetes-charts-incubator\nhelm repo update\nhelm install --name docker-registry -f deploy/helm/docker-registry.yml stable/docker-registry\nhelm install --name kube-registry-proxy -f deploy/helm/kube-registry-proxy.yml incubator/kube-registry-proxy\n\nnpm run docker-build-local\n\nhelm upgrade --install -f deploy/helm/example-prod.yml terria deploy/helm/terria  This will set you up with helm on your local minikube instance, install a local docker registry that will be pushed to with  npm run docker-build-local  and then installs a chart for terria that will use that docker image. You can keep running  npm run docker-build-local  and deleting the terria-server pod to update it. Keep in mind that you have to run  npm run gulp  to rebuild each time you redeploy. You can modify or copy  example-prod.yml  to change the config.", 
            "title": "Working Locally"
        }, 
        {
            "location": "/deploying/setting-up-a-region-mapping-server/", 
            "text": "Region mapping\n is the process of matching a value in a CSV file to a pre-defined boundary, such as a postcode, local government area or electorate. The allowed boundaries for a given TerriaJS instance are given in a file such as \nwwwroot/data/regionMapping.json\n.\n\n\nThis is the current method to create a new set of boundaries not currently supported by TerriaJS:\n\n\nPrepare the shapefiles\n\n\n\n\nOne shapefile should contain all the polygons. \n\n\n\n\nThere should be a \nFID\n (case-sensitive) attribute, numbering each polygon starting from 0. If no FID attribute is present, use ogr2ogr to add it: \n\n\nogr2ogr -f \"ESRI Shapefile\" precincts-fid.shp precincts.shp -sql 'select FID,* from precincts'\n \n\n\nIf you have several files to process, use a line like this:\n\n\nfor i in GCCSA IARE ILOC IREG SOS SOSR SUA UCL; do ogr2ogr -f \"ESRI Shapefile\" ${i}_2011_AUST_fid.shp ${i}_2011_AUST.shp -sql 'select FID,* from '\"${i}_2011_AUST\"; done\n\n\n\n\n\n\nThere should be an attribute containing the identifiers you wish to match against (eg, for postcode boundaries, a \npostcode\n attribute containing the 4 digit codes themselves).\n\n\n\n\nThe projection should be EPSG:4326 (unprojected lat/long on WGS84).\n\n\n\n\nSet up GeoServer\n\n\n\n\n\n\nInstall GeoServer. The instance used by National Map is on AWS, available at geoserver.nationalmap.nicta.com.au.\n\n\n\n\n\n\nUsing the GeoServer web interface, create a data store of type \nDirectory of spatial files (shapefiles)\n.\n\n\n\n\n\n\nUpload the shapefile (.shp, .shx, .dbf and .qix) into the appropriate directory. For National Map's server, this is \n/mnt/data/region_map/shape_files/\n.\n\n\n\n\n\n\nCreate a style called \nregion_fid\n. Paste the contents of \nthis Gist\n.\n\n\n\n\n\n\nUnder \nLayers \n Add a New Resource\n, find the new shapefile name and click \nPublish\n \n\n\n\n\n\n\nSet these properties:\n\n\n\n\nDeclared SRS: EPSG:4326\n\n\nClick \"Compute from data\" and \"Compute from native bounds\" to set the bounding box.\n\n\nOn the \nPublishing\n page, set \nregion_fid\n as the \nDefault Style\n\n\n\n\nConfigure the regions in your TerriaJS-based map\n\n\nModify \nwwwroot/data/regionMapping.json\n. Add a section like this:\n\n\n    \"SA4\": {\n        \"layerName\":\"region_map:FID_SA4_2011_AUST\",\n        \"server\": \"http://geoserver.nationalmap.nicta.com.au/region_map/ows\",\n        \"regionProp\": \"SA4_CODE11\",\n        \"aliases\": [\"sa4_code\", \"sa4_code\", \"sa4\"],\n        \"description\": \"Statistical Area Level 4\"\n    },\n\n\n\n\n\n\"SA4\"\n: this identifier does not serve any machine-readable purpose outside this file.\n\n\nlayerName\n: the WMS layer of your new regions, including the workspace.\n\n\nserver\n: the URL of your GeoServer, up to and including \n/ows\n.\n\n\nregionProp\n: the name of the attribute containing region identifiers that will be matched against (case-sensitive)\n\n\naliases\n: alias of CSV column header names that will be recognised as matching this kind of feature. Must be lowercase.\n\n\ndescription\n: May be used in GUI elements and error messages.", 
            "title": "Setting Up a Region Mapping Server"
        }, 
        {
            "location": "/deploying/setting-up-a-region-mapping-server/#prepare-the-shapefiles", 
            "text": "One shapefile should contain all the polygons.    There should be a  FID  (case-sensitive) attribute, numbering each polygon starting from 0. If no FID attribute is present, use ogr2ogr to add it:   ogr2ogr -f \"ESRI Shapefile\" precincts-fid.shp precincts.shp -sql 'select FID,* from precincts'    If you have several files to process, use a line like this:  for i in GCCSA IARE ILOC IREG SOS SOSR SUA UCL; do ogr2ogr -f \"ESRI Shapefile\" ${i}_2011_AUST_fid.shp ${i}_2011_AUST.shp -sql 'select FID,* from '\"${i}_2011_AUST\"; done    There should be an attribute containing the identifiers you wish to match against (eg, for postcode boundaries, a  postcode  attribute containing the 4 digit codes themselves).   The projection should be EPSG:4326 (unprojected lat/long on WGS84).", 
            "title": "Prepare the shapefiles"
        }, 
        {
            "location": "/deploying/setting-up-a-region-mapping-server/#set-up-geoserver", 
            "text": "Install GeoServer. The instance used by National Map is on AWS, available at geoserver.nationalmap.nicta.com.au.    Using the GeoServer web interface, create a data store of type  Directory of spatial files (shapefiles) .    Upload the shapefile (.shp, .shx, .dbf and .qix) into the appropriate directory. For National Map's server, this is  /mnt/data/region_map/shape_files/ .    Create a style called  region_fid . Paste the contents of  this Gist .    Under  Layers   Add a New Resource , find the new shapefile name and click  Publish      Set these properties:   Declared SRS: EPSG:4326  Click \"Compute from data\" and \"Compute from native bounds\" to set the bounding box.  On the  Publishing  page, set  region_fid  as the  Default Style", 
            "title": "Set up GeoServer"
        }, 
        {
            "location": "/deploying/setting-up-a-region-mapping-server/#configure-the-regions-in-your-terriajs-based-map", 
            "text": "Modify  wwwroot/data/regionMapping.json . Add a section like this:      \"SA4\": {\n        \"layerName\":\"region_map:FID_SA4_2011_AUST\",\n        \"server\": \"http://geoserver.nationalmap.nicta.com.au/region_map/ows\",\n        \"regionProp\": \"SA4_CODE11\",\n        \"aliases\": [\"sa4_code\", \"sa4_code\", \"sa4\"],\n        \"description\": \"Statistical Area Level 4\"\n    },   \"SA4\" : this identifier does not serve any machine-readable purpose outside this file.  layerName : the WMS layer of your new regions, including the workspace.  server : the URL of your GeoServer, up to and including  /ows .  regionProp : the name of the attribute containing region identifiers that will be matched against (case-sensitive)  aliases : alias of CSV column header names that will be recognised as matching this kind of feature. Must be lowercase.  description : May be used in GUI elements and error messages.", 
            "title": "Configure the regions in your TerriaJS-based map"
        }, 
        {
            "location": "/deploying/setting-up-geoserver/", 
            "text": "Installing Java and Tomcat7\n\n\nOn ubuntu install the java and tomcat7 packages\n\n\nsudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install -y oracle-java7-installer\nsudo apt-get install -y oracle-java7-set-default\n\n\n\n\nCheck that you have the correct java version installed.  It should be 1.7._xx.\n\n\njava -version\n\n\n\n\nNow install Tomcat\n\n\nsudo apt-get install tomcat7\n\n\n\n\nTo check that the server is running properly, open your browser and go to http://localhost:8080.\n\n\nTuning up the Tomcat server\n\n\nEdit the tomcat7 settings file\n\n\nsudo nano /etc/default/tomcat7\n\n\n\n\nMake the following changes to JAVA_OPTS and JAVA_HOME\n\n\nJAVA_OPTS=\n-Djava.awt.headless=true -server -Xmx8384m -Xms2048m -XX:SoftRefLRUPolicyMSPerMB=36000 -XX:MaxPermSize=2048m -XX:+UseParallelGC\n\n\nJAVA_HOME=/usr/lib/jvm/java-7-oracle/jre\n\n\n\n\nAnd restart your tomcat server\n\n\nsudo /etc/init.d/tomcat7 restart\n\n\n\n\nInstalling Geoserver\n\n\nTo install geoserver, go to http://geoserver.org/ and download the current stable web archive file to your home folder, unzip the file and copy geoserver.war to your home folder, and then copy that file to the tomcat installation as the desired name for the geoserver and restart.  For example to create a geoserver called my_new_geoserver use the commands below.\n\n\nsudo cp geoserver.war /var/lib/tomcat7/webapps/my_new_geoserver.war\nsudo /etc/init.d/tomcat7 restart\n\n\n\n\nYou should now be able to see a geoserver running at http://localhost:8080/my_new_geoserver/ .  \n\n\nThe geoserver will contain the example datasets that ship with Geoserver.  Geoserver has good documentation available \nhere\n to get you going on entering your data into your server instance.\n\n\nCaching Tiles\n\n\nIn order for your server to perform effectively we highly recommend that you cache the tile requests from National Map.  There are 2 primary ways to do this - either turning on the GeoWebCache that comes with Geoserver or running a proxy server in front of your geoserver.\n\n\nThe easiest solution is to just use the GeoWebCache service.  The documentation for GeoWebCache is \nhere\n.  Mainly it consists of turning on direct integration in the caching defaults and making sure that your layers have caching turned on.  You may also want to control the caching folder which can be done by editing your geoserver instance as explained \nhere\n.  You will also probably need to set permissions in your new cache folder to 666.\n\n\nThe other solution is to put a caching proxy in front of your geoserver instance.  This also has the benefit of being able to access your server on port 80 if you wish.  The two primary options we have worked with are \nnginx\n and \nvarnish\n.  These are both available as packages on ubuntu.  Below is an example of setting up nginx to work with geoserver.\n\n\nnginx\n\n\nsudo apt-get install -y nginx\n\n\n\n\nThen modify the configuration files to point to your server and turn on caching\n\n\nsudo /etc/init.d/nginx stop\nsudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.orig\nsudo nano /etc/nginx/nginx.conf\n\n\n\n\nand add this line at the bottom of the http section\n\n\nproxy_cache_path /your/cache/folder/ keys_zone=one:10m max_size=8G;\n\n\n\n\nsudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.orig\nsudo nano /etc/nginx/sites-available/default\n\n\n\n\nin the servers section, comment out the root and index lines and add this line right after\n\n\nproxy_cache one;\n\n\n\n\nand replace the location setting in the server section with the following code (replacing my_new_geoserver with your server name)\n\n\n    location /my_new_geoserver/ {\n        proxy_pass http://127.0.0.1:8080/;\n        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;\n            proxy_redirect off;\n            proxy_buffering off;\n            proxy_set_header        Host            $http_host;\n            proxy_set_header        X-Real-IP       $remote_addr;\n            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n    }\n\n\n\n\nNow restart\n\n\nsudo /etc/init.d/nginx start\n\n\n\n\nAnd if all went as planned you should be able to access your server at http://localhost/my_new_geoserver/web.\n\n\nAllowing National Map to access your server\n\n\nDue to security in modern browsers, for National Map to use your service you will probably need to do a little more work.  Either you will need to set up your server with CORS support or provide a proxy service for your geoserver to allow National Map access to your data.  National Map includes a proxy to some domains by default and if you are in these domains we will provide the proxy service.\n\n\nIf you are not in these domains, you will get an cross-domain-access error. To work with National Map without using a proxy, Geoserver must be configured to support \nCORS\n.  The most common way to do this is to install \nCORS Filter\n.\n\n\nAn alternative approach, is to add CORS support to your nginx or varnish proxy service.  See the documentation on how to do this.  Thanks to the AREMI team, adding the necessary CORS headers with a Varnish reverse-proxy in front of the Geoserver can be done by adding the following to \n/etc/varnish/default.vcl\n:\n\n\nsub vcl_fetch {\n    set beresp.http.Access-Control-Allow-Origin = \n*\n;\n    set beresp.http.Access-Control-Allow-Credentials = \ntrue\n;\n}\n\n\n\n\nMoving your Geoserver Instance\n\n\nMoving your geoserver instance to a new location is pretty straightforward.  The .war file that a geoserver instance comes in is just a special layout of a .zip file.  So the following commands can be used to create a .war file that you can then add to a tomcat instance on another server.\n\n\nsudo /etc/init.d/tomcat7 stop\nsudo mv /var/lib/tomcat7/webapps/my_new_geoserver .\ncd my_new_geoserver\nzip -r my_new_geoserver.war *\nsudo mv my_new_geoserver /var/lib/tomcat7/webapps\nsudo /etc/init.d/tomcat7 start\n\n\n\n\nonce it's uploaded to the new site you can add the geoserver with:\n\n\nsudo cp my_new_geoserver.war /var/lib/tomcat7/webapps/my_new_geoserver.war\nsudo /etc/init.d/tomcat7 restart\n\n\n\n\nRunning your Geoserver on AWS\n\n\nRunning a geoserver on a standard EC2 instance requires a little tuning to take advantage of the instance storage volume properly.  First go ahead and create your instance (we use a standard m3.large instance with port 80 opened) and install java and tomcat as explained above.\n\n\nNow package up your geoserver as described in the previous section and copy it up to your EC2 instance and ssh in once it's copied.\n\n\nscp -i geoserver-instance.pem my_new_geoserver.war ubuntu@xx.xx.xx.xx:/home/ubuntu\nssh -i geoserver-instance.pem ubuntu@xx.xx.xx.xx\n\n\n\n\nFrom the shell the first thing you need to do is move the webapps folder in tomcat to the instance storage.\n\n\nsudo /etc/init.d/tomcat7 stop\nsudo cp -rf /var/lib/tomcat7/webapps /var/lib/tomcat7/webapps.orig\nsudo mv /var/lib/tomcat7/webapps/ /mnt\nsudo ln -s /mnt/webapps /var/lib/tomcat7/webapps\n\n\n\n\nand copy your uploaded geoserver\n\n\nsudo cp *.war /mnt/webapps\n\n\n\n\nand then restart\n\n\nsudo /etc/init.d/tomcat7 start\nsudo /etc/init.d/nginx restart\n\n\n\n\nIf you are using geowebcache or a caching proxy you will need to change the caching dir as referenced above to also be on the /mnt drive to avoid running out of space on the EC2 boot drive.\n\n\nNOTE: If the instance is stopped you will need to go through these step again when you start, since the instance storage is wiped clean in this case.  This does not apply to reboot of the OS in the EC2 instance so it will still be fine after.", 
            "title": "Setting Up Geoserver"
        }, 
        {
            "location": "/deploying/setting-up-geoserver/#installing-java-and-tomcat7", 
            "text": "On ubuntu install the java and tomcat7 packages  sudo add-apt-repository ppa:webupd8team/java\nsudo apt-get update\nsudo apt-get install -y oracle-java7-installer\nsudo apt-get install -y oracle-java7-set-default  Check that you have the correct java version installed.  It should be 1.7._xx.  java -version  Now install Tomcat  sudo apt-get install tomcat7  To check that the server is running properly, open your browser and go to http://localhost:8080.", 
            "title": "Installing Java and Tomcat7"
        }, 
        {
            "location": "/deploying/setting-up-geoserver/#tuning-up-the-tomcat-server", 
            "text": "Edit the tomcat7 settings file  sudo nano /etc/default/tomcat7  Make the following changes to JAVA_OPTS and JAVA_HOME  JAVA_OPTS= -Djava.awt.headless=true -server -Xmx8384m -Xms2048m -XX:SoftRefLRUPolicyMSPerMB=36000 -XX:MaxPermSize=2048m -XX:+UseParallelGC \n\nJAVA_HOME=/usr/lib/jvm/java-7-oracle/jre  And restart your tomcat server  sudo /etc/init.d/tomcat7 restart", 
            "title": "Tuning up the Tomcat server"
        }, 
        {
            "location": "/deploying/setting-up-geoserver/#installing-geoserver", 
            "text": "To install geoserver, go to http://geoserver.org/ and download the current stable web archive file to your home folder, unzip the file and copy geoserver.war to your home folder, and then copy that file to the tomcat installation as the desired name for the geoserver and restart.  For example to create a geoserver called my_new_geoserver use the commands below.  sudo cp geoserver.war /var/lib/tomcat7/webapps/my_new_geoserver.war\nsudo /etc/init.d/tomcat7 restart  You should now be able to see a geoserver running at http://localhost:8080/my_new_geoserver/ .    The geoserver will contain the example datasets that ship with Geoserver.  Geoserver has good documentation available  here  to get you going on entering your data into your server instance.", 
            "title": "Installing Geoserver"
        }, 
        {
            "location": "/deploying/setting-up-geoserver/#caching-tiles", 
            "text": "In order for your server to perform effectively we highly recommend that you cache the tile requests from National Map.  There are 2 primary ways to do this - either turning on the GeoWebCache that comes with Geoserver or running a proxy server in front of your geoserver.  The easiest solution is to just use the GeoWebCache service.  The documentation for GeoWebCache is  here .  Mainly it consists of turning on direct integration in the caching defaults and making sure that your layers have caching turned on.  You may also want to control the caching folder which can be done by editing your geoserver instance as explained  here .  You will also probably need to set permissions in your new cache folder to 666.  The other solution is to put a caching proxy in front of your geoserver instance.  This also has the benefit of being able to access your server on port 80 if you wish.  The two primary options we have worked with are  nginx  and  varnish .  These are both available as packages on ubuntu.  Below is an example of setting up nginx to work with geoserver.", 
            "title": "Caching Tiles"
        }, 
        {
            "location": "/deploying/setting-up-geoserver/#nginx", 
            "text": "sudo apt-get install -y nginx  Then modify the configuration files to point to your server and turn on caching  sudo /etc/init.d/nginx stop\nsudo cp /etc/nginx/nginx.conf /etc/nginx/nginx.conf.orig\nsudo nano /etc/nginx/nginx.conf  and add this line at the bottom of the http section  proxy_cache_path /your/cache/folder/ keys_zone=one:10m max_size=8G;  sudo cp /etc/nginx/sites-available/default /etc/nginx/sites-available/default.orig\nsudo nano /etc/nginx/sites-available/default  in the servers section, comment out the root and index lines and add this line right after  proxy_cache one;  and replace the location setting in the server section with the following code (replacing my_new_geoserver with your server name)      location /my_new_geoserver/ {\n        proxy_pass http://127.0.0.1:8080/;\n        proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;\n            proxy_redirect off;\n            proxy_buffering off;\n            proxy_set_header        Host            $http_host;\n            proxy_set_header        X-Real-IP       $remote_addr;\n            proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;\n    }  Now restart  sudo /etc/init.d/nginx start  And if all went as planned you should be able to access your server at http://localhost/my_new_geoserver/web.", 
            "title": "nginx"
        }, 
        {
            "location": "/deploying/setting-up-geoserver/#allowing-national-map-to-access-your-server", 
            "text": "Due to security in modern browsers, for National Map to use your service you will probably need to do a little more work.  Either you will need to set up your server with CORS support or provide a proxy service for your geoserver to allow National Map access to your data.  National Map includes a proxy to some domains by default and if you are in these domains we will provide the proxy service.  If you are not in these domains, you will get an cross-domain-access error. To work with National Map without using a proxy, Geoserver must be configured to support  CORS .  The most common way to do this is to install  CORS Filter .  An alternative approach, is to add CORS support to your nginx or varnish proxy service.  See the documentation on how to do this.  Thanks to the AREMI team, adding the necessary CORS headers with a Varnish reverse-proxy in front of the Geoserver can be done by adding the following to  /etc/varnish/default.vcl :  sub vcl_fetch {\n    set beresp.http.Access-Control-Allow-Origin =  * ;\n    set beresp.http.Access-Control-Allow-Credentials =  true ;\n}", 
            "title": "Allowing National Map to access your server"
        }, 
        {
            "location": "/deploying/setting-up-geoserver/#moving-your-geoserver-instance", 
            "text": "Moving your geoserver instance to a new location is pretty straightforward.  The .war file that a geoserver instance comes in is just a special layout of a .zip file.  So the following commands can be used to create a .war file that you can then add to a tomcat instance on another server.  sudo /etc/init.d/tomcat7 stop\nsudo mv /var/lib/tomcat7/webapps/my_new_geoserver .\ncd my_new_geoserver\nzip -r my_new_geoserver.war *\nsudo mv my_new_geoserver /var/lib/tomcat7/webapps\nsudo /etc/init.d/tomcat7 start  once it's uploaded to the new site you can add the geoserver with:  sudo cp my_new_geoserver.war /var/lib/tomcat7/webapps/my_new_geoserver.war\nsudo /etc/init.d/tomcat7 restart", 
            "title": "Moving your Geoserver Instance"
        }, 
        {
            "location": "/deploying/setting-up-geoserver/#running-your-geoserver-on-aws", 
            "text": "Running a geoserver on a standard EC2 instance requires a little tuning to take advantage of the instance storage volume properly.  First go ahead and create your instance (we use a standard m3.large instance with port 80 opened) and install java and tomcat as explained above.  Now package up your geoserver as described in the previous section and copy it up to your EC2 instance and ssh in once it's copied.  scp -i geoserver-instance.pem my_new_geoserver.war ubuntu@xx.xx.xx.xx:/home/ubuntu\nssh -i geoserver-instance.pem ubuntu@xx.xx.xx.xx  From the shell the first thing you need to do is move the webapps folder in tomcat to the instance storage.  sudo /etc/init.d/tomcat7 stop\nsudo cp -rf /var/lib/tomcat7/webapps /var/lib/tomcat7/webapps.orig\nsudo mv /var/lib/tomcat7/webapps/ /mnt\nsudo ln -s /mnt/webapps /var/lib/tomcat7/webapps  and copy your uploaded geoserver  sudo cp *.war /mnt/webapps  and then restart  sudo /etc/init.d/tomcat7 start\nsudo /etc/init.d/nginx restart  If you are using geowebcache or a caching proxy you will need to change the caching dir as referenced above to also be on the /mnt drive to avoid running out of space on the EC2 boot drive.  NOTE: If the instance is stopped you will need to go through these step again when you start, since the instance storage is wiped clean in this case.  This does not apply to reboot of the OS in the EC2 instance so it will still be fine after.", 
            "title": "Running your Geoserver on AWS"
        }, 
        {
            "location": "/deploying/using-as-a-ckan-previewer/", 
            "text": "CKAN previewer\n\n\nThe CKAN previewer is a plugin for CKAN which uses TerriaJS to preview geospatial content using an iframe. It is provided in the \n/ckanext-cesiumpreview folder of TerriaMap\n.\n\n\nTo create a CKAN installation with docker\n\n\nFollow the instructions in the CKAN documentation \nhere\n\n\nTo create a CKAN installation from source\n\n\nInstall a local instance of CKAN per http://docs.ckan.org/en/ckan-2.0/install-from-source.html\nFollow all the steps :\n\n In step 1 install openjdk-7-jdk instead of openjdk-6-jdk\n\n in step 2c use requirements.txt instead of pip-requirements.txt\n\n In step 3 making 'pass' your password will makes things simpler\n\n Set up the optional Solr install as per step 5 (Single Solr instance)\n\n Step 6 can take a long time.  If it does fail drop the ckan_default database and redo step 3 and try again\n\n You do no need to set up the optional DataStore install as per step 7 \n\n\nTo add local storage of files\n\n\nsudo mkdir -p /var/lib/ckan/default\nsudo chmod 777 /var/lib/ckan/default\n\n\n\nin development.ini under storage settings add\n\n\nnano /etc/ckan/default/development.ini\nckan.storage_path = /var/lib/ckan/default\n\n\n\nAnd to run the server\n\n\n. /usr/lib/ckan/default/bin/activate\ncd /usr/lib/ckan/default/src/ckan\npaster serve /etc/ckan/default/development.ini\n\n\n\nTo install spatial extension for spatial queries and previewers, see http://docs.ckan.org/projects/ckanext-spatial/en/latest/install.html\n\n\nTo make sysadmin account\n\n\npaster sysadmin add admin -c /etc/ckan/default/development.ini\n\n\n\nTo add Cesium Previewer\n\n\nTODO: Update this to use our ckan previewer plugin.  Will require a standalone github be created for the plugin\n\n\npip install -e git+https://github.com/NICTA/nationalmap-preview#egg=cesiumpreviewer\n\n\nMake a virtual link to the viewer in CKAN to the cesiumviewer.\n\n\nln -s ~/nationalmap/ckanext-cesiumpreview/ckanext/cesiumpreview ~/ckan/lib/default/src/ckan/ckanext/cesiumpreview\n\n\n\nIn the CKAN development.ini under storage settings add the plugin\n\n\nnano /etc/ckan/default/development.ini\nckan.plugins = cesium_viewer ...\n\n\n\nThere may be a more automatic way to do this, but I'm just patching files in CKAN to handle the cesium previewer in the same way as the recline previewer.  So first open setup.py for editing.  \n\n\nnano ~/ckan/lib/default/src/ckan/setup.py\n\n\n\nAnd add the following line under the recline_preview plugin entry (line ~76)\n\n\n 'cesium_preview = ckanext.reclinepreview.plugin:CesiumPreview',\n\n\n\nThen patch entry_points.txt\n\n\n  nano ~/ckan/lib/default/src/ckan/ckan.egg-info/entry_points.txt\n\n\n\nAnd add the following line under the recline_preview plugin entry (line ~76)\n\n\n  cesium_preview = ckanext.cesiumpreview.plugin:CesiumPreview\n\n\n\nThat should be it.  The cesium previewer is pointing to the instance at nationalmap.research.nicta.com.au.  If you need to update the cesium_previewer path to a different location then edit the vis_server variable in preview_cesium.js\n\n\n  nano ~/nationalmap/cesiumpreview/theme/public/preview_cesium.js\n\n\n\nIf all went correctly you should be able to start the CKAN server in virtualenv and access the server at http://127.0.0.1:5000/", 
            "title": "Using as a CKAN Previewer"
        }, 
        {
            "location": "/deploying/using-as-a-ckan-previewer/#ckan-previewer", 
            "text": "The CKAN previewer is a plugin for CKAN which uses TerriaJS to preview geospatial content using an iframe. It is provided in the  /ckanext-cesiumpreview folder of TerriaMap .", 
            "title": "CKAN previewer"
        }, 
        {
            "location": "/deploying/using-as-a-ckan-previewer/#to-create-a-ckan-installation-with-docker", 
            "text": "Follow the instructions in the CKAN documentation  here", 
            "title": "To create a CKAN installation with docker"
        }, 
        {
            "location": "/deploying/using-as-a-ckan-previewer/#to-create-a-ckan-installation-from-source", 
            "text": "Install a local instance of CKAN per http://docs.ckan.org/en/ckan-2.0/install-from-source.html\nFollow all the steps :  In step 1 install openjdk-7-jdk instead of openjdk-6-jdk  in step 2c use requirements.txt instead of pip-requirements.txt  In step 3 making 'pass' your password will makes things simpler  Set up the optional Solr install as per step 5 (Single Solr instance)  Step 6 can take a long time.  If it does fail drop the ckan_default database and redo step 3 and try again  You do no need to set up the optional DataStore install as per step 7   To add local storage of files  sudo mkdir -p /var/lib/ckan/default\nsudo chmod 777 /var/lib/ckan/default  in development.ini under storage settings add  nano /etc/ckan/default/development.ini\nckan.storage_path = /var/lib/ckan/default  And to run the server  . /usr/lib/ckan/default/bin/activate\ncd /usr/lib/ckan/default/src/ckan\npaster serve /etc/ckan/default/development.ini  To install spatial extension for spatial queries and previewers, see http://docs.ckan.org/projects/ckanext-spatial/en/latest/install.html", 
            "title": "To create a CKAN installation from source"
        }, 
        {
            "location": "/deploying/using-as-a-ckan-previewer/#to-make-sysadmin-account", 
            "text": "paster sysadmin add admin -c /etc/ckan/default/development.ini", 
            "title": "To make sysadmin account"
        }, 
        {
            "location": "/deploying/using-as-a-ckan-previewer/#to-add-cesium-previewer", 
            "text": "TODO: Update this to use our ckan previewer plugin.  Will require a standalone github be created for the plugin  pip install -e git+https://github.com/NICTA/nationalmap-preview#egg=cesiumpreviewer  Make a virtual link to the viewer in CKAN to the cesiumviewer.  ln -s ~/nationalmap/ckanext-cesiumpreview/ckanext/cesiumpreview ~/ckan/lib/default/src/ckan/ckanext/cesiumpreview  In the CKAN development.ini under storage settings add the plugin  nano /etc/ckan/default/development.ini\nckan.plugins = cesium_viewer ...  There may be a more automatic way to do this, but I'm just patching files in CKAN to handle the cesium previewer in the same way as the recline previewer.  So first open setup.py for editing.    nano ~/ckan/lib/default/src/ckan/setup.py  And add the following line under the recline_preview plugin entry (line ~76)   'cesium_preview = ckanext.reclinepreview.plugin:CesiumPreview',  Then patch entry_points.txt    nano ~/ckan/lib/default/src/ckan/ckan.egg-info/entry_points.txt  And add the following line under the recline_preview plugin entry (line ~76)    cesium_preview = ckanext.cesiumpreview.plugin:CesiumPreview  That should be it.  The cesium previewer is pointing to the instance at nationalmap.research.nicta.com.au.  If you need to update the cesium_previewer path to a different location then edit the vis_server variable in preview_cesium.js    nano ~/nationalmap/cesiumpreview/theme/public/preview_cesium.js  If all went correctly you should be able to start the CKAN server in virtualenv and access the server at http://127.0.0.1:5000/", 
            "title": "To add Cesium Previewer"
        }, 
        {
            "location": "/deploying/controlling-with-url-parameters/", 
            "text": "Many aspects of TerriaJS (and hence TerriaMap, NationalMap, and others) can be configured by the end user by passing URL parameters. Combine them like this:\n\n\n\n\nThe base URL, then a \n#\n\n\nThen the first parameter\n\n\nThen repeatedly: a \n, and the next parameter\n\n\n\n\nFor example: \nhttp://nationalmap.gov.au#test\nmap=2d\n\n\nDisplay parameters\n\n\n\n\n\n\n\n\nParameter\n\n\nMeaning\n\n\n\n\n\n\n\n\n\n\nclean\n\n\nDon't load the default catalog files for this site.\n\n\n\n\n\n\nmap=2d\n\n\nUse the 2D (Leaflet) map, instead of the default.\n\n\n\n\n\n\nmap=3d\n\n\nUse the 3D (Cesium) map, instead of the default.\n\n\n\n\n\n\nmap=3dSmooth\n\n\nUse the 3D (Cesium) map without terrain, instead of the default.\n\n\n\n\n\n\nhideExplorerPanel=1\n\n\nCollapse the catalog (left side) panel, useful for embedding.\n\n\n\n\n\n\nmode=preview\n\n\nOperate in \"preview mode\", which mostly means not showing a warning if the screen is \nsmall\n\n\n\n\n\n\nshare=\n...\n\n\nLoad a map view previously saved using the \"Share\" function with URL shortening.\n\n\n\n\n\n\nstart=\n...\n\n\nLoad a map view previously saved without URL shortening. The argument is a URL-encoded JSON structure defined using an internal format described below.\n\n\n\n\n\n\ninitfile\n\n\nLoad catalog file as described below.\n\n\n\n\n\n\n\n\nCatalog files (init files)\n\n\nAny unrecognised parameter (eg \nfoo\n) is treated as the name of a catalog file, loaded from the directory \nwwwroot/init/foo.json\n). Multiple catalog files can be loaded this way, and will be combined. Later files can override earlier ones.\n\n\nExample: \nhttp://nationalmap.gov.au#test\n\n\nStart data\n\n\nThe \nstart=\n parameter essentially embeds an entire catalog file in the URL. The format is:\n\n\n{\n    \nversion\n: \n0.0.05\n,\n    \ninitSources\n: [\n        \ninit/nm.json\n,\n        \ninit/test.json\n,\n        ...\n        {\n            \ncatalog\n: [\n            ...\n            ]\n        },\n        {\n            \ninitialCamera\n: {\n                \nwest\n: \nlon\n,\n                \nsouth\n: \nlat\n,\n                \neast\n: \nlon\n,\n                \nnorth\n: \nlat\n,\n                \nposition\n: {\n                    \nx\n: ...,\n                    \ny\n: ...,\n                    \nz\n: ...\n                },\n                \ndirection\n: {\n                    \nx\n: ...,\n                    \ny\n: ...,\n                    \nz\n: ...\n                },\n                \nup\n: {\n                    \nx\n: ...,\n                    \ny\n: ...,\n                    \nz\n: ...\n                }\n            },\n            \nhomeCamera\n: {\n                \nwest\n: ...,\n                \nsouth\n: ...,\n                \neast\n: ...,\n                \nnorth\n: -...\n            },\n            \nbaseMapName\n: \nPositron (Light)\n,\n            \nviewerMode\n: \n3d\n\n        }\n    ]\n    }\n}\n\n\n\n\nThe exact structure changes as features are added. The best way to understand it is:\n\n\n\n\nAdjust the view as desired\n\n\nGenerate a share link\n\n\nURL-decode the share link (using a tool \nsuch as this\n).", 
            "title": "Controlling with URL Parameters"
        }, 
        {
            "location": "/deploying/controlling-with-url-parameters/#display-parameters", 
            "text": "Parameter  Meaning      clean  Don't load the default catalog files for this site.    map=2d  Use the 2D (Leaflet) map, instead of the default.    map=3d  Use the 3D (Cesium) map, instead of the default.    map=3dSmooth  Use the 3D (Cesium) map without terrain, instead of the default.    hideExplorerPanel=1  Collapse the catalog (left side) panel, useful for embedding.    mode=preview  Operate in \"preview mode\", which mostly means not showing a warning if the screen is  small    share= ...  Load a map view previously saved using the \"Share\" function with URL shortening.    start= ...  Load a map view previously saved without URL shortening. The argument is a URL-encoded JSON structure defined using an internal format described below.    initfile  Load catalog file as described below.", 
            "title": "Display parameters"
        }, 
        {
            "location": "/deploying/controlling-with-url-parameters/#catalog-files-init-files", 
            "text": "Any unrecognised parameter (eg  foo ) is treated as the name of a catalog file, loaded from the directory  wwwroot/init/foo.json ). Multiple catalog files can be loaded this way, and will be combined. Later files can override earlier ones.  Example:  http://nationalmap.gov.au#test", 
            "title": "Catalog files (init files)"
        }, 
        {
            "location": "/deploying/controlling-with-url-parameters/#start-data", 
            "text": "The  start=  parameter essentially embeds an entire catalog file in the URL. The format is:  {\n     version :  0.0.05 ,\n     initSources : [\n         init/nm.json ,\n         init/test.json ,\n        ...\n        {\n             catalog : [\n            ...\n            ]\n        },\n        {\n             initialCamera : {\n                 west :  lon ,\n                 south :  lat ,\n                 east :  lon ,\n                 north :  lat ,\n                 position : {\n                     x : ...,\n                     y : ...,\n                     z : ...\n                },\n                 direction : {\n                     x : ...,\n                     y : ...,\n                     z : ...\n                },\n                 up : {\n                     x : ...,\n                     y : ...,\n                     z : ...\n                }\n            },\n             homeCamera : {\n                 west : ...,\n                 south : ...,\n                 east : ...,\n                 north : -...\n            },\n             baseMapName :  Positron (Light) ,\n             viewerMode :  3d \n        }\n    ]\n    }\n}  The exact structure changes as features are added. The best way to understand it is:   Adjust the view as desired  Generate a share link  URL-decode the share link (using a tool  such as this ).", 
            "title": "Start data"
        }, 
        {
            "location": "/deploying/controlling-in-an-iframe-or-popup/", 
            "text": "TerriaJS can be configured to accept messages posted to it by its parent window.  This is useful when embedding a TerriaJS app in an iframe and when the parent wants to send more data to the embedded app than can be reasonably included in a URL.\n\n\nClick \nhere\n to see a demo, which also sizes the iframe to fill the available space.\n\n\nFirst, the TerriaJS app must include a line like this:\n\n\nupdateApplicationOnMessageFromParentWindow(terria, window);\n\n\n\n\nThen, the parent window can send messages like this:\n\n\n!DOCTYPE html\n\n\nhtml lang=\nen\n\n\nhead\n\n    \nmeta charset=\nutf-8\n\n    \ntitle\nNationalMap Embed Test\n/title\n\n\n/head\n\n\n\nbody\n\n    \niframe id=\nembeddedNationalMap\n src=\nhttp://nationalmap.gov.au\n width=\n1024\n height=\n768\n/iframe\n\n\n    \nscript type=\ntext/javascript\n\n        window.addEventListener('message', function(e) {\n            var iframeWindow = document.getElementById('embeddedNationalMap').contentWindow;\n            if (e.source === iframeWindow \n e.data === 'ready') {\n                // NationalMap is ready to receive messages!\n                iframeWindow.postMessage({\n                    initSources: [\n                        {\n                            initialCamera: {\n                                \nnorth\n: -33.827,\n                                \neast\n: 151.249,\n                                \nsouth\n: -33.907,\n                                \nwest\n: 151.165\n                            },\n                            catalog: [\n                                {\n                                    type: \ngroup\n,\n                                    name: \nFoo\n,\n                                    isPromoted: true,\n                                    isOpen: true,\n                                    items: [\n                                        {\n                                            type: \ncsv\n,\n                                            name: \nMy Data\n,\n                                            data: \nPOA,Some Value\\n2000,1\\n2205,2\n,\n                                            isEnabled: true\n                                        }\n                                    ]\n                                }\n                            ]\n                        }\n                    ]\n                }, 'http://nationalmap.gov.au');\n            }\n        });\n    \n/script\n\n\n/body\n\n\n/html\n\n\n\n\n\nNotice that parent is creating a CSV catalog item with embedded data.  The CSV is only two lines in this case, but in a real application it could be large, much larger than could fit in a URL.", 
            "title": "Controlling in an &lt;iframe&gt; or Popup"
        }, 
        {
            "location": "/contributing/", 
            "text": "We're thrilled to have you as a contributor!  This section explains how to set up a development environment for modifying TerriaJS, and how to use that modified version in a TerriaMap.  It also has suggestions for contributing.\n\n\nFor all contributors:\n\n\n\n\nSetting up a development environment\n\n\nArchitectural Overview\n: The big picture of TerriaJS's architecture.\n\n\nCONTRIBUTING.md\n: how to submit a pull request. Please read! :)\n\n\n\n\nSpecial cases:\n\n\n\n\nSetting up Saucelabs\n: Creating a local Saucelabs instance for cross-browser testing.\n\n\nUsing a Custom Version of Cesium", 
            "title": "Overview"
        }, 
        {
            "location": "/contributing/development-environment/", 
            "text": "First, read \nGetting Started\n.\n\n\nBuilding a TerriaMap against a modified TerriaJS\n\n\nWhat if you need to make changes to \nTerriaJS\n while working on a site that depends on it?\n\n\nIn the process described in \nGetting Started\n, the \nTerriaJS package\n is installed to the \nnode_modules\n directory by \nnpm install\n.  Please do not edit TerriaJS directly in the \nnode_modules\n directory, because changes will be clobbered the next time you run \nnpm install\n.\n\n\nInstead, we want to clone TerriaJS from its \nGitHub repo\n and use that in our TerriaMap build.  Traditionally, \nnpm link\n is the way to do this.  However, we do not recommend use of \nnpm link\n because it frequently leads to multiple copies of some libraries being installed, which in turn leads to all sorts of frustrating build problems.  Instead, we recommend \nyarn\n and its \nworkspaces\n feature.  \nyarn\n workspaces let us safely clone a git repo into the \npackages\n directory and wire it into any other packages that use it.\n\n\nFirst, install \nyarn\n globally:\n\n\nnpm install -g yarn\n\n\n\n\nIf you already have yarn installed, make sure it is at least v1.0 (we recommend using the latest version).  Older versions do not support the workspace feature.\n\n\nThen, enable workspaces by editing the TerriaMap \npackage.json\n file, adding these lines to the top, just after the opening \n{\n:\n\n\n  \nprivate\n: true,\n  \nworkspaces\n: [\n    \npackages/*\n\n  ],\n\n\n\n\nDo \nnot\n commit this change.\n\n\nNow, you can clone any package (such as \nterriajs\n or \nterriajs-cesium\n) into the \npackages\n directory:\n\n\nmkdir packages\ncd packages\ngit clone https://github.com/TerriaJS/terriajs.git\ncd ..\n\n\n\n\nThis will give you the \nmaster\n branch of TerriaJS.  While we strive to keep \nmaster\n stable and usable at all times, you must be aware that \nmaster\n is less tested than actual releases, and it may not be commpatible with the \nmaster\n branch of TerriaMap.  So, you may want to check out the actual version of TerriaJS that you're using before you start making changes.  To do that:\n\n\ngrep terriajs package.json\n# will print something like: \nterriajs\n: \n^4.5.0\n\ncd packages/terriajs\ngit checkout 4.5.0\ncd ..\n\n\n\n\n\n\nNote\n\n\nThe version of TerriaJS in your \npackages/terriajs\n directory must be semver-compatible with the version specification in TerriaMap's \npackage.json\n. If it's not, yarn will install a separate semver-compatible version of TerriaJS in \nnode_modules\n instead of using the one you've put in \npackages/terriajs\n. The version numbers are \nusually\n already aligned, but if not, change the \n\"terriajs\": \"x.y.z\"\n dependency in TerriaMap's \npackage.json\n to be the exact \n\"version\"\n property in TerriaJS's \npackage.json\n. You will generally not want to commit this change.\n\n\n\n\nThen, in the TerriaMap directory, run:\n\n\nyarn install\n\n\n\n\nYarn will:\n\n\n\n\nInstall all dependencies for both TerriaMap and any packages in your \npackages\n directory.\n\n\nInstall the \ndevDependencies\n for packages in the \npackages\n directory so you can actually develop on them.\n\n\nCreate sym-links so that everything works.\n\n\nDe-duplicate semver-compatible packages and bubble them up to the root \nnode_modules\n directory.\n\n\n\n\nNow, we can edit TerriaJS in \npackages/terriajs\n with the benefit of a full-featured git repo.\n\n\nConfirm that yarn has configured TerriaMap to use the copy of TerriaJS in \npackages/terriajs\n by verifying that \nnode_modules/terriajs\n is a symlink to \npackages/terriajs\n.  If it's not, you probably have a version conflict.  See the note above.\n\n\n\n\nNote\n\n\nRunning \nyarn install\n with workspaces configured will change \nyarn.lock\n.  Please do not commit the changes.\n\n\n\n\nTo switch TerriaMap back to using the npm version of TerriaJS (instead of the git repo), do:\n\n\n# warning: make sure you don't need any of your changes to TerriaJS first!\nrm -rf packages/terriajs\nyarn install\n\n\n\n\nCommitting modifications\n\n\nIf you make changes to TerriaJS and TerriaMap together, here's the process for getting them to production.\n\n\nFirst, commit your TerriaJS changes to a branch and open a pull request to merge that branch to master. Simultaneously, you may want to make a branch of TerriaMap that uses your modified version of TerriaJS.  To do that, modify TerriaMap's \npackage.json\n.  Where it has a line like:\n\n\nterriajs\n: \n^4.5.0\n,\n\n\n\n\nChange it to:\n\n\nterriajs\n: \ngit://github.com/TerriaJS/terriajs.git#branchName\n,\n\n\n\n\nReplace \nbranchName\n with the name of the TerriaJS branch you want to use.  You may even use a repository other than \nTerriaJS/terriajs\n if your branch is in a fork of TerriaJS instead of in the official repository.\n\n\nOnce your TerriaJS pull request has been merged and a new version of the \nterriajs\n npm module has been published, please remember to update \npackage.json\n to point to an official \nterriajs\n version instead of a branch in a GitHub repo.\n\n\nThe \npackage.json\n in the \nmaster\n branch of TerriaMap should point to official releases of \nterriajs\n on npm, NOT GitHub branches.  In other words, it is ok to commit a package.json with a git URL to a branch, but do \nnot\n merge it to master.\n\n\nDocumentation\n\n\nDocumentation is automatically generated from the source via JSDoc (reference) and MkDocs (user guide) by running:\n\n\nnpm run gulp docs\n\n\n\n\nIt will be placed in the \nwwwroot/doc\n folder.\n\n\nYou need a standalone install of MkDocs and the \nmkdocs-material\n theme in order to build the user guide. Install these by running:\n\n\npip install -r doc/requirements.txt\n\n\n\n\nTests / Specs\n\n\nWe use \nJasmine\n for the TerriaJS tests, called specs in Jasmine parlance.  To run the specs, you first need to build them by running this in the TerriaJS  (not TerriaMap!) directory:\n\n\nnpm run gulp\n\n\n\n\nAnd start the development web server by running (also from the TerriaJS and not TerriaMap! directory):\n\n\nnpm start\n\n\n\n\nThe test suite is run by opening a web browser on \nhttp://localhost:3002/SpecRunner.html\n.  The source code for the specs is found in the \ntest/\n directory.\n\n\nTerriaJS Gulp Tasks\n\n\nRun any of these tasks with \nnpm run gulp \ntask name\n from within the TerriaJS directory:\n\n\n\n\ndefault - Invoked by running gulp without any arguments, this task invokes the \nbuild\n and \nlint\n tasks.\n\n\nbuild\n - Builds a non-minified version of the TerriaJS tests.  This task may take 10 seconds or more, which is the main reason for the next task.\n\n\nwatch\n - Starts the same as \nbuild\n but then it stays running and watches for changes to any TerriaJS or Cesium source file that was pulled in to the build. When a change to any of these files is detected, a fast incremental build is automatically kicked off.  The incremental build is much faster than the full rebuild because dependencies between source files are cached.\n\n\nrelease\n - The same as \nbuild\n except that it also minifies the build tests.\n\n\nlint\n - Runs ESLint on the files in the \nlib\n folder and reports any problems.  The ESLint rules are defined in the \n.eslintrc\n file in the root directory of TerriaJS.  A stricter set of rules is also find in the \n.eslintrc\n file in \nlib/ReactViews\n.\n\n\ndocs\n - Generates the user guide and reference documentation.  The user guide is served at \nhttp://localhost:3002/doc/guide/\n and the reference documentation is at \nhttp://localhost:3002/doc/reference/\n.\n\n\nmake-schema\n - Generates \nJSON Schema\n for the TerriaJS \nInitialization Files\n from the source code.  The schema is written to \nwwwroot/schema\n.\n\n\ntest\n - Detects browsers available on the local system and launches the test suite in each.  The results are reported on the command line.\n\n\ntest-electron\n - Runs the tests in Electron, a headless (no UI) Chrome-like browser.\n\n\ntest-saucelabs\n - Runs the tests on a bunch of browsers on \nSauce Labs\n.  You will need to \nSet up Sauce Labs\n.\n\n\ntest-browserstack\n - Runs the tests on a bunch of browsers on \nBrowserStack\n.  You will need to set up a BrowserStack account.\n\n\n\n\nSee \ngulpfile.js\n for more gulp tasks.\n\n\nTerriaMap Gulp Tasks\n\n\nRun any of these tasks with \nnpm run gulp \ntask name\n from within the TerriaMap directory:\n\n\n\n\ndefault - Invoked by running gulp without any arguments, this task invokes the \nbuild\n and \nlint\n tasks.\n\n\nbuild\n - Builds a non-minified version of TerriaMap, TerriaJS, Cesium, and all other dependencies, together in one JS file (called \nwwwroot/build/TerriaMap.js\n). Only the parts of TerriaJS and Cesium that we use (directly or indirectly) are pulled in.  Web Workers, CSS, and other resources are also built by this task.  This task may take 10 seconds or more, which is the main reason for the next task.\n\n\nwatch\n - Starts the same as \nbuild\n but then it stays running and watches for changes to any TerriaMap, TerriaJS, or Cesium resource. When a change to any of these files is detected, a fast incremental build is automatically kicked off.  The incremental build is much faster than the full rebuild because dependencies between source files are cached.\n\n\nrelease\n - The same as \nbuild\n except that it also minifies the built JavaScript files.  This task should be used when building for production.\n\n\nlint\n - Runs ESLint on \nindex.js\n and the files in the \nlib\n folder and reports any problems.  The ESLint rules are defined in the \n.eslintrc\n file in the root directory of TerriaMap.\n\n\nmake-package\n - Creates a \n.tar.gz\n package in \ndeploy/packages\n from the current build.  This package can be copied to another machine to run the application there.  The arguments are:\n\n\n\n\n\n\n\n\n\n\nArgument\n\n\nDescription\n\n\n\n\n\n\n\n\n\n\n--packageName \nname\n\n\nThe name of the package.  If not specified, the name is \nnpm_package_name\n-\ngit_describe\n, where \nnpm_package_name\n is the value of the \nnpm_package_name\n environment variable and \ngit_describe\n is the output of running \ngit describe\n.  If you invoke this task using \nnpm run gulp make-package\n instead of simply \ngulp make-package\n, the \nnpm_package_name\n environment variable will be automatically set to the name of the project in \npackage.json\n.\n\n\n\n\n\n\n--serverConfigOverride \nfile\n\n\nThe path to a file with overrides of the \ndevserverconfig.json\n file.  If not specified, \ndevserverconfig.json\n is used unmodified.\n\n\n\n\n\n\n--clientConfigOverride \nfile\n\n\nThe path to a file with overrides of the \nwwwroot/config.json\n file.  If not specified, \nwwwroot/config.json\n is used unmodified.\n\n\n\n\n\n\n\n\n\n\nclean\n - Removes the \nwwwroot/build\n directory.\n\n\nsync-terriajs-dependencies\n - For all npm packages used by both TerriaMap and TerriaJS, updates TerriaMap's \npackage.json\n to use the same version as TerriaJS.  This avoids build problems (errors, hangs) caused by package version conflicts.", 
            "title": "Development Environment"
        }, 
        {
            "location": "/contributing/development-environment/#building-a-terriamap-against-a-modified-terriajs", 
            "text": "What if you need to make changes to  TerriaJS  while working on a site that depends on it?  In the process described in  Getting Started , the  TerriaJS package  is installed to the  node_modules  directory by  npm install .  Please do not edit TerriaJS directly in the  node_modules  directory, because changes will be clobbered the next time you run  npm install .  Instead, we want to clone TerriaJS from its  GitHub repo  and use that in our TerriaMap build.  Traditionally,  npm link  is the way to do this.  However, we do not recommend use of  npm link  because it frequently leads to multiple copies of some libraries being installed, which in turn leads to all sorts of frustrating build problems.  Instead, we recommend  yarn  and its  workspaces  feature.   yarn  workspaces let us safely clone a git repo into the  packages  directory and wire it into any other packages that use it.  First, install  yarn  globally:  npm install -g yarn  If you already have yarn installed, make sure it is at least v1.0 (we recommend using the latest version).  Older versions do not support the workspace feature.  Then, enable workspaces by editing the TerriaMap  package.json  file, adding these lines to the top, just after the opening  { :     private : true,\n   workspaces : [\n     packages/* \n  ],  Do  not  commit this change.  Now, you can clone any package (such as  terriajs  or  terriajs-cesium ) into the  packages  directory:  mkdir packages\ncd packages\ngit clone https://github.com/TerriaJS/terriajs.git\ncd ..  This will give you the  master  branch of TerriaJS.  While we strive to keep  master  stable and usable at all times, you must be aware that  master  is less tested than actual releases, and it may not be commpatible with the  master  branch of TerriaMap.  So, you may want to check out the actual version of TerriaJS that you're using before you start making changes.  To do that:  grep terriajs package.json\n# will print something like:  terriajs :  ^4.5.0 \ncd packages/terriajs\ngit checkout 4.5.0\ncd ..   Note  The version of TerriaJS in your  packages/terriajs  directory must be semver-compatible with the version specification in TerriaMap's  package.json . If it's not, yarn will install a separate semver-compatible version of TerriaJS in  node_modules  instead of using the one you've put in  packages/terriajs . The version numbers are  usually  already aligned, but if not, change the  \"terriajs\": \"x.y.z\"  dependency in TerriaMap's  package.json  to be the exact  \"version\"  property in TerriaJS's  package.json . You will generally not want to commit this change.   Then, in the TerriaMap directory, run:  yarn install  Yarn will:   Install all dependencies for both TerriaMap and any packages in your  packages  directory.  Install the  devDependencies  for packages in the  packages  directory so you can actually develop on them.  Create sym-links so that everything works.  De-duplicate semver-compatible packages and bubble them up to the root  node_modules  directory.   Now, we can edit TerriaJS in  packages/terriajs  with the benefit of a full-featured git repo.  Confirm that yarn has configured TerriaMap to use the copy of TerriaJS in  packages/terriajs  by verifying that  node_modules/terriajs  is a symlink to  packages/terriajs .  If it's not, you probably have a version conflict.  See the note above.   Note  Running  yarn install  with workspaces configured will change  yarn.lock .  Please do not commit the changes.   To switch TerriaMap back to using the npm version of TerriaJS (instead of the git repo), do:  # warning: make sure you don't need any of your changes to TerriaJS first!\nrm -rf packages/terriajs\nyarn install", 
            "title": "Building a TerriaMap against a modified TerriaJS"
        }, 
        {
            "location": "/contributing/development-environment/#committing-modifications", 
            "text": "If you make changes to TerriaJS and TerriaMap together, here's the process for getting them to production.  First, commit your TerriaJS changes to a branch and open a pull request to merge that branch to master. Simultaneously, you may want to make a branch of TerriaMap that uses your modified version of TerriaJS.  To do that, modify TerriaMap's  package.json .  Where it has a line like:  terriajs :  ^4.5.0 ,  Change it to:  terriajs :  git://github.com/TerriaJS/terriajs.git#branchName ,  Replace  branchName  with the name of the TerriaJS branch you want to use.  You may even use a repository other than  TerriaJS/terriajs  if your branch is in a fork of TerriaJS instead of in the official repository.  Once your TerriaJS pull request has been merged and a new version of the  terriajs  npm module has been published, please remember to update  package.json  to point to an official  terriajs  version instead of a branch in a GitHub repo.  The  package.json  in the  master  branch of TerriaMap should point to official releases of  terriajs  on npm, NOT GitHub branches.  In other words, it is ok to commit a package.json with a git URL to a branch, but do  not  merge it to master.", 
            "title": "Committing modifications"
        }, 
        {
            "location": "/contributing/development-environment/#documentation", 
            "text": "Documentation is automatically generated from the source via JSDoc (reference) and MkDocs (user guide) by running:  npm run gulp docs  It will be placed in the  wwwroot/doc  folder.  You need a standalone install of MkDocs and the  mkdocs-material  theme in order to build the user guide. Install these by running:  pip install -r doc/requirements.txt", 
            "title": "Documentation"
        }, 
        {
            "location": "/contributing/development-environment/#tests-specs", 
            "text": "We use  Jasmine  for the TerriaJS tests, called specs in Jasmine parlance.  To run the specs, you first need to build them by running this in the TerriaJS  (not TerriaMap!) directory:  npm run gulp  And start the development web server by running (also from the TerriaJS and not TerriaMap! directory):  npm start  The test suite is run by opening a web browser on  http://localhost:3002/SpecRunner.html .  The source code for the specs is found in the  test/  directory.", 
            "title": "Tests / Specs"
        }, 
        {
            "location": "/contributing/development-environment/#terriajs-gulp-tasks", 
            "text": "Run any of these tasks with  npm run gulp  task name  from within the TerriaJS directory:   default - Invoked by running gulp without any arguments, this task invokes the  build  and  lint  tasks.  build  - Builds a non-minified version of the TerriaJS tests.  This task may take 10 seconds or more, which is the main reason for the next task.  watch  - Starts the same as  build  but then it stays running and watches for changes to any TerriaJS or Cesium source file that was pulled in to the build. When a change to any of these files is detected, a fast incremental build is automatically kicked off.  The incremental build is much faster than the full rebuild because dependencies between source files are cached.  release  - The same as  build  except that it also minifies the build tests.  lint  - Runs ESLint on the files in the  lib  folder and reports any problems.  The ESLint rules are defined in the  .eslintrc  file in the root directory of TerriaJS.  A stricter set of rules is also find in the  .eslintrc  file in  lib/ReactViews .  docs  - Generates the user guide and reference documentation.  The user guide is served at  http://localhost:3002/doc/guide/  and the reference documentation is at  http://localhost:3002/doc/reference/ .  make-schema  - Generates  JSON Schema  for the TerriaJS  Initialization Files  from the source code.  The schema is written to  wwwroot/schema .  test  - Detects browsers available on the local system and launches the test suite in each.  The results are reported on the command line.  test-electron  - Runs the tests in Electron, a headless (no UI) Chrome-like browser.  test-saucelabs  - Runs the tests on a bunch of browsers on  Sauce Labs .  You will need to  Set up Sauce Labs .  test-browserstack  - Runs the tests on a bunch of browsers on  BrowserStack .  You will need to set up a BrowserStack account.   See  gulpfile.js  for more gulp tasks.", 
            "title": "TerriaJS Gulp Tasks"
        }, 
        {
            "location": "/contributing/development-environment/#terriamap-gulp-tasks", 
            "text": "Run any of these tasks with  npm run gulp  task name  from within the TerriaMap directory:   default - Invoked by running gulp without any arguments, this task invokes the  build  and  lint  tasks.  build  - Builds a non-minified version of TerriaMap, TerriaJS, Cesium, and all other dependencies, together in one JS file (called  wwwroot/build/TerriaMap.js ). Only the parts of TerriaJS and Cesium that we use (directly or indirectly) are pulled in.  Web Workers, CSS, and other resources are also built by this task.  This task may take 10 seconds or more, which is the main reason for the next task.  watch  - Starts the same as  build  but then it stays running and watches for changes to any TerriaMap, TerriaJS, or Cesium resource. When a change to any of these files is detected, a fast incremental build is automatically kicked off.  The incremental build is much faster than the full rebuild because dependencies between source files are cached.  release  - The same as  build  except that it also minifies the built JavaScript files.  This task should be used when building for production.  lint  - Runs ESLint on  index.js  and the files in the  lib  folder and reports any problems.  The ESLint rules are defined in the  .eslintrc  file in the root directory of TerriaMap.  make-package  - Creates a  .tar.gz  package in  deploy/packages  from the current build.  This package can be copied to another machine to run the application there.  The arguments are:      Argument  Description      --packageName  name  The name of the package.  If not specified, the name is  npm_package_name - git_describe , where  npm_package_name  is the value of the  npm_package_name  environment variable and  git_describe  is the output of running  git describe .  If you invoke this task using  npm run gulp make-package  instead of simply  gulp make-package , the  npm_package_name  environment variable will be automatically set to the name of the project in  package.json .    --serverConfigOverride  file  The path to a file with overrides of the  devserverconfig.json  file.  If not specified,  devserverconfig.json  is used unmodified.    --clientConfigOverride  file  The path to a file with overrides of the  wwwroot/config.json  file.  If not specified,  wwwroot/config.json  is used unmodified.      clean  - Removes the  wwwroot/build  directory.  sync-terriajs-dependencies  - For all npm packages used by both TerriaMap and TerriaJS, updates TerriaMap's  package.json  to use the same version as TerriaJS.  This avoids build problems (errors, hangs) caused by package version conflicts.", 
            "title": "TerriaMap Gulp Tasks"
        }, 
        {
            "location": "/contributing/architecture/", 
            "text": "TerriaJS is usually used in a single-page web application to provide mapping and catalog exploration capabilities.  It is written in ECMAScript (JavaScript) 2015+ and compiled to ECMAScript 5 in order to run in any relatively modern web browser, including Internet Explorer 9 or later.  Some features, such as 3D and vector tile region mapping, require more recent browsers, but TerriaJS can be expected to degrade gracefully in older browsers by disabling unsupported features or informing the user of the limitations of their browser. \n\n\nLayers\n\n\nTerriaJS has a number of subdirectories of the \nlib\n directory, each of which corresponds to a conceptual layer in the design of TerriaJS.  The layers are:\n\n\n\n\n\n\n\n\nName\n\n\nPurpose\n\n\n\n\n\n\n\n\n\n\nThirdParty\n\n\nThis directory contains third-party code that is not available via npm packages for whatever reason.\n\n\n\n\n\n\nCore\n\n\nLow-level utility classes and functions that don't depend on a UI toolkit (i.e. React) or a mapping library (i.e. Cesium or Leaflet).\n\n\n\n\n\n\nMap\n\n\nClasses and functions to work with or extend a mapping library (i.e. Cesium or Leaflet). This layer should not depend on a particular UI toolkit (i.e. React).\n\n\n\n\n\n\nCharts\n\n\nSimilar to the \nMap\n layer, except for charting instead of mapping.  This depends on the charting library (D3) but not on React.\n\n\n\n\n\n\nModels\n\n\nThis is heart of TerriaJS.  Classes and functions in this layer know how to interface with catalog servers, map servers, and geospatial data formats.  Most of the logic of a TerriaJS application is found in this layer.  However, it does \nnot\n depend on React.\n\n\n\n\n\n\nViewModels and ReactViewModels\n\n\nContains classes and functions that are closely associated with the UI but cannot be described as React components or views.  These two directories are separate mostly for historical reasons; there is little practical difference between them.\n\n\n\n\n\n\nReactViews\n\n\nThis is the React-based user interface of TerriaJS.  All of the React components are found in this layer.\n\n\n\n\n\n\n\n\nUser interface\n\n\nTerriaJS uses the \nReact\n library as the basis for its user interface.  The top-level entry point is \nStandardUserInterface.jsx\n.  It is expected that most applications will use this standard user interface, but a sophisticated TerriaJS application could use its own version instead in order to allow extreme customization of the interface.\n\n\nFor styling, we use \nSass\n in CSS modules loaded via the Webpack \ncss-loader\n, meaning that each React component imports its own local CSS styles from a \n.scss\n file.\n\n\nThe user interface is meant to be a thin layer with minimal domain-specific logic.  Ideally, all domain-specific logic would reside in the \nModels\n layer or perhaps in the \nViewModels\n layer.  This approach allows the UI to be replaced (including by a user of TerriaJS rather than its developers) without needing to re-implement large chunks of TerriaJS logic.  In fact, the entire user interface can be viewed as optional.  A TerriaJS-based application could replace it with its own custom UI.\n\n\nObservables and ObserveModelMixin\n\n\nVirtually all TerriaJS state is stored in instances of classes in the \nModels\n and \nViewModels\n layers.  Many changes to this state are initiated by actions in the user interface.  For example, the user clicks an \nAdd to Map\n button and a number of state changes take place that eventually cause the catalog item to appear on the map.\n\n\nSome changes, however, come from elsewhere.  For example, when the user drags a JSON catalog file onto the map, this may cause any number of changes to objects in the \nModels\n layer.  In addition, the \nModels\n layer itself is usable as an API for TerriaJS.  Developers can add custom user interface components or other functionality that manipulate the objects in the \nModels\n layer.  It's important that the user interface update to reflect the new state, whether the state change was initiated by the core TerriaJS UI or not.\n\n\nTo that end, most of the properties of objects in the \nModels\n and \nViewModels\n layers are observable.  Near the bottom of the constructor of most model objects (\nUrlTemplateCatalogItem\n for example), you'll see a line like this:\n\n\nknockout.track(this, ['minimumLevel', 'maximumLevel', 'attribution', 'subdomains', 'tileDiscardPolicy']);\n\n\n\n\nknockout.track\n transforms each of the named properties on the given object (\nthis\n in this case) into an observable property.  A Knockout observable property is just like a normal property; you can get and set its value as normal.  On top of that, however, an observable property raises an event when it changes.  For example, if we have a \nUrlTemplateCatalogItem\n instance in a variable named \nurlTemplateCatalogItem\n, we can subscribe to its \nminimumLevel\n property like this:\n\n\nknockout.getObservable(urlTemplateCatalogItem, 'minimumLevel').subscribe(function() {\n    alert('minimumLevel changed!');\n});\n\n\n\n\nMany model classes also define computed properties, which are defined using either \noverrideProperty\n or \nknockout.defineProperty\n.  Computed properties have a getter and optionally a setter.  The getter is invoked once the first time the property is accessed and the value is memoized (cached).  Further accesses of the property will get the memoized value.\n\n\nHowever, Knockout automatically keeps track of the set of observables (including other computed observables) that were accessed during the execution of the getter.  If any of \nthose\n properties change, the computed observable's getter will be invoked again and the new value memoized.  This new invocation may access different observables properties than it did the first time around, and it is those new properties that will trigger any future re-evaluations of the computed property.  We can subscribe to change notification on computed properties in the same way we subscribe to regular observable properties.\n\n\nIt's rarely necessary to explicitly subscribe to an observable, though.  In the React components in the TerriaJS user interface, we use a React mix-in called \nObserveModelMixin\n.  When this mix-in is included in a component, the React \nrender\n method acts a bit like a computed observable.  It automatically keeps track of all the observables that were read in the course of rendering the component.  If any of them change, the component will be automatically re-rendered.\n\n\nWith \nObserveModelMixin\n, in most cases it's not necessary to think very much about the TerriaJS state when developing the UI.  Just write your \nrender\n method as a pure function that produces virtual DOM nodes from the current state of the application, and rest assured that your \nrender\n method will be called again if that state ever changes in a way that might affect what is shown to the user.\n\n\nFor more details of Knockout observables, see \nKnockout-ES5\n as well as the main \nKnockout documentation\n.\n\n\nIt may seem a bit stange that we're using Knockout, which is itself a user interface framework, in a library that uses React for its user interface.  In fact, we're not using the UI or DOM manipulation parts of Knockout at all.  We're only using it as an observable library.  Knockout's observables are feature rich and well tested, and make a great complement to React when paired with our \nObserveModelMixin\n.\n\n\nMajor Components in Models\n\n\nTo help understand the code in Models, here is a summary of some of the major components of TerriaJS:\n\n\nTerria\n\n\nThe root of the TerriaJS application state. A TerriaJS-based application typically has only one \nTerria\n instance, though it is possible to have more in unusual situations.  All other objects can generally be found via this instance.\n\n\nCatalog\n\n\nThe TerriaJS catalog, built up from JSON init files as described in the \nCustomizing\n section.  The \nCatalog\n is what you're looking at when you press the \nAdd data\n button the UI.  It is accessible from the \ncatalog\n property on the \nTerria\n instance.\n\n\nNowViewing\n\n\nAlso known as the Workbench, this is shown in the panel on the left side of the UI, under the Add Data button.  This is the set of all enabled catalog items.  When the \nisEnabled\n property is set to true on a \nCatalogItem\n, it will appear here.  It is accessible from the \nnowViewing\n property on the \nTerria\n instance.\n\n\nCatalogMember\n\n\nThis is the base class for everything in the catalog, including \nCatalogGroup\n, \nCatalogItem\n, and \nCatalogFunction\n.\n\n\nCatalogGroup\n\n\nA group of items in the catalog, shown as a folder in the UI.  The \nCatalogGroup\n class itself has a fixed set of items it holds, but derived classes can and do dynamically load their list of items from a remote server.  For a list of available catalog groups, see \nCatalog Groups\n.\n\n\nCatalogItem\n\n\nA catalog item can be enabled by settings its \nisEnabled\n property to \ntrue\n, at which point it appears in the Now Viewing / Workbench.  Usually an enabled catalog item also has a representation on the map and / or on the chart panel, though this is not strictly required.  For a list of available catalog items, see \nCatalog Items\n.\n\n\nCatalogFunction\n\n\nUnlike a \nCatalogItem\n, a \nCatalogFunction\n cannot be directly enabled.  Instead, the user supplies parameters to the function and invokes it, and the result is a \nCatalogItem\n that is shown on the Workbench.  A Web Processing Service (WPS) is an excellent example of a \nCatalogFunction\n.  For a list of available catalog functions, see \nCatalog Functions\n.\n\n\nGlobeOrMap\n\n\nThe base class for a map view.  TerriaJS currently includes derived classes for a 3D view based on \nCesium\n (\nCesium\n class) and a 2D view based on \nLeaflet\n (\nLeaflet\n class).\n\n\nMapping\n\n\nAll mapping in TerriaJS happens through the abstractions provided by \nCesium\n.  Whether you're using the 3D Cesium view or the 2D Leaflet view, raster map layers are represented using Cesium's \nImageryProvider\n type and vector layers are represented using Cesium's \nDataSource\n and \nEntity\n types.\n\n\nCesium's \ntutorials\n are a great introduction to these topics, especially the \nImagery Layers\n and \nVisualizing Spatial Data\n tutorials.\n\n\nThe code that renders these Cesium types on a Leaflet map is found in the \nMap\n layer, particularly \nCesiumTileLayer\n and \nLeafletVisualizer\n.\n\n\nIn some specialized cases, such as \nCesiumTerrainCatalogItem\n, catalog items directly interact with an underlying mapping engine rather than using the \nImageryProvider\n and \nDataSource\n abstractions.\n\n\nBuild Architecture\n\n\nTerriaJS and TerriaJS-based applications are built using \nWebpack\n.  A number of Webpack loaders are used to handle the various types of assets and transformations that TerriaJS requires.  An application that uses TerriaJS is expected to set up Webpack for its own needs and then call \nconfigureWebpack\n to configure Webpack for TerriaJS.  \nconfigureWebpack\n takes care to avoid impacting Webpack configuration outside of TerriaJS itself.\n\n\nIt may be possible to build a TerriaJS application using a tool other than Webpack, such as Browserify or Rollup, but it is unlikely to be easy.  If you decide to attempt this, consider dropping by \nGitter\n or the \nTerriaJS forum\n.", 
            "title": "Architecture"
        }, 
        {
            "location": "/contributing/architecture/#layers", 
            "text": "TerriaJS has a number of subdirectories of the  lib  directory, each of which corresponds to a conceptual layer in the design of TerriaJS.  The layers are:     Name  Purpose      ThirdParty  This directory contains third-party code that is not available via npm packages for whatever reason.    Core  Low-level utility classes and functions that don't depend on a UI toolkit (i.e. React) or a mapping library (i.e. Cesium or Leaflet).    Map  Classes and functions to work with or extend a mapping library (i.e. Cesium or Leaflet). This layer should not depend on a particular UI toolkit (i.e. React).    Charts  Similar to the  Map  layer, except for charting instead of mapping.  This depends on the charting library (D3) but not on React.    Models  This is heart of TerriaJS.  Classes and functions in this layer know how to interface with catalog servers, map servers, and geospatial data formats.  Most of the logic of a TerriaJS application is found in this layer.  However, it does  not  depend on React.    ViewModels and ReactViewModels  Contains classes and functions that are closely associated with the UI but cannot be described as React components or views.  These two directories are separate mostly for historical reasons; there is little practical difference between them.    ReactViews  This is the React-based user interface of TerriaJS.  All of the React components are found in this layer.", 
            "title": "Layers"
        }, 
        {
            "location": "/contributing/architecture/#user-interface", 
            "text": "TerriaJS uses the  React  library as the basis for its user interface.  The top-level entry point is  StandardUserInterface.jsx .  It is expected that most applications will use this standard user interface, but a sophisticated TerriaJS application could use its own version instead in order to allow extreme customization of the interface.  For styling, we use  Sass  in CSS modules loaded via the Webpack  css-loader , meaning that each React component imports its own local CSS styles from a  .scss  file.  The user interface is meant to be a thin layer with minimal domain-specific logic.  Ideally, all domain-specific logic would reside in the  Models  layer or perhaps in the  ViewModels  layer.  This approach allows the UI to be replaced (including by a user of TerriaJS rather than its developers) without needing to re-implement large chunks of TerriaJS logic.  In fact, the entire user interface can be viewed as optional.  A TerriaJS-based application could replace it with its own custom UI.", 
            "title": "User interface"
        }, 
        {
            "location": "/contributing/architecture/#observables-and-observemodelmixin", 
            "text": "Virtually all TerriaJS state is stored in instances of classes in the  Models  and  ViewModels  layers.  Many changes to this state are initiated by actions in the user interface.  For example, the user clicks an  Add to Map  button and a number of state changes take place that eventually cause the catalog item to appear on the map.  Some changes, however, come from elsewhere.  For example, when the user drags a JSON catalog file onto the map, this may cause any number of changes to objects in the  Models  layer.  In addition, the  Models  layer itself is usable as an API for TerriaJS.  Developers can add custom user interface components or other functionality that manipulate the objects in the  Models  layer.  It's important that the user interface update to reflect the new state, whether the state change was initiated by the core TerriaJS UI or not.  To that end, most of the properties of objects in the  Models  and  ViewModels  layers are observable.  Near the bottom of the constructor of most model objects ( UrlTemplateCatalogItem  for example), you'll see a line like this:  knockout.track(this, ['minimumLevel', 'maximumLevel', 'attribution', 'subdomains', 'tileDiscardPolicy']);  knockout.track  transforms each of the named properties on the given object ( this  in this case) into an observable property.  A Knockout observable property is just like a normal property; you can get and set its value as normal.  On top of that, however, an observable property raises an event when it changes.  For example, if we have a  UrlTemplateCatalogItem  instance in a variable named  urlTemplateCatalogItem , we can subscribe to its  minimumLevel  property like this:  knockout.getObservable(urlTemplateCatalogItem, 'minimumLevel').subscribe(function() {\n    alert('minimumLevel changed!');\n});  Many model classes also define computed properties, which are defined using either  overrideProperty  or  knockout.defineProperty .  Computed properties have a getter and optionally a setter.  The getter is invoked once the first time the property is accessed and the value is memoized (cached).  Further accesses of the property will get the memoized value.  However, Knockout automatically keeps track of the set of observables (including other computed observables) that were accessed during the execution of the getter.  If any of  those  properties change, the computed observable's getter will be invoked again and the new value memoized.  This new invocation may access different observables properties than it did the first time around, and it is those new properties that will trigger any future re-evaluations of the computed property.  We can subscribe to change notification on computed properties in the same way we subscribe to regular observable properties.  It's rarely necessary to explicitly subscribe to an observable, though.  In the React components in the TerriaJS user interface, we use a React mix-in called  ObserveModelMixin .  When this mix-in is included in a component, the React  render  method acts a bit like a computed observable.  It automatically keeps track of all the observables that were read in the course of rendering the component.  If any of them change, the component will be automatically re-rendered.  With  ObserveModelMixin , in most cases it's not necessary to think very much about the TerriaJS state when developing the UI.  Just write your  render  method as a pure function that produces virtual DOM nodes from the current state of the application, and rest assured that your  render  method will be called again if that state ever changes in a way that might affect what is shown to the user.  For more details of Knockout observables, see  Knockout-ES5  as well as the main  Knockout documentation .  It may seem a bit stange that we're using Knockout, which is itself a user interface framework, in a library that uses React for its user interface.  In fact, we're not using the UI or DOM manipulation parts of Knockout at all.  We're only using it as an observable library.  Knockout's observables are feature rich and well tested, and make a great complement to React when paired with our  ObserveModelMixin .", 
            "title": "Observables and ObserveModelMixin"
        }, 
        {
            "location": "/contributing/architecture/#major-components-in-models", 
            "text": "To help understand the code in Models, here is a summary of some of the major components of TerriaJS:", 
            "title": "Major Components in Models"
        }, 
        {
            "location": "/contributing/architecture/#terria", 
            "text": "The root of the TerriaJS application state. A TerriaJS-based application typically has only one  Terria  instance, though it is possible to have more in unusual situations.  All other objects can generally be found via this instance.", 
            "title": "Terria"
        }, 
        {
            "location": "/contributing/architecture/#catalog", 
            "text": "The TerriaJS catalog, built up from JSON init files as described in the  Customizing  section.  The  Catalog  is what you're looking at when you press the  Add data  button the UI.  It is accessible from the  catalog  property on the  Terria  instance.", 
            "title": "Catalog"
        }, 
        {
            "location": "/contributing/architecture/#nowviewing", 
            "text": "Also known as the Workbench, this is shown in the panel on the left side of the UI, under the Add Data button.  This is the set of all enabled catalog items.  When the  isEnabled  property is set to true on a  CatalogItem , it will appear here.  It is accessible from the  nowViewing  property on the  Terria  instance.", 
            "title": "NowViewing"
        }, 
        {
            "location": "/contributing/architecture/#catalogmember", 
            "text": "This is the base class for everything in the catalog, including  CatalogGroup ,  CatalogItem , and  CatalogFunction .", 
            "title": "CatalogMember"
        }, 
        {
            "location": "/contributing/architecture/#cataloggroup", 
            "text": "A group of items in the catalog, shown as a folder in the UI.  The  CatalogGroup  class itself has a fixed set of items it holds, but derived classes can and do dynamically load their list of items from a remote server.  For a list of available catalog groups, see  Catalog Groups .", 
            "title": "CatalogGroup"
        }, 
        {
            "location": "/contributing/architecture/#catalogitem", 
            "text": "A catalog item can be enabled by settings its  isEnabled  property to  true , at which point it appears in the Now Viewing / Workbench.  Usually an enabled catalog item also has a representation on the map and / or on the chart panel, though this is not strictly required.  For a list of available catalog items, see  Catalog Items .", 
            "title": "CatalogItem"
        }, 
        {
            "location": "/contributing/architecture/#catalogfunction", 
            "text": "Unlike a  CatalogItem , a  CatalogFunction  cannot be directly enabled.  Instead, the user supplies parameters to the function and invokes it, and the result is a  CatalogItem  that is shown on the Workbench.  A Web Processing Service (WPS) is an excellent example of a  CatalogFunction .  For a list of available catalog functions, see  Catalog Functions .", 
            "title": "CatalogFunction"
        }, 
        {
            "location": "/contributing/architecture/#globeormap", 
            "text": "The base class for a map view.  TerriaJS currently includes derived classes for a 3D view based on  Cesium  ( Cesium  class) and a 2D view based on  Leaflet  ( Leaflet  class).", 
            "title": "GlobeOrMap"
        }, 
        {
            "location": "/contributing/architecture/#mapping", 
            "text": "All mapping in TerriaJS happens through the abstractions provided by  Cesium .  Whether you're using the 3D Cesium view or the 2D Leaflet view, raster map layers are represented using Cesium's  ImageryProvider  type and vector layers are represented using Cesium's  DataSource  and  Entity  types.  Cesium's  tutorials  are a great introduction to these topics, especially the  Imagery Layers  and  Visualizing Spatial Data  tutorials.  The code that renders these Cesium types on a Leaflet map is found in the  Map  layer, particularly  CesiumTileLayer  and  LeafletVisualizer .  In some specialized cases, such as  CesiumTerrainCatalogItem , catalog items directly interact with an underlying mapping engine rather than using the  ImageryProvider  and  DataSource  abstractions.", 
            "title": "Mapping"
        }, 
        {
            "location": "/contributing/architecture/#build-architecture", 
            "text": "TerriaJS and TerriaJS-based applications are built using  Webpack .  A number of Webpack loaders are used to handle the various types of assets and transformations that TerriaJS requires.  An application that uses TerriaJS is expected to set up Webpack for its own needs and then call  configureWebpack  to configure Webpack for TerriaJS.   configureWebpack  takes care to avoid impacting Webpack configuration outside of TerriaJS itself.  It may be possible to build a TerriaJS application using a tool other than Webpack, such as Browserify or Rollup, but it is unlikely to be easy.  If you decide to attempt this, consider dropping by  Gitter  or the  TerriaJS forum .", 
            "title": "Build Architecture"
        }, 
        {
            "location": "/contributing/using-a-custom-version-of-cesium/", 
            "text": "Working on TerriaJS and Cesium\n\n\nWhat if you need to make changes to \nCesium\n while working on TerriaJS?\n\n\nThe process of using a custom version of Cesium is much the same as using a custom version of TerriaJS.  See the \nDevelopment Environment\n for information on setting up and using \nyarn\n.  To clone Cesium, do:\n\n\ncd packages\ngit clone -b terriajs https://github.com/TerriaJS/cesium.git\ncd ..\n\n\n\n\nIt is important that you use the \nterriajs\n branch of \nTerriaJS/cesium\n because it contains important changes to Cesium that are necessary for it to work with TerriaJS.  If you need to use a different branch of Cesium, you will need to merge that branch with the changes in the \nterriajs\n branch.\n\n\nAnd then run:\n\n\nyarn install\n\n\n\n\nCommitting modifications\n\n\nIf you make changes to Cesium and TerriaJS together, here's the process for getting them to production.\n\n\nFirst, commit your Cesium changes to a branch and open a pull request to merge that branch to master in the official \nTerriaJS/cesium\n repo. Simultaneously, you may want to make a branch of TerriaJS that uses your modified version of Cesium.  To do that, modify TerriaJS's \npackage.json\n.  Where it has a line like:\n\n\nterriajs-cesium\n: \n^1.25.1\n,\n\n\n\n\nChange it to:\n\n\nterriajs-cesium\n: \ngit://github.com/TerriaJS/cesium.git#branchName\n,\n\n\n\n\nReplace \nbranchName\n with the name of the Cesium branch you want to use.  You may even use a repository other than \nTerriaJS/cesium\n if your branch is in a fork of Cesium instead of in the official repository.\n\n\nOnce your Cesium pull request has been merged and a new version of the \nterriajs-cesium\n npm module has been published, please remember to update \npackage.json\n to point to an official \nterriajs-cesium\n version instead of a branch in a GitHub repo.\n\n\nThe \npackage.json\n in the \nmaster\n branch should always point to official releases of \nterriajs-cesium\n on npm, NOT GitHub branches.", 
            "title": "Using a Custom Version of Cesium"
        }, 
        {
            "location": "/contributing/using-a-custom-version-of-cesium/#working-on-terriajs-and-cesium", 
            "text": "What if you need to make changes to  Cesium  while working on TerriaJS?  The process of using a custom version of Cesium is much the same as using a custom version of TerriaJS.  See the  Development Environment  for information on setting up and using  yarn .  To clone Cesium, do:  cd packages\ngit clone -b terriajs https://github.com/TerriaJS/cesium.git\ncd ..  It is important that you use the  terriajs  branch of  TerriaJS/cesium  because it contains important changes to Cesium that are necessary for it to work with TerriaJS.  If you need to use a different branch of Cesium, you will need to merge that branch with the changes in the  terriajs  branch.  And then run:  yarn install", 
            "title": "Working on TerriaJS and Cesium"
        }, 
        {
            "location": "/contributing/using-a-custom-version-of-cesium/#committing-modifications", 
            "text": "If you make changes to Cesium and TerriaJS together, here's the process for getting them to production.  First, commit your Cesium changes to a branch and open a pull request to merge that branch to master in the official  TerriaJS/cesium  repo. Simultaneously, you may want to make a branch of TerriaJS that uses your modified version of Cesium.  To do that, modify TerriaJS's  package.json .  Where it has a line like:  terriajs-cesium :  ^1.25.1 ,  Change it to:  terriajs-cesium :  git://github.com/TerriaJS/cesium.git#branchName ,  Replace  branchName  with the name of the Cesium branch you want to use.  You may even use a repository other than  TerriaJS/cesium  if your branch is in a fork of Cesium instead of in the official repository.  Once your Cesium pull request has been merged and a new version of the  terriajs-cesium  npm module has been published, please remember to update  package.json  to point to an official  terriajs-cesium  version instead of a branch in a GitHub repo.  The  package.json  in the  master  branch should always point to official releases of  terriajs-cesium  on npm, NOT GitHub branches.", 
            "title": "Committing modifications"
        }, 
        {
            "location": "/contributing/setting-up-saucelabs/", 
            "text": "Get an account from \nhttps://saucelabs.com/open-source\n.\n\n\nDON'T bother installing any tunnels or any of that nonsense that it tells you to do. This is actually automatically handled by sauce's npm module which is pretty sweet.\n\n\nGo to \"My Account\" in saucelabs (bottom left menu) and copy your access key (middle of the page roughly).\n\n\nSet env variables for SAUCE_USERNAME and SAUCE_ACCESS_KEY using your OS's method for doing that (\nexport\n in bash) with your sauce username and the access key you just copied.\n\n\nRun \nnpm install -g karma-cli\n Without this karma will sort-of work but give you confusing errors.\n\n\nRun \nnpm start\n in your \nterriajs\n dir in another terminal.\n\n\nRun \ngulp test-saucelabs\n if you have a \nkarma-saucelabs.conf.js\n file, or run \nkarma start\n from the TerriaJS directory if you have a \nkarma.config.js\n file.\n\n\n\n\nIf you want to narrow down the browsers being run (i.e. only run IE9), you can remove them from \nkarma[-saucelabs].config.js\n under \nbrowsers\n.", 
            "title": "Setting up Saucelabs"
        }, 
        {
            "location": "/contributing/problems-and-solutions/", 
            "text": "npm run hot\n hangs, or other crazy things happen\n\n\nThis is usually caused by having two copies of a package, such as a Webpack loader, in different places in your application.  For example, you might have \nMyApp/node_modules/sass-loader\n and also \nMyApp/node_modules/terriajs/node_modules/sass_loader\n.\n\n\nThis happens \nall the time\n if you use \nnpm link\n, so don't use \nnpm link\n.  It is flawed model that interferes with npm's ability to de-duplicate modules, leading to problems like this and many others.  Instead, use \nnpmgitdev\n.  Instructions for installing and using \nnpmgitdev\n are on the \nDevelopment Environment\n page.\n\n\nIt may also happen if there are version conflicts between packages, or if npm's deduplication has decided to take the day off for unknown reasons.  When in doubt, run \nrm -rf node_modules/terriajs/node_modules \n npmgitdev install\n from your application directory.", 
            "title": "Problems and Solutions"
        }, 
        {
            "location": "/contributing/problems-and-solutions/#npm-run-hot-hangs-or-other-crazy-things-happen", 
            "text": "This is usually caused by having two copies of a package, such as a Webpack loader, in different places in your application.  For example, you might have  MyApp/node_modules/sass-loader  and also  MyApp/node_modules/terriajs/node_modules/sass_loader .  This happens  all the time  if you use  npm link , so don't use  npm link .  It is flawed model that interferes with npm's ability to de-duplicate modules, leading to problems like this and many others.  Instead, use  npmgitdev .  Instructions for installing and using  npmgitdev  are on the  Development Environment  page.  It may also happen if there are version conflicts between packages, or if npm's deduplication has decided to take the day off for unknown reasons.  When in doubt, run  rm -rf node_modules/terriajs/node_modules   npmgitdev install  from your application directory.", 
            "title": "npm run hot hangs, or other crazy things happen"
        }
    ]
}